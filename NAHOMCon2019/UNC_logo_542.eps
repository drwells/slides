%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UNC_logo_PMS542.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: Crowell, Charles Bradley
%%CreationDate: 8/18/15
%%BoundingBox: 0 0 264 73
%%HiResBoundingBox: 0 0 263.0430 72.3554
%%CropBox: 0 0 263.0430 72.3554
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 542 C)
%%CMYKCustomColor: 0.5038 0.2050 0.0546 0 (PANTONE 542 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-08-18T07:55:49-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-08-18T07:55:49-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-08-18T07:55:49-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>72</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgASAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qtkliiQySuqIv2nYg&#xA;AfMnCBaCaSubzZ5chJD6hESP5CX/AOIBstGCZ6NZzwHVfb+Z/L9wwWK/hLHoGbgT/wAFTAcMx0UZ&#xA;oHqmYIIqNwehyptdirsVdiqDsf8AerUP+Yhf+oeLJy5D3fpLCPM+/wDQEZkGbsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirT8+DcKF6HiG2Fe1aYhWGavoVjdSmTXdfHqjp&#xA;ArJGieyoxY/T1zNx5SPoi4WTED9cmNanonl2JGaw1pJXUVEUiNv7B1BFfozJhlmecXGnigOUmP5k&#xA;OMnGheadU0iRRFIZbWvx2zmqEf5P8p+WU5cEZ+9uxZ5Q9z1XSdWs9Vsku7Vqo2zKftKw6qw8Rmqy&#xA;YzE0XbY8gkLCMyDN2KoOx/3q1D/mIX/qHiycuQ936SwjzPv/AEBGZBmp3VwltbTXDglIUaRgoqxC&#xA;CpoPHbDEWaRI0LSU+b7cXM1s2n3izW6erOhWL4E2PI/vPfL/AMuauxu0fmBdUdvx3oy+12Cz1O20&#xA;97eZ5rv+5dPT4Gn2qlnUjj8shHETEyvkzllAkI1zasdehvNTudPS2nSW0/vpHCemK/Z3V2+11G2M&#xA;sREQbG6xygyMaOyFHm2AzXUS2F4z2RC3PFYm4lq06SGvTtkvy5objdj44sijsnuUN6TWXmeC8ivJ&#xA;IrK6H1GonV1jU8l+0orJSq9Tl0sBFbjdpjmEr2Oy+88x29ppEWqzW0/1eXieAEZdQ/2Sw5039jgj&#xA;hJlwghMswEeIgr4/MFpM9kLeKW4ivwfSmjCFF47sHqwZePfbE4iLvooyg1XV0WvwS63Jo6284uIl&#xA;MjyMEEfDajA8+RBLAdMTiIjxXsoygy4a3Q6ea7VpL6P6ncq+nKXulYQigHh+8323yXgHbcbsfHG+&#xA;x2XXnmeCzt7SeeyuQt6QsSARcgzfZVh6mxI3/twRwkkgEbJlmAAJB3RltqbXFtPMtncJJAxQ27hB&#xA;IxADfD8fAj4v5shKFGrDOM7HIpfa+cdOuBZv6FxFFfSGG3ldY+JcHjQ8XZhv7ZZLTkXuNmuOoBrY&#xA;7ojUPMdpZ3xsfRluLkRGcpEErwB7c3Tkdui1yMMJIvoynmANdXap5ittOFoZbeeUXhCwmNUpyNKK&#xA;3JkoTXGGEyvcbLPMI1sd2tW8x2+meoZrW4kjhRHmljVCqeoxVVPJ13qO2HHhMuRCMmYR5grT5kiF&#xA;lNdGxugsAR3j4xl/TcEhwA5HHbffHwd6sL4210XWvme0ulsTb288v18OY1X0qoIm4sZPj2H+fXbG&#xA;WEi7PJY5gaoc04yludirsVYt5jtNXkmLMZLm3kYrb2UMot4gqgbzSGjMWPRa/TmVhlEDu8+fycXN&#xA;GRPf5cvmlr6Pd6fDFeT/AFCwsfh9V4bc3EqV6gMyz16farTLRkEjQ4iffX6ms4zEWeED3X+tMNI0&#xA;u/voxdQa9I1g7MFENusDMFJAoxApQ/5NMryTEdjHf3s8cDLcS29yhrWn6pp0JuLjXqwk8V9e0EoA&#xA;7BmVZPv44cc4yNCP2oyQlEWZfYx+++tR2cd9dabZ32nzVCXkEbQE0JG/D0mXcftJmTGiaBIPdzce&#xA;VgWQCO/kyHyLYcVOo2JeKwueST2kx5EMn2XjcAchWo3AzG1Uv4TzDkaWP8Q5FmOYbmOxVB2P+9Wo&#xA;f8xC/wDUPFk5ch7v0lhHmff+gIzIM3YqkFnpepx+arrU5I4xa3EYhFJKsAoFGpx78elcyJTj4Yj1&#xA;DRGEvEMuhW67ol5qGt6fcrFG9na8hKGkKs3PY0AHbr13xxZRGJHUoy4zKQPQN+X9HvtP1bUppIo0&#xA;tLxlMPCQsyiPkFBBHcN445cglEDqFxYzGRPQpd/hvVTqGoXklrFI1zKk1sPrDqEeMkrzCrRxWmWe&#xA;NGgL5eTX4MuImufmzBOXEc6cqDlTpXvmG5jGotK12yn1SG2ihnt9TlklSZ5ChiMoNeS8W5Ur2zKO&#xA;SEgCecXGGOcSQOUkfqGnXf6MsrO1RZjbSW7OZG4ArbsreDfa45XCY4iT1v7Wc4HhAHSvsQlj5WbT&#xA;9fW7s5OOmsHZrUk/BIwpVB4HJyz8UKP1MY4OGdj6VS30vU083T6o6R/VJYPq60c8wBxYMV49ytKV&#xA;wGcfDEeqRCXicXSlmreWpbvXoL2JwltKoj1JK/3iRsHQU78ioU+2OPNUCOvRGTDcwenVd5s0jUNT&#xA;FmlrGjJbzCaQvIUJ47cRQE7+OODII3a58ZlVdETpFne2NrcxpaxxqXMlvD6zSEs27c5GHj7ZHJIS&#xA;I3Z44mIOzG9N8o69ZfU519GSeykJEEkjPE6uallBU+m48R8+2+RPUQlY73Ghp5xo9yY+ZNB1DVW5&#xA;raxevwj+r3AlKPC9auCQvxr4ZXhyiPVszYjPor6/o2rXkGlxw+nM9lIks8kjlS7RgDbZvtb4MWSI&#xA;Jvqyy45ECuiL80afe6lostjaqhlnKVLtxChXD+Br9mmQwTEZWWWeBlGgj7COaOxgjnULKiKjqp5D&#xA;4RTrQZXMizTZEbbpL5Y0O6029v5ZreKKO5ctB6blii1J9OhUbb5dmyiQFHk04cRiTtzZFmO5DsVd&#xA;irFPzJVf0AjFQWE6AMQCQCrVoe3TMvR/X8HE1n0fFD6iiJ+WSBQFBhgNBtu0qEn6SclD+/8Amxn/&#xA;AHHwCceSv+UXsP8AVf8A5ONlOp/vC3ab+7CE/MT/AJRxv+Msf8cnpPrYav6EFqiqfy1iYqGKQW5Q&#xA;kA0JdVqK9DQkZOH9/wDNhP8AuPgE08iKo8rWZAALGUsR3PquN/uyrVf3hbdL/dhP8x3IdiqDsf8A&#xA;erUP+Yhf+oeLJy5D3fpLCPM+/wDQEZkGbsVdiqFtdTsbuaSK3k9R4vtEKwXqVqrEcW3BGxyUoEc2&#xA;MZg8kT6iFygYcx1Wu/3ZGmVtLJG5IRgxHWhBpjS25ZomdkV1Z1+0oIJHzGGkWte5t0NHlRSNqMwH&#xA;X54gFbC5pI1XmzBVNKMSAN+m+NJtaLi3LBRKhY7ABhUnGiiw360NSPUWq15CoqKdcaK22kkbiqMG&#xA;A60IP6sFJttmVQSxAA6k7DFWo5YpByjdXXrVSCPwwkUgFySxOzKjqzIaOAQSD4GnTGlta9zboaPK&#xA;imtKFgDXwxorYVAQRUdMCVkc0MlfTdX4/a4kGn3YSCEAtiaIvwDrz6caiv3Y0tueWJKc3Va9KkD9&#xA;eNLbjJGGClgGboCRU40m3epHz4chzH7NRX7sFLblmiZ2jV1aRPtoCCR8xhpFsX/Mj/lH0/5iE/4i&#xA;2ZWj+v4OLrPo+KH1P/yWif8AGC3/AOTqYYf3/wASxn/cfAJv5K/5Riw/1W/5ONlWp/vC3ab+7CC/&#xA;MZuPl2lPtToPwY/wyej+thrPoQup/wDktE/4wW//ACdTJQ/v/iWE/wC4+ATTyL/yitj/AM9f+Tz5&#xA;Xqv7wtul/ux+OqfZjuQ7FUHY/wC9Wof8xC/9Q8WTlyHu/SWEeZ9/6AjMgzU7qYwW00wUuYkZwg6t&#xA;xFaD54YizSJGhbD7LWdWntb2+e7Z7UaeZnZFULHdEkiNDTso3rmZLHEECt+L7HDjkkQTe3D9rIfL&#xA;VmbTQrKEsWPpK55U2LjkQKAbAnMfNK5kuRhjUAEg1yxF55mlk0y6SHVrS2ikiVWUGRw0nNHHjw49&#xA;e3XbMjFKoeoekloyRufpPqAUrJ7248s67dWdt9U1GWfjJFGOLjgkfqKKb93IHvhlQnEE2KYxJMJE&#xA;Cjf6lO9Gm3Gl6L+hQg1VJIgqw0EqgL+99Sm9A3UthjxCUuL6US4TGPD9TvNE1svmpFto7ee5e1aN&#xA;oXpRpWJCq1P2yKcQfbHAD4e91a5iPE2q6THyqmjXXlyC0mlE31NjLcwzUX02DFqMpr8AyvPxCdjq&#xA;24OEwAPRQ8l2+k3JvGURG5t7+WWBk48xEQFWlN+B39sOpMhXdwsdMIm+/iQ8b2484a40L2qxrDWU&#xA;zJzWixr69ApXeteeSN+HG7/HJiCPEly/HNMfy6Fr/h8elx9cyObilOVa/Dy/2PTK9XfG2aOuBvzX&#xA;RdV0h76p0UO31lSD6Ykp+7MnalfH3xwfTKvqXP8AVG/pRFvfeW7F9TvbJowiRxtctEVEJZQ/BUpt&#xA;zbvT275ExnKgWQlCNkMf0G8OleYYmupYxHrEIkmcShx6rEsrnYU5GoHzzIyx44bfwuPilwT3/iWe&#xA;Y5Iv8VXSWkUFxNJZtGYWoeUprXYdZOPQdccI/di75rmP7w1R2VpbkSeRIINOme4NsyDUYxUSrGSx&#xA;ZSBuFrsPYYAKyknrySTeICO9c0Zd/o+bXNEl0H0y4P8ApP1anEW2395x6bVoDkI2IS4/wWcqM48H&#xA;4C1bzRLXz1ezTyQRqtuKSHjQSgjnv/P198PDI4gBfNeKIykmuS3zrc6dcJolw3EerOsg9QUPoGhb&#xA;kD0Xp1x00ZDiHkjUmJ4T5/YjfNVjp9/e6damdLe7cObaVSocEAGKnfiW6fhkMEjEE1YZ54xkQLoo&#xA;fQbmVdWvbjWoY7e9sLZI5rogAOvJv3lf8pQB/nTJZY+kCPIlGKXqJlzASqx1P6jr9lrE8kaQauJP&#xA;XpKHorOeBYfsBPhX/YnLZQ4oGI/haYz4ZiR/iTr8yP8AlH0/5iE/4i2U6P6/g3az6PihtVcL+WsQ&#xA;P7cNuB/wan+GSx/3/wA2OT+4+AatNYu9J8j6feW/omnJWSYP8VXagXh3274yxieUgrHIYYgQhfMe&#xA;p3WqeR7e+uVRGmuRxSMEAKvNN6k71U5PDARykDuYZpmWIE96M1P/AMlon/GC3/5OplcP7/4lnP8A&#xA;uPgE08i/8orY/wDPX/k8+V6r+8Lbpf7sfjqn2Y7kOxVB2P8AvVqH/MQv/UPFk5ch7v0lhHmff+gI&#xA;zIM3YqgdR0pL88Jp5RbMoWW1UqEejBviPHl27HJwycPLmwnDi58kcAAKDYDoMgzdirsVaCqCSAAT&#xA;1PjireKuxV2KuxV2KuIBFD0xVwAAoNgOgxV2KuxV2KuAArQUruaeOKuxV2KuxV2KuxVi35gK1zpH&#xA;1W2BmuY5Y5Hgj+JwlGHIqN6V75laTaVnk4ur3jQ5oTXYpYvy7gjlQxyJHAGRgQwPIbEHJ4jeY/Fh&#xA;lFYfkgri2u738vtMgtLeS4kMpJEalqBGkBJp75MERzEksCDLCAApapBc2/5e2lvcwvBNFckMkg4n&#xA;dpGBof8AWwwIOYkdzGYIwgHvTe9hnn/LmKKCNpZWgg4oilmPF1Y7D2GVRIGaz3lukCcNDuCZeS1M&#xA;GgWdnOPSu0WR3t3+GQK0rEEqdwDXKtTvMkcm3TbQAPNPcob3Yqg7H/erUP8AmIX/AKh4snLkPd+k&#xA;sI8z7/0BGZBm0zKilmIVVBLMdgAO+KpLb+aIbie5SK3f0YLY3azMQOafs0XtyoSK5ecFAb9aaBmB&#xA;J26Wi9Bvbu+0yK7uoxE89XRAaj02NU/4XIZYiMqDPFIyjZQMmpajeeYbjSbWUWkVpEsks3AO7s4B&#xA;AUN8IHxeGTEIiAkd7YGZMzEbUu1K51qx8vXVzLMn1y2ZmWRUHF4w1FqvaoO+MBGUwOhWcpRgT1CV&#xA;zeYNVZdGjguGWa+ZI7l5LV0Wr0PJC4VWpWmx98tGKPqscvNqOWXpo8/JGec9eu9NihjsZY4rkhpn&#xA;9TjvGlF4gN1LFu2+xyGnxCXPkz1GUxG3NE6nrEzeWG1awkEbeksy1Acb9VNfAnIwxjxOEsp5PRxB&#xA;CeXtY1a81D0Xc3Nm1skrXJi9PhMwFUBAVW65PLjiBfI2xxZJE1zFIS08was93Nby3R9SO/FnGBb/&#xA;ALtlD0JaT7Kmldq19slLFGrr+G+bCOWV1f8AFXJMdY1HUoPMOm2ME4S3veXqAoGI4CuxPjleOETA&#xA;k9GzJOQmAOrIMx3IY7qOsX1p5nt7Myt9Rlh9Zo44Glf4SRxHAM1DTrTbMmGMHGT197jzyETA6e53&#xA;lfVdS1G41IXEwaK1mMMIMXptsT8TA0INB9kjBnhGIFdVwZJSJvo35Y1HVdQTURdXCl7eZ7eJkjVa&#xA;Ff26b/djnhGNUOa4JyldnkqeT9Tv9SsJrm8kDsszRIqqFACAb7eNcGogImgnTzMhZWaPqOpT+YdS&#xA;sZ5w9vZcfTAQKTzFdyPDDkhEQBHVGOcjMg9GQZjuQ7FXYq7FXYq8x1qeVrpP8Q2s9rfxDhHqVrTi&#xA;4B2PA0U/7Fhmzxjb0EEdxdZkO/rBB7wsj1HUBHwtfMUc0ZFDFeK4NPAiVJE/4bCYDrD5IEz0n80T&#xA;H5j81QR0S+sXjQcVUSWy/coKZE4cZ6H7WQzZB1j9iEvvN/mMo0c11bOrDeNUilH/ABFxk46eHQFh&#xA;LUT7wls/mjzBMvFr6VU6cYz6Yp4UTjlgwQHRqOeZ6rdJ03W9Quf9AWVpGPxzgsqj3Z8OScYjdccJ&#xA;yOz2fNK7p2KoOx/3q1D/AJiF/wCoeLJy5D3fpLCPM+/9ARmQZrJ4Y5oZIZBWOVSjjpVWFDhBo2gi&#xA;xSV23lbSbdLhIxKfrMAtpS0jE8AvHv3p/ZlpzyNeTUMERfnsmNnaQ2ltHbQ8vSiUKnJixoPc5XKV&#xA;my2xjQoIW70O1uL5b9ZJba8VPTM0LBSydeLAhlP3ZKOUgVzDCWME3yKyXy/ay6ZJp7zTGKZy88vI&#xA;GSQsankxH8O2EZSJWg4gY0ozeVrOVbINc3NdPAFswdagg1BPw0JGw+WEZyL2G6DgBrc7IifRIZrm&#xA;5uGuJw91F6DqGXiE8FBXbqfvyIykACuTI4wSTfNDr5VsV0dtJE9x9TZuVOY5U6lQeP2Sd6ZLxzxc&#xA;VC2PgDh4d6TGzsltbJLRJZHSNeCO5BcACg3AA27bZXKVm2yMaFJXF5Ss4vWCXl2FuXMlwvqAB2Jq&#xA;S1F798tOoJ6DZqGADqd1fUvLtrqF7DeS3E8c1v8A3JidVC160+EnfIwzGIqgynhEjdnZG2FjFZQm&#xA;JHeQszPJLKeTszd2O3yyEpcRZxjQQ0uhW8urx6qZphcRKERQy8Andaceh775IZSI8PRicQMuLqs0&#xA;ny9a6ZLcSwTTu90eU3qOGq1SeXQb74cmUyq+iMeIRuurtL8vW2mpcLbXE/8ApJLSM7KxDt+2Dx+1&#xA;88Z5TKrA2WGIRuid1Cx8o2FnxWK4uWhEomNu0gMbOpBBZQoruBkpagnoGMcAHUuPlO0Nzc3K3l2k&#xA;t3tcFJFXkOlNlx8c0BQ2XwBZNndOY40jjWOMcUQBUUdAAKAZSTbeBS7ArsVdirsVadEdSjqGQ7FW&#xA;FQfoOIKpZceVvLtwayafDXxRfT/4hxy0Z5jq1HBA9EG/kLyu3S0Kf6ssn8WOTGqyd7D8rj7nJ5D8&#xA;rr1tC/8ArSyfwYYnVZO9RpcfcjLbyv5etzWKwhqOhdeZ/wCH5ZA55nqzGCA6JmqqqhVAVRsANgMq&#xA;bW8VdiqGtI3S4vWZSBJMGQ+I9GNa/epyUjsPx1YxG5/HRE5Fk7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:aa030e22-479d-4da4-bf15-5e16202ec851</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:aa030e22-479d-4da4-bf15-5e16202ec851</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:abe29066-0583-4acb-b87b-40517a27aa00</stRef:instanceID>
            <stRef:documentID>xmp.did:abe29066-0583-4acb-b87b-40517a27aa00</stRef:documentID>
            <stRef:originalDocumentID>uuid:24C4C2A7BC1E11DBBEFE8A997979B8C9</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:abe29066-0583-4acb-b87b-40517a27aa00</stEvt:instanceID>
                  <stEvt:when>2015-08-18T07:54:07-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aa030e22-479d-4da4-bf15-5e16202ec851</stEvt:instanceID>
                  <stEvt:when>2015-08-18T07:55:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:24C4C2A7BC1E11DBBEFE8A997979B8C9</xmpMM:OriginalDocumentID>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 542 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>New Color Swatch 1</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>62.000000</xmpG:cyan>
                           <xmpG:magenta>22.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>3.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 542 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>68.627449</xmpG:L>
                           <xmpG:A>-10</xmpG:A>
                           <xmpG:B>-25</xmpG:B>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -72.3554 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 72.3554 li
263.043 72.3554 li
263.043 0 li
cp
clp
34.3028 23.8789 mo
34.4473 23.8789 li
34.4238 23.875 34.3985 23.8711 34.375 23.8711 cv
34.3477 23.8711 34.3242 23.875 34.3028 23.8789 cv
cp
false sop
/0 
<<
/Name (PANTONE 542 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ .503746 .20499 .0545968 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
34.125 24.5 mo
34.125 24.5078 34.127 24.5175 34.1289 24.5273 cv
34.1289 24.0117 li
34.1289 24.0117 li
34.1289 24.0117 li
34.127 24.0195 34.125 24.0273 34.125 24.039 cv
34.125 24.5 li
cp
f
34.1289 24.5273 mo
34.1289 24.5273 li
34.1289 24.0117 li
34.1289 24.0117 li
34.1289 24.5273 li
cp
f
29.75 23.6914 mo
29.7578 23.6914 29.7617 23.6875 29.7695 23.6875 cv
29.7324 23.6875 li
29.7383 23.6875 29.7442 23.6914 29.75 23.6914 cv
cp
f
34.1289 24.5273 mo
34.1289 24.5273 li
34.1289 24.5273 li
34.1289 24.5273 li
34.1289 24.5273 li
cp
f
25.6016 20.3672 mo
25.7149 20.4765 25.7852 20.4609 25.7852 20.4609 cv
34.2383 20.1289 39.082 23.3437 39.4922 24.6621 cv
42.8711 24.6015 li
43.9219 22.3164 li
43.9863 22.1269 43.9531 21.8476 43.8867 21.7734 cv
42.8711 20.6445 34.3633 18.2148 24.0977 18.2148 cv
13.1445 18.2148 6.19731 20.3769 4.73441 21.4609 cv
4.73441 21.4609 4.38281 21.6718 4.37311 21.9922 cv
4.36721 22.1406 4.58201 22.5547 4.58201 22.5547 cv
4.87891 23.1992 li
4.97271 23.3867 5.10161 23.375 5.32421 23.2461 cv
5.32421 23.2461 5.52351 23.1836 5.56251 23.0527 cv
5.60161 22.9218 5.47851 22.6953 5.47851 22.6953 cv
5.25981 22.25 5.54881 22.1914 5.56641 22.1836 cv
6.19341 21.8984 li
6.49221 21.8125 6.52741 21.9707 6.62701 22.207 cv
6.62701 22.207 6.74221 22.5351 6.82421 22.5859 cv
6.98051 22.6836 7.48051 22.3984 8.97271 22.0351 cv
9.07421 22.0156 9.12891 22.0058 9.32811 21.9257 cv
9.47271 21.8672 9.34381 21.3672 9.34381 21.3672 cv
9.29101 21.1172 9.17581 20.8672 9.71881 20.7773 cv
10.6524 20.5918 li
11.086 20.4765 11.127 20.7031 11.1797 20.9531 cv
11.1797 20.9531 11.207 21.332 11.3047 21.4882 cv
11.4278 21.6875 11.6524 21.3711 14.5 21.0664 cv
14.5 21.0664 14.9141 21.0547 14.9961 20.9121 cv
15.082 20.7617 15.0117 20.4257 15.0117 20.4257 cv
14.9805 20.082 14.8399 19.83 15.5 19.789 cv
16.7461 19.6757 li
17.6797 19.5234 17.5215 19.8359 17.5547 20.1797 cv
17.5547 20.1797 17.586 20.5507 17.6563 20.6172 cv
17.7266 20.6855 18.0215 20.6797 18.0215 20.6797 cv
19.6192 20.5156 20.5117 20.5234 22.207 20.4511 cv
22.207 20.4511 22.4434 20.4492 22.5313 20.3515 cv
22.6172 20.2539 22.5938 20.1484 22.5938 20.1484 cv
22.5938 19.957 22.5528 19.6523 22.6758 19.5195 cv
22.8164 19.373 23.0352 19.4394 23.2578 19.4394 cv
24.6836 19.4375 li
24.9024 19.4375 25.3516 19.3398 25.4785 19.4961 cv
25.5606 19.5976 25.5352 20.2031 25.5352 20.2031 cv
25.5352 20.2031 25.5352 20.3007 25.6016 20.3672 cv
cp
f
24.1641 6.6328 mo
15.8985 6.6328 10.8164 9.2851 7.56061 12.4804 cv
7.56061 12.4804 7.50391 12.5351 7.47461 12.6172 cv
7.41411 12.7812 7.39851 13.0214 7.73441 12.9062 cv
14.8125 9.9355 22.5469 11.7968 25.0117 14.5976 cv
25.0977 14.7265 25.0195 14.7597 24.916 14.7617 cv
22.4258 14.7871 20.3399 14.6406 15.7383 15.2851 cv
13.25 15.6367 11.0371 15.998 9.16801 16.4843 cv
6.08991 17.2851 3.90821 18.2851 2.68951 19.0937 cv
2.24221 19.3359 2.20701 19.5078 2.09571 19.7148 cv
1.96491 20.1152 1.98051 20.1132 1.89451 20.3867 cv
1.74221 20.9023 1.66411 21.2343 1.63481 21.4062 cv
1.58201 21.7187 1.92381 21.6093 2.10161 21.4277 cv
2.47271 21.0566 3.48831 20.1601 4.98051 19.4648 cv
6.50001 18.7578 9.01561 17.9531 11.7422 17.4492 cv
15.3789 16.7773 19.8067 16.3496 23.8555 16.3398 cv
28.5508 16.3281 32.7578 16.8144 36.2774 17.5 cv
39.8535 18.1992 42.6836 19.1679 44.5117 20.0586 cv
45.3711 20.4765 45.8516 20.8593 46.4278 21.3496 cv
46.8828 21.8144 46.9102 21.414 46.9024 21.2929 cv
46.9024 21.2929 46.8164 20.6718 46.0547 19.2714 cv
43.7188 14.9765 37.4766 6.6328 24.1641 6.6328 cv
f
24.6367 67.8867 mo
8.251 67.8867 .0273695 64.0527 .0273695 61.9062 cv
.0332289 61.9062 li
2.57653e-05 59.8418 li
-.000950797 59.7939 .0259047 59.75 .0683851 59.7285 cv
.11233 59.707 .162623 59.7119 .200709 59.7402 cv
7.29788 65.1269 24.1436 65.8359 31.3789 63.4433 cv
31.6045 63.3613 31.6866 63.2753 31.687 63.2275 cv
31.6875 63.1855 31.6289 63.1347 31.605 63.125 cv
31.377 63.0595 31.2598 63.0732 31.0825 63.0908 cv
31.0044 63.0996 30.9175 63.1093 30.8096 63.1132 cv
19.2725 64.3418 7.16506 62.0556 3.09915 59.1523 cv
3.06594 59.1289 3.04641 59.0898 3.0469 59.0498 cv
3.0762 56.5302 li
3.07669 56.4794 3.10794 56.4335 3.15481 56.415 cv
3.20169 56.3964 3.25637 56.4082 3.29104 56.4443 cv
3.82327 56.9921 5.87405 57.9335 9.90139 58.7822 cv
12.8789 59.4091 17.8008 60.1562 24.3399 60.1562 cv
34.1118 60.1562 42.3438 58.4052 44.5293 57.1416 cv
45.0655 56.8339 45.3345 56.5947 45.3545 56.5234 cv
45.355 56.4541 45.4199 56.4043 45.479 56.4023 cv
45.5459 56.4023 45.6011 56.4589 45.6035 56.5263 cv
45.6577 58.041 li
48.1719 58.0781 49.0288 58.1904 49.1177 58.7617 cv
49.1426 58.8037 49.149 58.8642 49.1553 58.9267 cv
49.1582 58.9365 49.1597 58.9472 49.1602 58.957 cv
49.2422 61.9023 li
49.2422 63.9355 40.5572 67.8867 24.6367 67.8867 cv
cp
f
34.4141 22.6992 mo
29.9004 22.6953 li
29.6797 22.6914 29.582 22.8047 29.5781 23.0234 cv
29.5781 23.5293 li
29.5762 23.7675 29.6797 23.873 29.918 23.875 cv
31.3164 23.875 li
31.4453 23.8672 31.4785 23.9257 31.4844 23.9453 cv
31.5391 24.0859 31.2813 24.2031 31.1953 24.2617 cv
30.5059 24.7109 li
30.4102 24.7695 30.3203 24.8964 30.3223 25.1425 cv
30.293 57.4882 li
30.3594 58.0547 31.2617 58.1093 32.2461 58.1054 cv
33.0762 58.1015 34.0547 58.0566 34.1582 57.5039 cv
34.1582 57.5039 34.1309 26.7187 34.1602 24.0605 cv
34.1641 23.9375 34.2188 23.9101 34.2383 23.8984 cv
34.2695 23.8789 34.4102 23.8672 34.4102 23.8672 cv
34.6172 23.8593 34.7266 23.7578 34.7285 23.5527 cv
34.7285 23.0078 li
34.7188 22.8086 34.5899 22.705 34.4141 22.6992 cv
cp
f
24.3999 56.1562 mo
23.0083 56.1562 21.5738 56.1201 21.4688 56.0488 cv
21.2642 55.9091 21.314 55.1806 21.3916 54.5927 cv
21.3975 54.5478 21.4278 54.5097 21.4702 54.4931 cv
21.9239 54.3164 li
21.9239 48.3242 li
21.9234 48.3232 21.9136 48.205 21.9732 48.0507 cv
22.0386 47.8896 22.2134 47.7793 22.2657 47.749 cv
22.6817 47.4775 23.5777 46.8916 24.1143 46.5341 cv
24.1817 46.4892 24.2217 46.4384 24.23 46.3876 cv
24.2368 46.3447 24.2207 46.3125 24.2139 46.3037 cv
24.1729 46.2529 24.0396 46.249 23.9512 46.246 cv
23.8819 46.248 23.8531 46.247 23.8228 46.248 cv
23.7359 46.2529 23.6045 46.2578 22.3936 46.248 cv
22.3667 46.247 22.1568 46.2392 22.0406 46.1894 cv
21.9375 46.1445 21.8594 46.0634 21.8506 46.0546 cv
21.8418 46.0449 21.834 46.0341 21.8286 46.0224 cv
21.3931 45.1093 li
21.1387 45.1093 li
21.1055 45.1093 21.0733 45.0957 21.0498 45.0722 cv
21.0264 45.0488 21.0132 45.0166 21.0137 44.9834 cv
21.0157 44.7802 li
21.0161 44.7119 21.0723 44.6562 21.1407 44.6562 cv
27.4082 44.6562 li
27.4766 44.6562 27.5327 44.7119 27.5332 44.7802 cv
27.5352 44.9834 li
27.5357 45.0166 27.5225 45.0488 27.4991 45.0722 cv
27.4756 45.0957 27.4434 45.1093 27.4102 45.1093 cv
27.1826 45.1093 li
26.6094 46.2714 li
26.6094 54.3125 li
27.064 54.4677 li
27.1094 54.4834 27.1416 54.5234 27.1475 54.5712 cv
27.2549 55.4541 27.2281 55.955 27.0679 56.0585 cv
26.9629 56.124 25.7002 56.1562 24.3999 56.1562 cv
cp
f
43.168 24.4609 mo
38.6524 24.457 li
38.4336 24.4531 38.332 24.5664 38.3281 24.7871 cv
38.3281 25.291 li
38.3281 25.5312 38.4297 25.6328 38.6699 25.6367 cv
40.0703 25.6367 li
40.1973 25.6289 40.2305 25.6875 40.2363 25.707 cv
40.291 25.8476 40.0332 25.9648 39.9453 26.0234 cv
39.2578 26.4726 li
39.1602 26.5312 39.0703 26.6562 39.0742 26.9062 cv
39.0449 56.0664 li
39.1113 56.6367 40.0117 56.6875 40.9961 56.6836 cv
41.8281 56.6816 42.8047 56.6367 42.9102 56.0839 cv
42.9102 56.0839 42.8828 28.4804 42.9141 25.8222 cv
42.9141 25.6992 42.9688 25.6718 42.9883 25.6601 cv
43.0195 25.6406 43.1602 25.6289 43.1602 25.6289 cv
43.3672 25.6211 43.4785 25.5195 43.4805 25.3144 cv
43.4805 24.7695 li
43.4707 24.5703 43.3438 24.4668 43.168 24.4609 cv
cp
f
18.4961 22.6992 mo
13.9844 22.6953 li
13.7637 22.6953 13.6641 22.8066 13.6602 23.0273 cv
13.6602 23.5312 li
13.6602 23.7695 13.7617 23.875 14.002 23.875 cv
15.4004 23.875 li
15.5274 23.8672 15.5606 23.9297 15.5664 23.9453 cv
15.6211 24.0859 15.3633 24.205 15.2774 24.2617 cv
14.5899 24.7109 li
14.4922 24.7695 14.4024 24.8984 14.4043 25.1445 cv
14.375 57.4922 li
14.4414 58.0566 15.3438 58.1113 16.3281 58.1054 cv
17.1602 58.1054 18.1367 58.0586 18.2403 57.5078 cv
18.2403 57.5078 18.2149 26.7226 18.2442 24.0625 cv
18.2461 23.9394 18.3008 23.9101 18.3203 23.8984 cv
18.3516 23.8789 18.4922 23.8672 18.4922 23.8672 cv
18.6992 23.8632 18.8086 23.7578 18.8106 23.5547 cv
18.8106 23.0097 li
18.8008 22.8105 18.6719 22.705 18.4961 22.6992 cv
cp
f
9.71491 24.5449 mo
5.19921 24.539 li
4.98051 24.539 4.87891 24.6523 4.87501 24.8711 cv
4.87501 25.375 li
4.87501 25.6132 4.97661 25.7187 5.21681 25.7187 cv
6.61721 25.7226 li
6.74421 25.7109 6.77741 25.7734 6.78321 25.7929 cv
6.83791 25.9316 6.58011 26.0507 6.49221 26.1093 cv
5.80471 26.5566 li
5.70701 26.6132 5.61721 26.7422 5.62111 26.9882 cv
5.59181 56.1523 li
5.65631 56.7187 6.56061 56.7714 7.54301 56.7695 cv
8.37501 56.7675 9.35161 56.7187 9.45701 56.1679 cv
9.45701 56.1679 9.42971 28.5664 9.46101 25.9062 cv
9.46101 25.7851 9.51561 25.7558 9.53521 25.7441 cv
9.56641 25.7226 9.70701 25.7109 9.70701 25.7109 cv
9.91411 25.707 10.0254 25.6054 10.0274 25.3984 cv
10.0274 24.8554 li
10.0176 24.6562 9.88871 24.5507 9.71491 24.5449 cv
cp
f
.8 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
68.1094 0 mo
68.1094 72.3554 li
@
98.4361 15.9931 mo
97.8237 15.9931 li
97.6411 14.7041 97.3945 14.4179 96.5352 14.4179 cv
95.064 14.4179 li
95.064 19.7685 li
95.064 20.9013 95.2202 21.083 96.4966 21.083 cv
96.4966 21.6943 li
91.4453 21.6943 li
91.4453 21.083 li
92.7207 21.083 92.877 20.9013 92.877 19.7685 cv
92.877 14.4179 li
91.3281 14.4179 li
90.7163 14.4179 90.2998 14.666 90.1172 15.9931 cv
89.5059 15.9931 li
89.7534 13.3896 li
90.3125 13.3896 li
90.3653 13.4677 90.417 13.5205 90.5205 13.5595 cv
90.6123 13.5849 90.7554 13.5976 90.9634 13.5976 cv
96.8218 13.5976 li
97.4331 13.5976 97.5117 13.5849 97.6411 13.3896 cv
98.2017 13.3896 li
98.4361 15.9931 li
cp
f
108.758 17.1259 mo
108.758 15.498 li
108.758 14.4697 108.55 14.2353 107.665 14.2099 cv
107.665 13.5976 li
112.078 13.5976 li
112.078 14.2099 li
111.128 14.2353 110.945 14.4697 110.945 15.3281 cv
110.945 19.7939 li
110.945 20.707 111.049 21.0693 112.078 21.083 cv
112.078 21.6943 li
107.665 21.6943 li
107.665 21.083 li
108.511 21.0439 108.758 20.8359 108.758 19.8193 cv
108.758 17.9336 li
104.853 17.9336 li
104.853 19.8593 li
104.853 20.6513 104.944 21.0566 105.986 21.083 cv
105.986 21.6943 li
101.521 21.6943 li
101.521 21.083 li
102.419 21.0439 102.666 20.8867 102.666 19.8193 cv
102.666 15.4609 li
102.666 14.4179 102.379 14.2099 101.521 14.2099 cv
101.521 13.5976 li
105.986 13.5976 li
105.986 14.2099 li
105.113 14.2617 104.853 14.3789 104.853 15.4472 cv
104.853 17.1259 li
108.758 17.1259 li
cp
f
122.986 13.5976 mo
123.104 15.5371 li
122.491 15.5371 li
122.375 14.6533 122.178 14.4052 121.541 14.4052 cv
118.99 14.4052 li
118.99 17.2431 li
120.669 17.2431 li
121.594 17.2431 121.841 17.0478 121.841 16.2529 cv
122.452 16.2529 li
122.452 18.9736 li
121.841 18.9736 li
121.841 18.2461 121.632 18.0498 120.682 18.0498 cv
118.99 18.0498 li
118.99 20.1464 li
118.99 20.8359 119.068 20.8867 119.771 20.8867 cv
121.281 20.8867 li
122.414 20.8867 122.712 20.3935 122.909 19.5341 cv
123.52 19.5341 li
123.35 21.6943 li
115.411 21.6943 li
115.411 21.083 li
116.594 21.083 116.803 20.8095 116.803 19.8857 cv
116.803 15.4062 li
116.803 14.3017 116.426 14.2099 115.501 14.2099 cv
115.501 13.5976 li
122.986 13.5976 li
cp
f
141.707 13.5976 mo
141.707 14.2099 li
140.613 14.2099 140.395 14.4052 140.395 15.4472 cv
140.395 18.3222 li
140.395 20.9267 138.781 21.9023 136.555 21.9023 cv
134.184 21.9023 132.635 20.8486 132.635 18.9218 cv
132.635 15.4726 li
132.635 14.5869 132.452 14.2099 131.542 14.2099 cv
131.542 13.5976 li
135.982 13.5976 li
135.982 14.2099 li
135.043 14.2099 134.821 14.4834 134.821 15.3564 cv
134.821 18.8183 li
134.821 20.0273 135.474 20.7841 137.076 20.7841 cv
138.807 20.7841 139.469 19.8593 139.469 18.206 cv
139.469 15.4609 li
139.469 14.456 139.223 14.2099 138.168 14.2099 cv
138.168 13.5976 li
141.707 13.5976 li
cp
f
154.777 13.5976 mo
154.777 14.2099 li
153.842 14.2099 153.607 14.4697 153.607 15.3818 cv
153.607 21.7861 li
152.58 21.7861 li
146.682 15.5634 li
146.682 19.8593 li
146.682 20.7197 146.813 21.083 147.918 21.083 cv
147.918 21.6943 li
144.572 21.6943 li
144.572 21.083 li
145.486 21.083 145.758 20.8867 145.758 19.7939 cv
145.758 14.5478 li
145.602 14.3916 145.289 14.2099 144.666 14.2099 cv
144.666 13.5976 li
147.736 13.5976 li
152.682 18.8554 li
152.682 15.3691 li
152.682 14.5742 152.541 14.2099 151.486 14.2099 cv
151.486 13.5976 li
154.777 13.5976 li
cp
f
157.839 21.6943 mo
157.839 21.083 li
158.763 21.083 158.958 20.7441 158.958 19.9111 cv
158.958 15.4609 li
158.958 14.5478 158.776 14.2099 157.839 14.2099 cv
157.839 13.5976 li
162.331 13.5976 li
162.331 14.2099 li
161.288 14.2099 161.146 14.5478 161.146 15.4609 cv
161.146 19.833 li
161.146 20.6396 161.224 21.083 162.331 21.083 cv
162.331 21.6943 li
157.839 21.6943 li
cp
f
174.618 14.2099 mo
173.669 14.2099 173.435 14.3916 172.86 15.6689 cv
170.036 21.9023 li
169.085 21.9023 li
166.353 15.8359 li
165.673 14.3261 165.534 14.2099 164.659 14.2099 cv
164.659 13.5976 li
169.567 13.5976 li
169.567 14.2099 li
168.605 14.2099 168.241 14.3916 168.241 14.7314 cv
168.241 14.8994 168.317 15.1474 168.489 15.5244 cv
170.218 19.3134 li
171.716 15.9668 li
172.079 15.1474 172.171 14.9131 172.171 14.6904 cv
172.171 14.3535 171.833 14.1836 171.024 14.2099 cv
171.024 13.5976 li
174.618 13.5976 li
174.618 14.2099 li
cp
f
183.815 13.5976 mo
183.931 15.5371 li
183.319 15.5371 li
183.202 14.6533 183.007 14.4052 182.368 14.4052 cv
179.817 14.4052 li
179.817 17.2431 li
181.497 17.2431 li
182.421 17.2431 182.667 17.0478 182.667 16.2529 cv
183.28 16.2529 li
183.28 18.9736 li
182.667 18.9736 li
182.667 18.2461 182.458 18.0498 181.511 18.0498 cv
179.817 18.0498 li
179.817 20.1464 li
179.817 20.8359 179.894 20.8867 180.601 20.8867 cv
182.108 20.8867 li
183.241 20.8867 183.54 20.3935 183.735 19.5341 cv
184.347 19.5341 li
184.181 21.6943 li
176.237 21.6943 li
176.237 21.083 li
177.423 21.083 177.632 20.8095 177.632 19.8857 cv
177.632 15.4062 li
177.632 14.3017 177.253 14.2099 176.329 14.2099 cv
176.329 13.5976 li
183.815 13.5976 li
cp
f
191.305 17.6201 mo
193.193 17.6464 193.869 17.0605 193.869 15.7197 cv
193.869 14.6904 193.207 14.0146 191.943 14.0146 cv
191.305 14.0146 li
191.305 17.6201 li
cp
198.295 21.8115 mo
196.693 21.8115 li
195.523 21.8115 194.793 21.5908 194.234 21.0302 cv
193.389 20.1855 192.619 18.8056 191.996 18.2578 cv
191.305 18.2578 li
191.305 20.0019 li
191.305 20.9658 191.684 21.083 192.699 21.083 cv
192.699 21.6943 li
187.766 21.6943 li
187.766 21.083 li
188.859 21.083 189.119 20.8867 189.119 19.9365 cv
189.119 15.3945 li
189.119 14.4179 188.885 14.2099 187.766 14.2099 cv
187.766 13.5976 li
188.559 13.5459 189.094 13.5058 190.135 13.4541 cv
190.953 13.416 191.762 13.3896 192.203 13.3896 cv
194.285 13.3896 196.188 13.7412 196.188 15.7461 cv
196.188 16.7363 195.549 17.4638 194.326 17.8681 cv
195.158 18.5185 195.639 19.6513 196.473 20.4843 cv
197.045 21.0566 197.594 21.1855 198.295 21.1992 cv
198.295 21.8115 li
cp
f
200.629 19.2343 mo
200.994 20.4843 201.852 21.2138 202.934 21.2138 cv
203.729 21.2138 204.275 20.7314 204.275 20.0556 cv
204.275 18.3369 200.135 18.1679 200.135 15.6416 cv
200.135 14.7177 200.771 13.3896 202.908 13.3896 cv
203.871 13.3896 204.549 13.6504 204.926 13.6504 cv
205.068 13.6504 205.146 13.6103 205.211 13.4814 cv
205.643 13.4814 li
205.861 15.7978 li
205.25 15.7978 li
204.898 14.6777 203.988 14.0791 203.051 14.0791 cv
202.375 14.0791 201.904 14.4179 201.904 14.8994 cv
201.904 16.2529 206.254 16.6318 206.254 19.4297 cv
206.254 20.9013 205.016 21.9023 203.209 21.9023 cv
202.281 21.9023 201.334 21.6162 201.113 21.6162 cv
200.902 21.6162 200.813 21.7334 200.787 21.8115 cv
200.369 21.8115 li
200.018 19.2343 li
200.629 19.2343 li
cp
f
209.444 21.6943 mo
209.444 21.083 li
210.368 21.083 210.564 20.7441 210.564 19.9111 cv
210.564 15.4609 li
210.564 14.5478 210.382 14.2099 209.444 14.2099 cv
209.444 13.5976 li
213.936 13.5976 li
213.936 14.2099 li
212.894 14.2099 212.751 14.5478 212.751 15.4609 cv
212.751 19.833 li
212.751 20.6396 212.829 21.083 213.936 21.083 cv
213.936 21.6943 li
209.444 21.6943 li
cp
f
225.608 15.9931 mo
224.997 15.9931 li
224.815 14.7041 224.565 14.4179 223.708 14.4179 cv
222.237 14.4179 li
222.237 19.7685 li
222.237 20.9013 222.394 21.083 223.671 21.083 cv
223.671 21.6943 li
218.62 21.6943 li
218.62 21.083 li
219.895 21.083 220.05 20.9013 220.05 19.7685 cv
220.05 14.4179 li
218.501 14.4179 li
217.89 14.4179 217.474 14.666 217.29 15.9931 cv
216.679 15.9931 li
216.927 13.3896 li
217.485 13.3896 li
217.54 13.4677 217.591 13.5205 217.692 13.5595 cv
217.786 13.5849 217.927 13.5976 218.136 13.5976 cv
223.995 13.5976 li
224.608 13.5976 224.685 13.5849 224.815 13.3896 cv
225.374 13.3896 li
225.608 15.9931 li
cp
f
237.418 14.2099 mo
236.533 14.2099 236.313 14.3916 235.609 15.4726 cv
233.695 18.414 li
233.695 19.8476 li
233.695 20.7841 233.824 21.083 234.986 21.083 cv
234.986 21.6943 li
230.207 21.6943 li
230.207 21.083 li
231.354 21.083 231.508 20.7695 231.508 19.833 cv
231.508 18.4931 li
229.111 15.2519 li
228.488 14.4052 228.24 14.2099 227.5 14.2099 cv
227.5 13.5976 li
232.186 13.5976 li
232.186 14.2099 li
231.549 14.2099 231.301 14.2881 231.301 14.5351 cv
231.301 14.6406 231.391 14.8095 231.508 14.9638 cv
233.33 17.4384 li
234.645 15.3818 li
234.879 15.0029 234.986 14.7822 234.986 14.6269 cv
234.986 14.3261 234.764 14.2099 234.125 14.2099 cv
234.125 13.5976 li
237.418 13.5976 li
237.418 14.2099 li
cp
f
92.3252 40.4502 mo
92.8897 40.4502 93.7075 38.9814 93.7075 37.1377 cv
93.7075 36.1562 93.3208 35.2949 92.8897 35.2949 cv
92.2808 35.2949 91.5083 36.7959 91.5083 38.5937 cv
91.5083 39.664 91.8496 40.4502 92.3252 40.4502 cv
cp
93.812 34.6855 mo
94.7778 34.6855 95.4014 35.5478 95.4014 36.8701 cv
95.4014 39.4414 92.9795 41.0752 91.4048 41.0752 cv
90.4531 41.0752 89.7842 40.1972 89.7842 38.9502 cv
89.7842 36.7812 91.7764 34.6855 93.812 34.6855 cv
cp
f
99.0337 40.4072 mo
98.8408 41.5224 98.4844 42.5029 97.5625 43.4238 cv
96.9683 44.0185 96.2393 44.375 95.23 44.375 cv
94.3233 44.375 93.6841 44.0039 93.6841 43.4687 cv
93.6841 43.082 94.0845 42.7246 94.5313 42.7246 cv
95.4375 42.7246 95.4072 43.8398 96.1065 43.8398 cv
96.6411 43.8398 96.9834 43.2158 97.147 42.2197 cv
98.2617 35.5175 li
97.147 35.5175 li
97.2207 35.1621 li
97.5777 35.1621 98.1128 35.0127 98.395 34.8339 cv
98.707 32.7519 99.9253 30.9248 101.962 30.9248 cv
102.854 30.9248 103.358 31.2373 103.358 31.7714 cv
103.358 32.2031 103.002 32.5459 102.556 32.5459 cv
101.724 32.5459 101.412 31.5214 100.907 31.5214 cv
100.55 31.5214 100.431 32.0693 100.223 33.3623 cv
99.9849 34.8339 li
101.056 34.8339 li
100.907 35.5175 li
99.8516 35.5175 li
99.0337 40.4072 li
cp
f
119.12 32.8144 mo
119.12 33.4277 li
118.183 33.4277 117.948 33.6865 117.948 34.5996 cv
117.948 41.0029 li
116.919 41.0029 li
111.024 34.7802 li
111.024 39.0781 li
111.024 39.9365 111.153 40.3007 112.26 40.3007 cv
112.26 40.914 li
108.914 40.914 li
108.914 40.3007 li
109.825 40.3007 110.099 40.1054 110.099 39.0117 cv
110.099 33.7656 li
109.942 33.6103 109.631 33.4277 109.005 33.4277 cv
109.005 32.8144 li
112.078 32.8144 li
117.024 38.0732 li
117.024 34.5869 li
117.024 33.791 116.88 33.4277 115.827 33.4277 cv
115.827 32.8144 li
119.12 32.8144 li
cp
f
126.095 33.2324 mo
124.923 33.2324 123.687 34.0644 123.687 36.3173 cv
123.687 38.7773 124.871 40.4961 126.577 40.4961 cv
127.865 40.4961 128.893 39.4941 128.893 37.3984 cv
128.893 34.9365 127.748 33.2324 126.095 33.2324 cv
cp
126.16 41.1211 mo
122.502 41.1211 121.369 38.7265 121.369 36.916 cv
121.369 34.7285 122.931 32.6074 126.498 32.6074 cv
130.117 32.6074 131.21 35.0029 131.21 36.7724 cv
131.21 38.5029 130.117 41.1211 126.16 41.1211 cv
cp
f
137.117 36.8379 mo
139.004 36.8642 139.682 36.2773 139.682 34.9365 cv
139.682 33.9082 139.018 33.2324 137.754 33.2324 cv
137.117 33.2324 li
137.117 36.8379 li
cp
144.105 41.0302 mo
142.506 41.0302 li
141.332 41.0302 140.605 40.8086 140.045 40.249 cv
139.199 39.4023 138.432 38.0234 137.805 37.4775 cv
137.117 37.4775 li
137.117 39.2207 li
137.117 40.1826 137.494 40.3007 138.51 40.3007 cv
138.51 40.914 li
133.576 40.914 li
133.576 40.3007 li
134.668 40.3007 134.929 40.1054 134.929 39.1552 cv
134.929 34.6123 li
134.929 33.6357 134.694 33.4277 133.576 33.4277 cv
133.576 32.8144 li
134.369 32.7646 134.902 32.7246 135.945 32.6728 cv
136.764 32.6328 137.572 32.6074 138.014 32.6074 cv
140.098 32.6074 141.998 32.958 141.998 34.9638 cv
141.998 35.9521 141.361 36.6806 140.137 37.0859 cv
140.969 37.7363 141.451 38.8681 142.285 39.7021 cv
142.857 40.2744 143.404 40.4052 144.105 40.417 cv
144.105 41.0302 li
cp
f
154.407 35.2109 mo
153.796 35.2109 li
153.612 33.9218 153.366 33.6357 152.507 33.6357 cv
151.034 33.6357 li
151.034 38.9863 li
151.034 40.1172 151.19 40.3007 152.466 40.3007 cv
152.466 40.914 li
147.417 40.914 li
147.417 40.3007 li
148.692 40.3007 148.847 40.1172 148.847 38.9863 cv
148.847 33.6357 li
147.298 33.6357 li
146.687 33.6357 146.271 33.8828 146.089 35.2109 cv
145.478 35.2109 li
145.724 32.6074 li
146.282 32.6074 li
146.335 32.6855 146.388 32.7363 146.491 32.7773 cv
146.583 32.8027 146.728 32.8144 146.933 32.8144 cv
152.792 32.8144 li
153.403 32.8144 153.482 32.8027 153.612 32.6074 cv
154.171 32.6074 li
154.407 35.2109 li
cp
f
164.477 36.3437 mo
164.477 34.7158 li
164.477 33.6865 164.268 33.4541 163.383 33.4277 cv
163.383 32.8144 li
167.793 32.8144 li
167.793 33.4277 li
166.844 33.4541 166.662 33.6865 166.662 34.5478 cv
166.662 39.0117 li
166.662 39.9238 166.764 40.2881 167.793 40.3007 cv
167.793 40.914 li
163.383 40.914 li
163.383 40.3007 li
164.229 40.2617 164.477 40.0537 164.477 39.0381 cv
164.477 37.1504 li
160.568 37.1504 li
160.568 39.0781 li
160.568 39.8711 160.66 40.2744 161.703 40.3007 cv
161.703 40.914 li
157.238 40.914 li
157.238 40.3007 li
158.135 40.2617 158.383 40.1054 158.383 39.0381 cv
158.383 34.6767 li
158.383 33.6357 158.096 33.4277 157.238 33.4277 cv
157.238 32.8144 li
161.703 32.8144 li
161.703 33.4277 li
160.83 33.4785 160.568 33.5976 160.568 34.664 cv
160.568 36.3437 li
164.477 36.3437 li
cp
f
185.112 38.3603 mo
185.007 39.1035 184.696 40.0664 184.317 40.9511 cv
184.28 41.0429 li
184.161 41.0029 184.032 40.9775 183.901 40.9648 cv
183.786 40.9384 183.642 40.9384 183.485 40.9384 cv
183.134 40.9384 182.757 40.9775 182.353 41.0302 cv
181.962 41.0683 181.546 41.1211 181.091 41.1211 cv
179.345 41.1211 178.148 40.5351 177.407 39.7285 cv
176.663 38.9199 176.339 37.9062 176.339 37.0068 cv
176.339 35.706 176.86 34.625 177.771 33.832 cv
178.669 33.0498 179.958 32.6074 181.468 32.6074 cv
182.858 32.6074 183.628 32.998 183.952 32.998 cv
184.071 32.998 184.136 32.9463 184.189 32.8144 cv
184.671 32.8144 li
184.786 35.5371 li
184.175 35.5371 li
184.032 34.872 183.706 34.3261 183.251 33.9482 cv
182.796 33.5703 182.222 33.3623 181.571 33.3623 cv
179.841 33.3623 178.655 34.7802 178.655 36.7988 cv
178.655 38.9199 179.892 40.3662 181.714 40.3662 cv
182.939 40.3662 183.876 39.7021 184.501 38.3603 cv
185.112 38.3603 li
cp
f
191.023 34.2343 mo
189.943 37.3193 li
192.223 37.3193 li
191.023 34.2343 li
cp
196.621 40.914 mo
191.896 40.914 li
191.896 40.3007 li
192.781 40.3007 193.096 40.1972 193.096 39.8574 cv
193.096 39.6884 193.002 39.3769 192.818 38.8945 cv
192.52 38.1279 li
189.658 38.1279 li
189.422 38.8164 li
189.24 39.3506 189.137 39.7148 189.137 39.8203 cv
189.137 40.1709 189.566 40.3007 190.281 40.3007 cv
190.281 40.914 li
186.938 40.914 li
186.938 40.3007 li
187.9 40.3007 188.018 40.08 188.486 38.7265 cv
190.518 32.8945 li
190.4 32.6074 li
192.742 32.6074 li
195.111 38.7646 li
195.58 39.9746 195.867 40.2617 196.621 40.3007 cv
196.621 40.914 li
cp
f
202.534 36.8379 mo
204.419 36.8642 205.099 36.2773 205.099 34.9365 cv
205.099 33.9082 204.435 33.2324 203.171 33.2324 cv
202.534 33.2324 li
202.534 36.8379 li
cp
209.523 41.0302 mo
207.921 41.0302 li
206.749 41.0302 206.021 40.8086 205.462 40.249 cv
204.614 39.4023 203.849 38.0234 203.222 37.4775 cv
202.534 37.4775 li
202.534 39.2207 li
202.534 40.1826 202.909 40.3007 203.925 40.3007 cv
203.925 40.914 li
198.991 40.914 li
198.991 40.3007 li
200.083 40.3007 200.345 40.1054 200.345 39.1552 cv
200.345 34.6123 li
200.345 33.6357 200.11 33.4277 198.991 33.4277 cv
198.991 32.8144 li
199.786 32.7646 200.319 32.7246 201.362 32.6728 cv
202.183 32.6328 202.989 32.6074 203.433 32.6074 cv
205.515 32.6074 207.413 32.958 207.413 34.9638 cv
207.413 35.9521 206.774 36.6806 205.554 37.0859 cv
206.388 37.7363 206.866 38.8681 207.7 39.7021 cv
208.273 40.2744 208.821 40.4052 209.523 40.417 cv
209.523 41.0302 li
cp
f
215.579 33.2324 mo
214.409 33.2324 213.171 34.0644 213.171 36.3173 cv
213.171 38.7773 214.357 40.4961 216.061 40.4961 cv
217.353 40.4961 218.38 39.4941 218.38 37.3984 cv
218.38 34.9365 217.233 33.2324 215.579 33.2324 cv
cp
215.646 41.1211 mo
211.989 41.1211 210.855 38.7265 210.855 36.916 cv
210.855 34.7285 212.419 32.6074 215.983 32.6074 cv
219.603 32.6074 220.696 35.0029 220.696 36.7724 cv
220.696 38.5029 219.603 41.1211 215.646 41.1211 cv
cp
f
228.133 32.8144 mo
228.133 33.4277 li
227.029 33.4277 226.809 33.6357 226.809 34.664 cv
226.809 39.1816 li
226.809 39.9746 226.898 40.1054 227.77 40.1054 cv
228.76 40.1054 li
229.553 40.1054 229.828 40.08 230.92 38.5576 cv
231.533 38.5576 li
230.541 40.914 li
223.344 40.914 li
223.344 40.3007 li
224.477 40.3007 224.619 39.9629 224.619 39.0381 cv
224.619 34.664 li
224.619 33.7275 224.477 33.4277 223.344 33.4277 cv
223.344 32.8144 li
228.133 32.8144 li
cp
f
234.07 40.914 mo
234.07 40.3007 li
234.994 40.3007 235.189 39.9629 235.189 39.1289 cv
235.189 34.6767 li
235.189 33.7656 235.008 33.4277 234.07 33.4277 cv
234.07 32.8144 li
238.561 32.8144 li
238.561 33.4277 li
237.52 33.4277 237.375 33.7656 237.375 34.6767 cv
237.375 39.0507 li
237.375 39.8574 237.455 40.3007 238.561 40.3007 cv
238.561 40.914 li
234.07 40.914 li
cp
f
252.079 32.8144 mo
252.079 33.4277 li
251.142 33.4277 250.909 33.6865 250.909 34.5996 cv
250.909 41.0029 li
249.88 41.0029 li
243.985 34.7802 li
243.985 39.0781 li
243.985 39.9365 244.112 40.3007 245.22 40.3007 cv
245.22 40.914 li
241.876 40.914 li
241.876 40.3007 li
242.786 40.3007 243.06 40.1054 243.06 39.0117 cv
243.06 33.7656 li
242.903 33.6103 242.591 33.4277 241.966 33.4277 cv
241.966 32.8144 li
245.036 32.8144 li
249.985 38.0732 li
249.985 34.5869 li
249.985 33.791 249.843 33.4277 248.786 33.4277 cv
248.786 32.8144 li
252.079 32.8144 li
cp
f
257.447 34.2343 mo
256.365 37.3193 li
258.641 37.3193 li
257.447 34.2343 li
cp
263.043 40.914 mo
258.318 40.914 li
258.318 40.3007 li
259.203 40.3007 259.518 40.1972 259.518 39.8574 cv
259.518 39.6884 259.424 39.3769 259.242 38.8945 cv
258.943 38.1279 li
256.08 38.1279 li
255.844 38.8164 li
255.662 39.3506 255.559 39.7148 255.559 39.8203 cv
255.559 40.1709 255.988 40.3007 256.703 40.3007 cv
256.703 40.914 li
253.359 40.914 li
253.359 40.3007 li
254.322 40.3007 254.439 40.08 254.906 38.7265 cv
256.94 32.8945 li
256.82 32.6074 li
259.164 32.6074 li
261.533 38.7646 li
262 39.9746 262.291 40.2617 263.043 40.3007 cv
263.043 40.914 li
cp
f
93.6782 54.8105 mo
92.9199 54.8105 92.4292 55.0332 91.9683 55.4931 cv
91.4634 55.998 91.0479 57.0537 91.0479 57.9013 cv
91.0479 58.5107 91.2852 58.9257 91.6568 58.9257 cv
91.999 58.9257 92.459 58.4658 93.0684 57.8418 cv
93.6782 54.8105 li
cp
94.48 58.6894 mo
94.4068 59.0146 94.376 59.2519 94.5401 59.2519 cv
94.7031 59.2519 95.2534 58.749 95.565 58.3759 cv
95.565 58.8672 li
94.8067 59.6689 94.0044 60.2939 93.4404 60.2939 cv
93.0537 60.2939 92.8457 59.9677 92.8457 59.4023 cv
92.8457 59.1338 92.8457 59.0009 92.9502 58.4658 cv
92.9199 58.4658 li
91.9834 59.4316 91.1367 60.2939 90.6904 60.2939 cv
90.3486 60.2939 89.6651 59.8779 89.6651 58.8525 cv
89.6651 57.8857 90.0069 56.6679 91.2852 55.3896 cv
92.5039 54.1865 93.544 53.9033 95.461 53.9033 cv
94.48 58.6894 li
cp
f
99.1968 58.9257 mo
99.1367 59.1953 99.271 59.4023 99.4644 59.4023 cv
99.6582 59.4023 100.178 59.0146 100.609 58.5263 cv
100.877 58.8056 li
100.103 59.6845 99.0928 60.2939 98.3648 60.2939 cv
97.814 60.2939 97.4287 59.8623 97.5918 59.0293 cv
98.4683 54.7353 li
97.7407 54.7353 li
97.8008 54.4091 li
98.7803 54.082 99.6133 53.2949 100.49 52.0752 cv
100.877 52.0752 li
100.594 52.6709 100.4 53.249 100.193 54.0517 cv
101.367 54.0517 li
101.233 54.7353 li
100.059 54.7353 li
99.1968 58.9257 li
cp
f
117.748 57.5791 mo
117.644 58.3213 117.331 59.2841 116.953 60.1689 cv
116.914 60.2607 li
116.797 60.2216 116.667 60.1953 116.537 60.1826 cv
116.42 60.1562 116.276 60.1562 116.12 60.1562 cv
115.769 60.1562 115.392 60.1953 114.987 60.248 cv
114.597 60.2871 114.181 60.3388 113.725 60.3388 cv
111.981 60.3388 110.783 59.7529 110.041 58.9463 cv
109.299 58.1386 108.974 57.124 108.974 56.2236 cv
108.974 54.9238 109.494 53.8437 110.406 53.0488 cv
111.304 52.2675 112.592 51.8242 114.102 51.8242 cv
115.495 51.8242 116.264 52.2158 116.588 52.2158 cv
116.706 52.2158 116.771 52.164 116.823 52.0341 cv
117.305 52.0341 li
117.422 54.7539 li
116.81 54.7539 li
116.667 54.0908 116.341 53.5439 115.886 53.165 cv
115.43 52.7881 114.858 52.581 114.207 52.581 cv
112.475 52.581 111.291 53.999 111.291 56.0166 cv
111.291 58.1386 112.527 59.583 114.35 59.583 cv
115.574 59.583 116.511 58.9189 117.135 57.5791 cv
117.748 57.5791 li
cp
f
127.96 55.5605 mo
127.96 53.9355 li
127.96 52.9062 127.752 52.6718 126.867 52.6455 cv
126.867 52.0341 li
131.279 52.0341 li
131.279 52.6455 li
130.331 52.6718 130.148 52.9062 130.148 53.7646 cv
130.148 58.2304 li
130.148 59.1396 130.251 59.5048 131.279 59.5185 cv
131.279 60.1308 li
126.867 60.1308 li
126.867 59.5185 li
127.713 59.4804 127.96 59.2724 127.96 58.2568 cv
127.96 56.3681 li
124.055 56.3681 li
124.055 58.2939 li
124.055 59.0888 124.146 59.4931 125.188 59.5185 cv
125.188 60.1308 li
120.723 60.1308 li
120.723 59.5185 li
121.621 59.4804 121.869 59.3232 121.869 58.2568 cv
121.869 53.8935 li
121.869 52.8535 121.582 52.6455 120.723 52.6455 cv
120.723 52.0341 li
125.188 52.0341 li
125.188 52.6455 li
124.315 52.6982 124.055 52.8144 124.055 53.8808 cv
124.055 55.5605 li
127.96 55.5605 li
cp
f
137.465 53.4521 mo
136.385 56.5381 li
138.664 56.5381 li
137.465 53.4521 li
cp
143.063 60.1308 mo
138.338 60.1308 li
138.338 59.5185 li
139.223 59.5185 139.535 59.415 139.535 59.0761 cv
139.535 58.9072 139.443 58.5937 139.262 58.1123 cv
138.963 57.3447 li
136.098 57.3447 li
135.863 58.0351 li
135.682 58.5673 135.576 58.9316 135.576 59.0361 cv
135.576 59.3886 136.008 59.5185 136.723 59.5185 cv
136.723 60.1308 li
133.378 60.1308 li
133.378 59.5185 li
134.341 59.5185 134.458 59.2978 134.927 57.9433 cv
136.959 52.1123 li
136.84 51.8242 li
139.184 51.8242 li
141.553 57.9824 li
142.021 59.1943 142.309 59.4804 143.063 59.5185 cv
143.063 60.1308 li
cp
f
148.682 56.1211 mo
148.889 56.1738 149.084 56.1865 149.293 56.1865 cv
150.375 56.1865 151.025 55.4707 151.025 54.2851 cv
151.025 53.1406 150.412 52.4502 149.41 52.4502 cv
149.15 52.4502 148.889 52.4765 148.682 52.542 cv
148.682 56.1211 li
cp
146.496 54.2597 mo
146.496 52.8662 146.441 52.7099 145.336 52.6455 cv
145.336 52.0341 li
146.053 51.9951 147.016 51.9287 147.9 51.8916 cv
148.771 51.8515 149.5 51.8242 149.697 51.8242 cv
151.896 51.8242 153.342 52.7099 153.342 54.3515 cv
153.342 55.458 152.586 56.9013 150.102 56.9013 cv
149.686 56.9013 149.059 56.8369 148.682 56.7588 cv
148.682 58.4892 li
148.682 59.2568 148.916 59.5185 150.152 59.5185 cv
150.152 60.1308 li
145.336 60.1308 li
145.336 59.5185 li
146.262 59.5185 146.496 59.2568 146.496 58.2568 cv
146.496 54.2597 li
cp
f
163.48 52.0341 mo
163.598 53.9726 li
162.986 53.9726 li
162.867 53.0879 162.676 52.8408 162.037 52.8408 cv
159.484 52.8408 li
159.484 55.6777 li
161.162 55.6777 li
162.09 55.6777 162.334 55.4824 162.334 54.6894 cv
162.947 54.6894 li
162.947 57.4091 li
162.334 57.4091 li
162.334 56.6806 162.127 56.4863 161.178 56.4863 cv
159.484 56.4863 li
159.484 58.581 li
159.484 59.2724 159.563 59.3232 160.266 59.3232 cv
161.775 59.3232 li
162.91 59.3232 163.207 58.8281 163.402 57.9687 cv
164.014 57.9687 li
163.846 60.1308 li
155.904 60.1308 li
155.904 59.5185 li
157.088 59.5185 157.297 59.2441 157.297 58.3213 cv
157.297 53.8437 li
157.297 52.7353 156.92 52.6455 155.996 52.6455 cv
155.996 52.0341 li
163.48 52.0341 li
cp
f
172.008 52.0341 mo
172.008 52.6455 li
170.9 52.6455 170.68 52.8535 170.68 53.8808 cv
170.68 58.3974 li
170.68 59.1943 170.77 59.3232 171.645 59.3232 cv
172.633 59.3232 li
173.426 59.3232 173.699 59.2978 174.793 57.7744 cv
175.404 57.7744 li
174.414 60.1308 li
167.219 60.1308 li
167.219 59.5185 li
168.35 59.5185 168.494 59.1816 168.494 58.2568 cv
168.494 53.8808 li
168.494 52.9443 168.35 52.6455 167.219 52.6455 cv
167.219 52.0341 li
172.008 52.0341 li
cp
f
190.337 55.5605 mo
190.337 53.9355 li
190.337 52.9062 190.128 52.6718 189.243 52.6455 cv
189.243 52.0341 li
193.655 52.0341 li
193.655 52.6455 li
192.704 52.6718 192.523 52.9062 192.523 53.7646 cv
192.523 58.2304 li
192.523 59.1396 192.628 59.5048 193.655 59.5185 cv
193.655 60.1308 li
189.243 60.1308 li
189.243 59.5185 li
190.089 59.4804 190.337 59.2724 190.337 58.2568 cv
190.337 56.3681 li
186.433 56.3681 li
186.433 58.2939 li
186.433 59.0888 186.521 59.4931 187.564 59.5185 cv
187.564 60.1308 li
183.099 60.1308 li
183.099 59.5185 li
183.999 59.4804 184.245 59.3232 184.245 58.2568 cv
184.245 53.8935 li
184.245 52.8535 183.958 52.6455 183.099 52.6455 cv
183.099 52.0341 li
187.564 52.0341 li
187.564 52.6455 li
186.692 52.6982 186.433 52.8144 186.433 53.8808 cv
186.433 55.5605 li
190.337 55.5605 li
cp
f
197.163 60.1308 mo
197.163 59.5185 li
198.087 59.5185 198.282 59.1816 198.282 58.3466 cv
198.282 53.8935 li
198.282 52.9843 198.101 52.6455 197.163 52.6455 cv
197.163 52.0341 li
201.655 52.0341 li
201.655 52.6455 li
200.612 52.6455 200.47 52.9843 200.47 53.8935 cv
200.47 58.2685 li
200.47 59.0761 200.55 59.5185 201.655 59.5185 cv
201.655 60.1308 li
197.163 60.1308 li
cp
f
209.488 52.0341 mo
209.488 52.6455 li
208.383 52.6455 208.162 52.8535 208.162 53.8808 cv
208.162 58.3974 li
208.162 59.1943 208.252 59.3232 209.123 59.3232 cv
210.115 59.3232 li
210.908 59.3232 211.182 59.2978 212.275 57.7744 cv
212.887 57.7744 li
211.896 60.1308 li
204.699 60.1308 li
204.699 59.5185 li
205.832 59.5185 205.975 59.1816 205.975 58.2568 cv
205.975 53.8808 li
205.975 52.9443 205.832 52.6455 204.699 52.6455 cv
204.699 52.0341 li
209.488 52.0341 li
cp
f
219.202 52.0341 mo
219.202 52.6455 li
218.093 52.6455 217.872 52.8535 217.872 53.8808 cv
217.872 58.3974 li
217.872 59.1943 217.966 59.3232 218.837 59.3232 cv
219.825 59.3232 li
220.62 59.3232 220.892 59.2978 221.987 57.7744 cv
222.599 57.7744 li
221.61 60.1308 li
214.411 60.1308 li
214.411 59.5185 li
215.542 59.5185 215.685 59.1816 215.685 58.2568 cv
215.685 53.8808 li
215.685 52.9443 215.542 52.6455 214.411 52.6455 cv
214.411 52.0341 li
219.202 52.0341 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 19.1.0%%For: (Crowell, Charles Bradley) ()%%Title: (UNC_logo_PMS542.eps)%%CreationDate: 8/18/15 7:56 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6CNCN<E?P)cqELK'MNB_KZ1WS03ZJ/?!4uRTP!W[Sg>U\OTK&00M]``SNc]]!rN1HJ<HfPCJABgCQgE')85r[B,:hZ>ool"Q%IJi'AGOI`nrp&PDqt#HbiS\3/"CKm_r:6&Dr6KT%If')TbsekAQ<I`l-,Bs*`Aq!o[Dof)hTQcZ<l=rR"1S`.F"5_IL)Kj$rqPW2%qmRY2s6A(R2fHJ2rqQ$^a%tUmI/1nGho'GOhn=Mdqsi/6ld#h%0+7i_qtB<1GON<D`=M^XIJ`9l#?Lrk^W#qroDS"4^]!s/Ig0lk%p2B@<jI<WN5IWq.s7:j\5'["aqp-AQq0Rmhrp'%jJ,d]!g`0dBLZ?]a]AqfIe)(XPg<1;[p`,Ie0&'2hBFnfCRt$oT1<&##+==N7%VjrZ"d3j,l-b:A^gX_O[TDnGchu<W2pRa[`rqu3EL]@</T%p6)J%U:0kmoJ#p*Ar6\N9TAhnQl)j87H#hr9rHP:kk2f*MED5BG#V%R^@(n_E"Ck494)!p4%j"o0kgL8R-N>9])_VIsUk_cTaYlcaU*mHi&Znl13<dDr1GBDkZ?%%/lOlo'7CS^]!eo&+;^2ia;[ZV4IIp%O5IX!hf_fQ^O?.YpH6.?62rSqq"r[8IfK+_6bncOIt37Kq4YkG)C!tMrjTA@LDCIIIs]_3n3d)uLX0hQhnK!D[sr.BDJst#qp.L9%R@;ZEJ,.-o+9)9"5N$'g>D/+/+W[ZUr_PpB\:bg\I5j3%%V?QHV>p,<0&M/-qrpK&!Vt`uG(9,B]5R_#`rGbEnIlL!!?[F!kD!0T%CA@eO:[d!=r7kOZRr-8tQ.E>fQX$=bnNT4NqlV#uljeaKK.DCJppAc?9Qg#5#bb!g2AY$Yr<rr`<875pD,.Bbmb?dZ%0tHhr7s;K%>&>"7+7B42^MgmG#.F^,ro<J3Du)9hV7llG+)-Q;'n5\X[=7iNqHSK#Ijs:SlMV7\:]KJ(`uk<U2]mMCEV\k\G9;>3p@'RLbbkud%r6TofQc%@O+27cA_r#tAq#4o]\H2_eH@\;0qFp?#*8\2MrU,_2qht99^9dR)p;d1ah`/?!s8LjC5J@'V^V"p"pR.SelhAE64lMS6%5sN'M^#6*bs,Xqnbo>HV]s5k4dLS&,#p]BBpr5P2IIm9pVafd_48eZYs4Vp9]c_M^r;EPFDq`<J^MB;pE5,8O5IT_CrZk-`^c!5-%:H'-iFS6k>gjJk!NU=Zn*c1GmT3m(so.P=VIf'*(?b:[Z@5D/A^&I["cQ>CM!>b(7\$*DOF2mAAiGJJiAl&X/no!]^^46%=]C0k_%kgth@GAW$?G/c69mJaR:hnT'f^8'Nbq,JBt]/T39Ie.L8IsubEG]22PJ(Ng;O:$ZtI/)1FpE0Dp*(F[e`baPIrp]d5C>81g[pD#5%coZo8Da49^6Tr</rU/Ks-N+puq;L/m\"35?]`02^aG4^5jn0_QiiK!<2qh\.N]qEX=0EZQ<TS2m@JKHoq"4EpGDuneH1a*<5.nUJ%L[k*IqUr.XJZO++qJQ,ljfb!)H<Y:YD7Y_9iRZnt>C1.'DJsE1Y&B=Z=#ZI)oqpO*Rrf<^_Mu<M2tk6rhd52F?XFnYYHBO^lZKb`%fBG>&LMMD,Q>:haNjm&uj7Vqe]K0@?l`hH$0cf:/*<"8*mEo1p?JSjl?QH>QXtHpC<Op7Rkpg"n.t?Z`m$5,o]tCng^-#_.?!].M%os.ibbB+UT_kk+iQhJkWgNlf%l`jdHb9f66RVSq.L?b8X@@J$P>AhT+3L6^dg%:A(E_.RC:jd7UZ,PeYI$:c*0jj%c>]\"]qoCLI%luSBMZUqXj-=*NZ\k8:q"SnQcMCG>J]-j(A]T"l?3Zd<]]Nep*-0CS(CdPjs0%t!UD7Bo(i>A`7AZ/<TBGs3n+TrllYeg*=J)da2%d9l]B?[_It-Qdb8Wg[VgXZ,\!h7.6EFB@nY<EEFK9i,oIq5-beBC)b6Z.J\_YO&*f[PXDTa\OfsDk4;eR'r'QD1u]I\X9fNVTm8j%JXP*`o%/f1B^=Xr"uOtj51F"e\S$30cK5W.b<3s@FgU%7H2b-d!.PG^DdW56cdUj2rEEU2X+.;_gXb,s:VOO=e1dO-p[P3n4I6R@%=7Rp@7t-I/4P(*+r,9.!rjt>lgmXFfV.Yo4VT1jhpleL(B;,@[4RmtMSU;>c>2VWW:O1ltj+F8AnUfD<6IYTHJ%0<Bin4%F9q/1t%r51BU&fNu+NN\Sd?S3:i3Au>-e)kEas)F#1KuT3P@n`^RW(VWJ1i@Hl\CPLNNJ"d]a[5$$WH#Ap38A**FN;DkDVE</j++:P_U(8O%C7MOc%XH`0jfu)7Rl5WB=K"lAC&BeG^7$!jXc:Y521Bo.q!MuDHFE?PhtV2-HoX.b>T9<LCAdq>na5(#^MInLR>8f3;e,6l1&9"5%[5<nnh=11T9T;aZn4b*_9esd)9FR7^=u\F>iMPI<RO1J5-;B.?<MUsIPU9sH2K@d0`/^>1gFLak&9m6&-Bl@pS)boke0_5$24<R;%@J0$81c`Q5GpYAY-8kUr1caa)aZINipY6a,Y>(45>SDo['9#g&O@g1N0!DIE-8f'foY/!n9p0NkU'aW#8km/PGf6cS<88T?>K"4*%k`Tq@gV@]f7(MV>Soa\EM_gn'#Tijb,??osFoo4u(gdLTr=B!XpfWg?',:;2caq#Lpr$=]o&Njn@U&5&*c(8pLH6tnq@IfC0DkZ9%G8T7@kl4uWq+L#bp[pPho:GB_4@a\Re")ig.*m7OoC<m_Gu&WjSteF:l-@InP\3A3<)]8noJsBJGODf-ht/S+_uC#8E)_LZJ5Y-.%?aW&3DL6lfrbNN+pb*AVQW$fSQO;-`.4P*dL$7W_'`FjpoQ!Q]r_anc3@.*Y/k"0Nh+Ce1$#u#`TT>#FO%J5qrE7-IoXT;/3M([8%ro*^9kN7msQ0.2(2Z;:e3q7.9TA1[;<Zj^%HENA'U;H%K`8RWH6[#)W1k:>i-mtYK@>i=Xs#nb!1HonU?h3*8Bf1:po9[Y$T-9fm%]fNILVnO/mI[8"m4SnDj.pga(nY:@[?H?pP\0^8$[N7QO0BGP82/%7a+/5]"b=hXB71EF,b(hB[d.1'u6rAT&Qgu;W$ZTT*<OKPL%P+;/o7_;YQ#BD=]^ge%K3GL,d@f*tYB_p!EPAec]HM'FK,H!LXZS`cE4P&8QU"An);pV>X!89+.%NtUBdkpcG<cdQZ7?$ub!QWX^%"NOtED]6WecYAJ'dk]%X@/\,7F5ugTerol^YI$MA;g)?(h*'2jolbJ[5n"BbE*dq/_>9]6"b=&\SO=p>W.\Qi:[B`.6?lOd5H9D+%?a.Eid:W!X_ge!_7<u,IRfV(:r.lNZ0iLhPp8g7nVs)j-1RiJUUJ=qr]2#j%N4'aHO`p=k2t2W[7uTPjPm-P;@d-0_O'6nKhEr&#%ZMB=,L[74c4seYg)1TMTp)gR?OU[,J5\(,2616S]K#ei5p)pXHJPCs%6=:TRb7N<\Xqrc&Tn*JC6t@PE1D(I]^f3]C=0NHk]a-/Y%?o%kbd5C4D[qP!0BKZFo&c,qPL]h<80I22uWLu6X$qao*!i$BqQ*+!-^4ced+VmdG?tAhABED+24Jnq]P@/A3Ro;Vb'3LhYdJ=">%V^'ogY$')b7>J$3F-K+WPXDdA8(/.hVrE:DWe=EQN0^JqeuFTC.sc/Zf@]Q"r$1%pQ6%s!=EkT<D:.D>$2d2?&jKNkD(*G8l.@p^%S2(..**KN[8b&&/M4K`b]h"$9U*q(-:6C:[`*q!;]-7d/`n3Am9T0*`[.k+hh_g6mi*<>I[i9hK6pfl],a)U\'5@j9Ll-a]^_'"%%ELKjgEHk2/a@L[f$I8%)?8Q[g#32+ZOPtFW15'<@KhI>%%A=_BSSfRic@f\gFA0V_fhr?*eeA7hd%,i3,#Td4d`BMHFC^Gq&1qlo%98K$),UPoS7Y8K&AO2b?;O)g9ChV!c?&63;Ku""<ED\21F@I\'QJ-G<1K'e0iQ*shZV9Fm+@?"9l1*49<Y&**77l!"VT(!UI.gk.%42<LlhZ*8E[VCO3W&(RbHI):<B;eP2RepdIB;nXD:NLP@_u<)EHE'g7ec,9mrq=nAp7KY0p=4`meUd\LJc4,MrRHJteUd[oRA^(*%NP@,^B:KTF^4ouZqOA9PrIWAInEVGcJ!&.,?c0(^L0oE>^]"W*n397>pmR!72%T@q*pV?>e;)LBTD<lZ6iA2RqDJlWCS@-!KjnBB%;fdsbo3%ZR([LRY7,p;Gis?b*)"dB7TpV2BpRf#nbWij]\F@ZH1]M].f0<`Cpl?3IrmIM8c\PF(]0Qc)MU6X*;F'UlUP;TA9;nd<%J?EjFqSJB4Z*$)2KleWh?-1hfs#`I^W.i'XW)t<E/jR)uW+&_*1G1\<l\Zm4.-QCQ>X[O+*7e[;e3k9k,9A_*^i<Zp$jt][7Lc2e%Q;Ta6Mk[thctRge5Z(?`DAEQa6QLn&Z=2_-"8<o$*sR7(U_lOYAVr!,D24]0mjtF4cpOKu*''gW3M[&jo<nMc.Rfq&%.\or]_t4g%ccXhLlIHg[f0`<j;bGZUg4bF9Z?#n]<NiOq[8t$h"`.?+@&"Zc<5V0oXK,g*1</V312(3(-PNUUoWh,Mf".`g/.TR<*,$'i7EZAW%Kr,F:T9iH/AQ+ofXuoi%??tRtZZ\b1@p^CN<8rUUA#g<iC@PI^*`V/k3=a6*+*SNL=-5pC%`9>e[Q,?s=_;dobr?*aA]Or$,;Ic8%OP(C)>=3"LaC#T_<^r3+0&pI^qEn]Tb7o_\3T.o5*I\`-H9%Y>boBfrBFO_q!rZ0)ANI^I97"!+`XQc#%3cP2.BBCg3RK&]KdgVU%$9)<?8ocaT,/GMp8&UK[,HMLj9t$u43@3ZWUmB(SILkZt;<PS7W@"oFrR*nSmR6>kkT^1;>9645&t^;<62Uh1ab"k69SOAo0cq;d%oh5=@=b61"XOtJ=Lq=7s6a!mP$bSmXZ(h(s:kd,l7OD(\,H?q.<D&<eV.6Z$[UZUKiZVHl9bY\sp3hdDB1:X_T`,6n,'V:G]>9]d%1h&LJcF+a`iMlq=_4oM5VqDTPm&kW6_a]UkbF)CaL0G?<pnBKpa6Vhu@g"IFo!1!%q0I>>(r7O5SSu4criE#&chX\4:lf6p:A^;K%O**GQEp3,3kC,VjEq\Ve4*:Oa1uMC:\Z\(@=O;HFBgJX%1IVkD+B2dH$f8ui]Bg)b>7E!qhOtQM-T\AsWC:,IG:TBOMB;<bdMsRs%$6li([2%6pou;sU@n^hl74K[lTsIpdMUcYPDL)V6]h?6HeG<(Ogbtt*U9u=3K.`MqL$ORKin&@oj^P1#)YdI;T;C-7]Vj=<ka8c9%KRcUE"o0"W!>,GY$(%$+;(re2TemPsq]1e(-4i,WWK/<h?Qp:>9Ikp('=i(<4U1j[2bZ+jjX/tQj<LDMj?]_`Lh[-"=#ZL<EF`ec%oRnVb7X;EUFbbceckU`A`;PMgalS,k:162I:^@DQA0'&:Uc=q'+#+Sn'(^2P;]hYs&VYs/K,,_"7#5_X*4og'FG41-AYLFi+gUGi%a=SsJYdC^?W$5].817=]P<gZq3d%R38SF8`UU2]i')FE**<WteM1\CDmHp:625Y&Hq3sO1g$D>XUGicrk[c&.GGjGL/n^NFHZ\kD%XL5,4l%bG0S8)/GPL6@UeoHL!h-H(b9%(k^F^7`K>%jcZj_LuIeL?]'cJo>uPfuKIeo=ila$"dUX2m^5Bi3'"cDG)G=`rh[e#Y0)%78kLL:n#"r7_)K$&ENc-hQu"\bDq)J=X!4V-:dNp+SQ,2bfaU^p\i=66JXT'k4O1`b4Wd3]G'kMFueG2PLoV(oiechZIQ+E_$@ZW%?=.X$le;XhDkCY.Io=Y<e)H=XPVDb5YM"3C!;#emT@D?G8*JQSC/D]P$Gkia=U'rJ)'FM>EZgl7]Z5s>hHec+NBt?+I]3W_.RBWU%)C72okX#C4@KO\UGjCb(hO]f_cYWV4l"nu6N[FKKZ5ID+f,CQ7aVnR'Z^4K!,YcX\Z=$fW'ZKtgc'2:C632^A=\q7,"Yo"npS]Ds%7?L9b&&\^EoN4?9Y?p@m..LAk`t%gVIIRp,rPRpXNWQ_h#.X3]Ik;rB?T&E&37!tM[3__$lF.sOgT2bt@9TNZVS0@4D4]-)U)P3I%jE(hklVmGTqHW<,2>Pk8O,a*SbNNa]*,]@ZEpE\SkeJNrTI'a1_52i+EHuNDFdH?5bJU11,/cLn*H^+/#A7Q.WFKie5CH)n:E=4]%2qd>'SY%rc15p=ES@&%Zr1MHn5gf0*6r0'#3'S8PN;1_10D(I#bFRg2pGqq[d3#Q9TA@KPs13)^<FcK=7O1.'Q0Iq+T$!NggU):b%=Q^AGFW"0).m5_jJF_BTo+2W5oAJ!S_BB<IoSk'!*V>Je^?%I:GqRX6bcW#[bJLrll8+HQZ<G16XKLMtE<iNhfW"0q%Z[3fYQfH2%jp!7o+sfadk_Re;lKYH!3Q+?SWP)HaP:2HcD$cB9#RP:Wj>@k/ltJQEb1eZ(3<pMAeSOAQPT&X(mmg?O2Hr60B]bfoS]bF*4?dHC%/@20oAa!)LkH_L;JiL\W8jY1aTh(n/nJpLR_Ne(qQN44UN10t1f^b2FP9>$#0,Z\TW3X'Hga&u^6?4LM=Oq$XTt#Ptp9F_k!?Q2@%UOY9%YuK7D1L;0L]R;WYpT\PR-Y*iB>-6niHHNYO;r@<bA*4`Xa-Z%0bg0=Tgf$@;3p^l2T)H<0n6IVqCE>Gg4_]+o1q7HLTcD7X%m_HX^fNj*b.4B)MmMP;n6$*Sh=Ii"\KAn'@NnTc!(6(iL*>j/+iYa/&3X3I@D(C'&nJmGX2@eRDnHGj=?r:A[jGXA5RsY42#=.YU%;2H6T2qBRgrWj)r,'-*7_TM.n_ZZ#khW;o>5M>oCdm'RW8%&#V62d<*rG+L0`$<dn5qDtOiubE$Fggjb,QC)RIdu:h1Fp"?=\T02%7Ym!f6&S2=D^Go\%]ImN@WE^nUj//hZas,:"!J^K;@kAK'<*IRKY^5?/Wg6*d1Jtn&uX)4q'u?Tiob@@.Y3kW_GB;AnIt^)qM9o.%`"3[j(8X):#Rdp("h`pfo']JKb"ptDK=O/:Z(WQ1,Op?M@ob0S"d=N$WO0AJ"Bp_A>or\'_\rL)i@2[.6+oeSp6SbII+3JJS=`9Z%Z(LAd:mN+8b/7ij7fjWrN?Mljd(cubCoo.;.dH+E(@$5-]%Jn5cZYRRB]HCYD;:,KlUDXEZh/>qZ*^a;AXT83YG^SR2];T.f7087%lalVYc2S/#]DEY"1G/R'9`(_#K>6&\^H?80Ik8e'OVEf<g=NNok>^g$/(h2P^ReT7B<m07c_cTG'APY[<UlJ_"9h0X&,'B`:7CVn%BL=NQ'RJ`RD#fQ)D\M_26_lC=oKV4+N*M2V0.,;i=fnr9E+C5M$L*"q7_"0]LjBZ%aO@abpB=_,Ecb+h8p?uIK6J,+R.A-U4P'(+%cB,R!%#GOoUA5%`_RcWq=.WEsE]KQ)IR`W!IZ]u;bKZPa5j<t$GL!tPFcam#QupUU7soSUiI1"_Io_>8"@Z<Y/2#c810Ro--j\6q%/^%O;)6GKc^#c3h6W))OW85FuH&`;S*-`lT\AD:6UaEQ*gfOu$@TV;R(cUDfklJdS'A@+_gU!I<>L&8PXsII?M>afM^N&3##n^NH%KB,&'O67ej553qBG0#L<Ltgp'ALjEM`NJfAhgP$^,6OQLc`_?.Zg[BscZ8kXO*F,h4Nhf&o_RIN"[2>3s'Zol@Q.9s/5mTA;IGIc%92n1b'Nh!KmK=ja0K,&eBr(0+934d_Z6J^4Z(ein]"Y+7BV2A5ZVCBjBmNgK^.Zk?*KiStFJe6W-1W09#>2]=jEsD?c_TVP3kh,k%e=K=N+0EKR9^;Qm:U.OZ=[eQ\kJZ*'0Y7c`6R*Nf(UYu@qr2-h*))5QD!>[C?.-fje4kZ9]L4)52%>F7OK@-kSt4Es(Y$UJG3riU%p3riHmtK#.A)Ot)"hl'=4(b^;0:T1i_[a;$d/+gRm_sIlmQ5FH>qKmX/jlSL(JgWW;2I*4]CXG^h;59hN=7Ck?Z.<hC61DFRBr*S%OZ4M0>*M41'Pd%"Rsf_NP&uo"Dc+*QpA"%Pr#R?09l@]prlbA>pO=424/WjK:I5-)'-qX\:dQ?6M)-::E.+qX::0!oe-"22:(QUD%$gQcV^.$g;6c*+n+IAVi2'.d,1A\QFVrDH"(Jf8GN,B^25SD._(<"hRcGIGAB[$OF&&MiE*_lN&ik/S%s7PaFl1dJSmnH*$='OHe%&G8PCp?^1uI+fN6CTD5.I_FjbqnDG&^"Y]kEd>U<rP\9u>>-+JBJk;\.jUI.!K^EI(s6[+E&P7Z.i0Yg4BU.*p`^TCJotU]j&X9.%6snpsKo<Cl6hcYMK`7k75,('ueK@ZdrE7.>Z=f[W;l&gt\nTEN^Y(D&fhEE@K=pZKbsO*rcfXTiS3<W'0:LDDdlMD+%ba$uR/"pO%]c$rHnhS.PoOsF0Dpfk*dd38?'!`iZ[Htp3G'h<eH0nHWrPT2t6qiA:cYPhR?'a?RP$G2m,R_4cTBK>c]7*blmoL7_lKMX*aeqb]%'"1!SI?3[[:HblZWT$TWG.af\06Q05.\TkK',@iQ7N^oes)c;*]&P\KQg$8M9NU(K2@$=SUpGDiG)J6u?IU(nj#BB?e.$^JN-onc%&Wt,NaHptKBq?85^78D%o@u%jjkOU>k8)MLm0B\+^9$MgOcm^kRWA%.4hW4g/8*;jQhr6kNlgBV+6D0WM(Ih9,iLc(mAR:*?ZSX7%9BV,4/*0CKaD"QO"oGu\&NP>Kc^+kBqNpRF(D?BGG()GS,l,XW4tKJ[Pe8IJ[Fp&O+aIhmPR!-(0$h7H?kp\p][UKp'&C(1giW]E%3\N!&oWp.i!*+5g,aS<Y?$BZ+rN!-0MuQ[j(I.RRVR,XU:N<U&Q9Kb0QMD3cc(B#>``]k95>Kon\Sh0.U0INYg.ls!=\Mngeua":%lce12I^_N#Fs`N?1O5H=[s-*62YBgd4-g,74>p+!NiR<oDsmb7o5:3^O`I^?WeFK`>M$@=<4A>hgP%)\Hmid>%+VM`V\o$+<ILo1%7@K;!m&"68b7HpZ1ZW\\1V2^(G&`BfR7c*`;['dU@B.L,I?B.0E`iR2F:VpV4a)nH(bO0AMVW!&oZ,1D)`N,cqt62EIkpWa)Z#f:%jtjNa#)iLhjEYc,s%+t0&9@<o$4!/M/%d(5)Wn:-s"0.uRG<7SIq*WEjH5nsm"M^A&tG(EEqHWPa=2f7SAl(-;!pf951]9pN?^Ru%'>"PmIAG\On[#iIUQ;m4a>i&Whu;WqLL5IUpYk_U&&3VeC9ZBPIoq0i8,/"?^\mBikKe'2I2Iq=$outVQJZ,+Gi@AlllfL++_:3k%>iL85n^$jNg\-+]i/cfj!*@-(rYtk5^Y4bKg44Z:KYu[frqV&5_ftb4YM9(Ka7o.G_h#GnZ[?H]V7!lRhLM4_?q7sOWhJIns.I7`%1(9X\AIH.tYJ7NKXKD!l`]'^"mNOTgiud-bG,8WD$OfSD4%[&:B(2:*K.Ot_p_Du&1\q,Ua`mMUH$F$?*jkk$<7Mu7(Ji47B]I!a%jd@fqoi%Q?H>Uo:qa?,jThYCj^E$L1&F^452g<[b[V<K&W3k0r_p*VKeY]M5(Mq3c+UAU0?_'YG9P1K$50V(e(f')T[,5+M8gO]2%PIX0>%PGY>\O=ogZC5VFCM<p-s,:=8=(P5AO+@=KiNYn%e]/'b(k9Q&r)j0<i:s-4c='UtjQ-n/3#GE#i(`dT:;N2(Ri\p/#A4SY%.La0BP%8GuIuHKMK^j!>6LfmJ#(+f8&W<Sh74A*[6?kKfi\8qI1Tn4>KTMk:k7]N84oNgC@<-=k6G^VB%Sg+\r-X[XbgZgtp^MKV%J"ckG+oWCZ-[ElMm]ZQhNT<_4:YK!meVA)--@j+&@:QN$V2^nO-KkHuqletQ;;)*M<:H_fc\F=)O,W_9;/66[=d@V62jlN&=tXVb%rh/`1hIjMu]VP!r>+X]\@@VaP"g;D!4-G^uqMUM^<tN`=ASa>bW9`1&^]N$oTAbm[B,`/6"ppDh?bg$Y4$f?'BX;]ch"XdSLj%8k%rPEo6+!V&PN*i-q\KPo-I,o=!"jO)%Ah.",5XTc$SX25I^^C""V4V]8WI6GK+6(9/!ZuME^%?ZH\W-q3]nF!E*U;&"O3sS6+S+eW%cB6[$4bu5(:);PA_[86E^)qg1(JX!\Up'lK2n6/H7/REk#*@a7n+9V.Rt#S1<dqY/Q$<bOl4M6GHQBPDRf>"XjL99]B971DQ#3dZ%5qsK>aiOYF^1bA6m7dD:VF&$_kD_AVeVO;qh^[%tnmj$;^3.;p4\AGu(&j.jiXaEY*MY1"2@XXKH*[J_4L#<b"TQmgeH/AR0ckA2%.]sZhp4a&cEdfugr#Yds),C8ZNH#2@lY4,D0AdA!^Vpa*#/.#=4G+_YcTBEoJq(fk;`nkggX"+-4Q-#SPd^_$+i*a(cmMQqIr4fb%]&L1cmkJL:ni;<SkrlZDPih)."*.^8ZqC4YZB'A.Xg(Q%J0q!VjZB9;?<Ji-ZO7!In9:r#mD(n:8n[WS[rpJ]PL[I_*D(n32GL93%pVQ`Nd"@L7Z3=Q0-X38UgFs12-9!F=*<+ge3r!!1`)Uss2FB:rZ_`B)fB%4A@275c<d+7PlCfpL%j1NA,L^Z/^AM-R-a-<%3!8nA%ST0^?B-[h0`4Z^ojD3sD@c-gTY:KOO,9k7!@Hb1qTR<%)3knhD7DVG97i\=3)6#l6ku_%81i0M_Gj)KJ"$\7N_(UaRdb[PkSN$m5%d^Qdc0WqbV#Gc#lmS>'15\,,5*<)@lOa\@\LEM%nd1<qah.]hL_O'@Q48*HFNqp$Pp\EoNf+3[,GqBoYJrpWhD'lO/YZ*Fb7<t2U%g:/JtLdc=KbUP]<mgt/,+Kpe-4I^rc'`jrk[o6b:B/B5j3fL97hNW-BnoiGuHZ*13Q7oMC4M>Cj5'NE0*dDE@=DF?clC+F#Oe3P;%`sD,i_@c1R9@p7%Ngqp:N)U"hU"t:bVD:IqhAeh?:Ml:&=Y(7&Rh,dK<EN];:#7Y8a#/E[`4rX#?p&*jd\_kn\I<o-n,+2gCDd?5%jb*9S<nkUP48_/R)3Olr9clUmZ'p`tr\s4os8DN;kNd>15/7!iiUs*u48caBrpTPF&C:nOrRp-Os.AD-X@Y>m^1/\@=k9FR@pKF+%6]2cNjS#5-V+aP/lTP22oR4b0h"iu+nZXl!W=B4a0F6@Kc1fFTe16!nn=aOqI6W/OI;eme;(XN&Q/m`#K8]L'd"f-cDhIf`LE8V3%@i\]b*K)(KSc-I9.bjBG0b3#nMDP!;Sb:)(/f`695>8CF4nkLYGUB.Jg$W#,03=cpq#4WrT:c,Bm@Qn\-X[tS*+I\6bI#7c\;$CE%.Q;D$c=a-^W,:%5b!=l'(jMXOE<+n@i-%RW'=%o!4#m?0SUBX2r8lA8#VU`#&Qjc\`%cGMK;2&30fHmI@f*-AVk`^V`^4/F"O>]=%!s(dZ$nMjE(hcj5QHA4*&NY`QnM9GR2BCM@$>g_pcQUpFCd6J2#me"e=9Q(866"+1`uCHU$f_E8XrRNERTP_H,*g(6b`9m8p<i-&%rW4:.WrLc2^OPjc@E%[G5J=Y>I.QKUqd4jNr#2%'m-oK2hR2<14S*N&lF;oc-S[1u9EQ[oK!V;I[3`YadMAa_?"8fm[&ftO8k[dU%7Ean&O`i\Hp]/G:f])T1=FcAK&CB!SfU]mKQWc*hP)38"(2UV!Zs\7%Y_tE;:oo[:$Bl`C1,0CqQ6mL-P/fK,(bICZad1>ZiA2IN%d)6oMIh*K*A8-M!#SD]i<$OGJn:.f93At`K+AObe^<IVK-oZu:+MObn^hq"WOF^Kr9Yb<D*lHE:0lK/TX!o/"'0(RQ*4p&8(-<qI%rE'F.]oSG0+n=`$8Gp&798j.DgM5@f@M92cN6`(ies['^@EK$n,776IL/6tZI2/+D.mD@mq'&fh'B6:?/DflZUhZQTd\NY&n`(K<%3B5APjJTGifo[E:]58.C0p]Tj&o@o1F2/9*>lg=,^'G.Po)#sL9S`g/\IFCG-6^76fsZnQQ=.*V_'">lhbT4Aj#l(\Jn$o\D1f_@%iDW=#CA\`H"D"c6F930e4Lf2\;WbF\U-b"RTR@K'XlU:3lWn1p)iD`%3EgO[O=';Q#iISWV[U+-LHWQX;?3^%au_6HIi(gAgt@U!%d[&-:`$.$4ND@k%KfSXo2L6/G+"_tkMkkTZG7f-Cos]Q"BR@o7Zs%+QWQC:-e-=nSD>rH:kP;U9b6)D_U,X31ElJ_XD;\*0(,dU!%m>I:G#Po:\ft6ReWu+]-.f:Ap`6HnI&N=43j!BIo=$B`H-g-#f"+!=IiB]S>CYfb:!kXh6]]_m["SA?7&[4!C8AL<bTuDSb!X-LD%(f6Pi6>4l8Ql)p.GD4(FHt"kZQr-$5cM*-Q@kD.kQN,=sUiq];KrIL2qgQlL5\DHjZ<6KHq`cY[[qKtAGD6=WU=#iI?uFo;!5mM2%1E?;r_4AL,p+jHN6b^J+*#K]ra&!(TZi2&kHMb\YLChpt[tL(#',:]+O*KY>kcAl6@.UC0Ur&ag\tnD4:MieR2P@"!gK<iOGP>g*%gdUi`SMcGp8mnp/JTE;#EMSV3YDf;iNS?O])2S,>!g,"nR+a2B+ATdXPn5E'b!P1'F_sdJ?8md2#\C:PW&C=gK)Ug"O@Hc*SupLs%$O9-hOJ^eXh/]fp@-YqFjR"`Ud"]CHFqG$^)b,fR2d3\M7QVMDC28#;fm)d)KDNQ]L8gTTe6:m!Ce+.0m;5MD:`3GhD%a;WSd"K]%SotfW;DPNk9aJup>BusA$'5JH(UOU-pm6#S2O\A4D[)0Kib<tC(ZI7o>O`!W;mJ]i;=Rsl9RKRCGl>C4kHWM3mO1hi3!#Yl.CYmh%`>*:VC>_->`0:s1O:GN'UkC-EVK5!o;&YCJa<.0\G*PoV[+5*[SjRDYNoptE&;\T\mU.b748Wq\/G=$W.YVFAfE6p9Q=rB)-soB<%cY[!rOpmi6&eGAf'1[XYCfo;Nq'`:@N$Cof]"fd^"#hg,&/aZ_"2InA[)ue',mbhUN%U.F2H_PnYQHV!qgsq=m+Htf.>7pMQp9'6%S5ILIUMUXS0Y(-[/9i=Z6)bjf7SMp4i:j,ieed<U7GJ&167.8$&5NMAdCsu%UJ[6Tp7$edf-lN$Z4$/Opb6Taa8IGT-5,\d*iJ_:%VYT0([t@OKnSMBd0dMFQ`L9>Q$2].gG[2n9BC.8kGS:Vj8rp2]-Ifs$@M$N7&E5bUB7mc@*)fB"%_>2^%s/b1jc:^K8d,@^[?Y:b%dmiS9_@<]T1+Ern@)?V#JUb:@9^kp]U)bpBTDq^5phD:!`cn;n]0Q7O\\%A.>I6bn+/!'^RO?#_.R)4(S]Uf;A-4&3.YSE&pK^p0%/MLuNbjfBPk''PI7MF\(L[QPlhcY-;B,^bG2.Z<5E?YKCaP@7ZTMlWG?$pDq_7+%**XBOp;L&o&qQ"(9$l4s4S8,L6^DnH2G.23k%#19,g/L-$TiY"#!WF6,!*f#KfkI4rtI1h1R1Nq"(kNl;gPgXnh&]);OAS%WqO?8.13Zu=E>=a80jPE1<2Jk?=hXl(+p2a_QWR<6g%\9JGeVA"m3Wi\'m_)W<Pp^g_OA?3g[=t+Ra)isY-BOG=DN<hoVRZ*,1Y(jqeSRs's\Um]*YlH+S\,jm6I'&C-Yt\cr[_3D"O2$NQ%Cb2k$SIBWK/?9sX.Nm9:+U)\k`,046,?otuW&SXI%]IW&e:lTDKTobnhP5q,!DBO\71tqr,3kOO%1tqk&ro%OS/DdJ9p0cl0pW!#%FuX`'g\W:jWMgi'$ODZ'Begl@C]?p86/%bJ`aHk/+V=j?91t4E1cbn)C>/DqOa4>L[UB#Z,NqCiOq:&r7Z8N3((Zf*LDe@j!Z><h%"Hu(YqgiPj@AP:l5RR)]$M!!>j5^#[5,UUF\+O?cW/X*IIQ_(RllYS]$Ch1!==[@1i.4Ad_LSZ5(3J@=<IpKuV0^#/"r8)Xj(]O8%W8\h!JcB8c/TtA&D?W>X'<VCL!Sak%CMVEj?Wgki0X=#kElV9i>bTFK$UR2lS*Y[0o`A$8AqWlRNV=H'_.<TJg_s[RK#\a;S*&m-%RIN.dbLj`j^-]t0[WP&A3#mGN'>h0]5Y5@;YQ-"Kb(-_#=;b1O5hH;5^uJK%$Y"b/aUT-qaCaI@(BNF[j5gJR_-p5H=<hW;6J;Ws%:&;P`YK;ETA4'N6KRmYuj(ebN<9fFGcmd%u.st($GCIQ`Ul%]5f*4m-7]auP4E!V_#':$rba5Ep$E@peH&\tDS4neEFDX8kWAijQ%"'14Z?/]SANBidE^4KcBqm=5lVQ1WufD(dO,:A.]g)k+$"3.d1[TWJb`kkhKp)Gb%p=eO4#)mD7i!Q[FJ?]RM_<s9k/6IDC6p4po%la7Z)@gj1^qa/Se!FoO@ajn9]$GP36bRM^,6\KoJZ;i=.J?l_8YiBQ.`;`jt$V&'n'Q1]hBPV[WEAlRsc3KjCbAng)*,r>9M<mb@%VVkG)31C@sPmM)s:g"q\<+2OJg8%b/gV1q^BY`:Z,I)`?S8H']^Zl_MF&Fg3J?tM-[O7Tii$/rtWoInj'PKD`Ci3HqLe)]Z79_fO%q#P-EnsjH"iG:RuJ-?V3K#Id<ZbfiFV_.u]cGFmi)195&n/Oi/f/VO#CaC-A2B.P1g;Uleql%'Efqs$1p0\:g$dLo0EWaUQrkXW$%"Z#9%S9LJT#33$:PV!HmJ3aDBb!N#CeOPj@$Z2$4%4KuFg,:^i:mSffCRcu<N0e.H"V6J<_`HamD.6cBCRf6O$>aeN3*WU6@%;3P%*+IHb29qLQ;-=RXQF:D,jEI+GH&\s\N9""p6"rZ)A/_3+g-/iP12MSh>Jc?$Yg)%8't2\Y%*@-/15U!$Ck\EOBn`Z(,OX.($C:#C%=30)"OPEGT&EI%?.tc_D8'0i-[$S*(TKa);-sCbK5f@H*[H\3Sm/`;@HhiLcI3PMG)M^M`e<FdS3OP'(EY[!T*8&?h2Rd5CHk6Ck%)/(IZ_@Y$=T_Q)*;;gK?$bg,TBET4511,%bJK`Lf7FMGe9Heq=QK2r9B'FIBQ>U"$m#*%3$Ca*"UFi?8=M\a`A<b9)73iJ8`E+q>%D8.J,A0Q=66^s]V``(!1cJ([C`<p;2;H;YMOZa2Wd!:<i6!h''.)(jK7WRKGD,>YA>OWYO.(cK7\>i(E7Xr!\hSk%6E2l'MX!D!+%%[#&0I*k63-m6aO&j>Kq*'T=0N"G5@HM,.3YbPTo\0*S=+N<sQ]sQd;fn-&-ZlL9s'm74kgCuXb+@k#,FuFab/@^@J(#b.=olJXj%IYAV7Td\h3$3>J*)JTMrV/^MC)8_Ca?-jRf`GhQ4oC:tWa;G*K(g5B-NVH0kK`F5\<JQS(/9a*Fl!tT)@L6t\pV6#_E"*j1ail\/%D>q<fl^B.]:*2:P#Q01(2t+fE+3.4d9.dXoA]L9.T'6eO8[51c,<Ujn1N4%LeLiu0\K+lBS:BIImh:?%6j0!X"7,1sG5<9'0X*-r%#1eOHH=LrcCa=&m5WFpg*I\sGH<n9;peJ9;";ZVEEfSjCMMqT6kLe'o'4oo-7IsA&L;mY1gOj,HoQD:mk?JKV'?JL2.D8G.=cQtt%-$ohS>SaTpo'tO$A_WA*m,/N\(k<;TdtF;b6t(W=V<O)RH*J2,@9T@b^Q308L.ED'WVJfi>)Kt+O?:="ZW67(3sL$Ag,/2BXPpD#%%1ZUs6`qg64s]uRa6c_lc8]1bED:U'8N"lUaUdBd83-n2c!Uc'5Tc4cE@3-L]orsg:6DDs(cn.FB(l]lj9Q1]WuO`dL1T-j0\Mr^%aQ4A0BPl*DL1q>A\(o=\7g>^f9\NZjX8/E.7KG=6&K%!ne^t,8"W&G0^ED@b&@+cuVF]_KR',2CTsb^<eg_+<0p@.EO[412Y?52[%.,OS(EWS:XIUr%1$NAO58gkODg+=`j?ipNpS;b4E?V>7P;<Z\q`1f=S%-_RqU+rTEe.tAna`1b=&Cl?'A!Ed+XN62[\8n@Oc/`m:%&G,.^D'K3!<=Nk(g)K*Ji[#YqRjdT,a^3T7L.WO!cs'JV+C3&ihD^80Y3<`FJK+]o0T_3fM$<MM`(F/Xf3&1\cU"04N=>6//*(rP%[Mk(_%AiI,B<WU<Wf:,N)/+dl1?ZL1)iAe^i(.#'"DgD7+s9?I;d5@&;-*?t7jagi1uQtq4IA%GXdsXAG8hZ_D>!i-5NTZid6HC[%QeHbBYOLUBU?-D2_r3^GB/mn/LeXRfQF8QZ9%8YUW#PjIQoR$@B/nkjYjR./aP5uW]6"M*gW!uU7ZNW*N*QW)*(Q/IP_=RrYUrBS%Ue=5pY:rA?Sa/fP!`j[5[ZW]mpI78R'+hQm)$9C1a<dlVU@,ZKL$44")GU?+N8Z"_8JOhX'M.2;gam3p#3dW[bFDJ!QQ\<qJWoUb%;g<d##<H8.2JVk*o(am3$c0VPZ]^3Y)5JqGed0inXO4LV"**`%jbRnWh?3F[`,3A;9S$7X.Hi:@_=\Zdb]4j*`$.Mn,n'!`":E.e%*7L,0$G"-[kg[%<99L8!HBB@4NnX&ub8=,&8"<T0+[amJ*AO#:[P(^&-8pH]W^OW\m,f]-e8o3G>`I_O,YLA'6Qhs#@;*K4of<NR%3(!]e!hgZ+/TnqJ%R[1Y'-A]oN^'dB`-EI+;ur![DO;4Bqq<b=k"dP.E#9n^U#`B9K34&QJ<<`ZlD=bQV0Y]-W&Cn.14\n!p+%hX%.:VuR+GY#gV@5@8R6SkJ^k<?\JQG"XUN9&SesF6f0MT'8LG^c>]K&"Z;E9H^P_b288GK0J3q7#smBn[9b3:!8dhjsU-;^qkqjIDW%/5GE^q0.GE&j4o$E1k[<dKI!VaIggq>!,>j\@`s=(!.Hd&5uG/^2qjrM@Q[J5eE$=+U951InUXk1kTN#Kn4[,>2(BZZ:D&P4j'FL%*Q6%h(e@HB[NMWL6T(6a'CeA@F!.:,0Nmo'A56rlWIar#f1<Rra,BVR.-_^%Y(gt[_!+AW*))'`Q3Is`A;_uN)\;SBZB%^>KL:$Z%1>WQp37&9%40V&gG8s-b(^D!1=e'+IDMU3Y*.Akuh$.9<0ERb$YCL+u!JV!gkCrIPfl7u5NgeZK').K4W4+\pOZ-rOVRA$1+tl36%)?@HaoN3lHar"7W+edIW2ATd3,c"![!E)j.=?$GBLIF=L?IC/#\N+?OGqkM5^hH5b*Paq,4?#u7*;0P8'kpiM.C?aJHq^C,B*i_`%C>jEd6)IOiSnt6H$R`%`oB[]P$nf!U40Wm)\%KJ]2FZX6f_5G4FDc(LJdAPV]o;3#<K@jh!QZ5mTO*fn$sOus$8_f"p`ZKF8m$3J%FG@a!@X6QnL9Q6A&f_Y'CMWk_NYAs7jjZ-&9:rRmoYaV8!GAu;^]KW7e@$N7EZC4Wfh,'VbYpKL\e)='AgQ;6$aSB8@-rcSTbu<Q%Bpu)ILkWG7"T[Kp/.45a8-YSd`m>lne(>;%UgJoc9-!Y<ka8ei.7V1]4*pSM!g6cD)-_pa.*Qf@jKhZe-uNMiR)M[dZc2"X3h-Cj%CC6o'+;j2d!4F*k$ccob;e9\Q=`a'gXft8'6bM82"@H4/i+In::Cbef-.`eAJso/,0IXZ)SXpU%.#!;f;\ZXcJhhoYb=OiA`N&=0%[;D/BY#f&)_7&;u#](R"O3oH@KSL!pKaTPB:kMBiVU67Lpd>nka#5'\NJ!W6N"sjND(DT6&mb>@D#i*!L)(+aTsg8-H14WT0;f<4%6k(UM">%Ws3FYjFV2@^G!Ad5M1t2[(;V&[HmfNFBNA^955aC4/g!u)Ja4IYIYT?i[?c4'"E^)TmTsfV^Y"cQj[53ot9*eWK^)KM7%<+.*ul.?F>TL\&kSkSA:B;Q%h(lk3T>T<TV=U*dF$kQ=)9PoKE5<ZnlA=i$&]-,if<XKt!DIQCQ\tB24!Tnn`Q7C06I!6+@mgao8%6X%-e<lgXL?`APd?I/>#f&G:r8G_)[[^"T)^FjV#C7m\g8.g>"YrSRGC-*=TI>nn"E[]uF\J#5_Jt1utqgH4dIX<9fp_DH9iSV1K%fMq:TU6>X<Y;e060Rqc&1'"LijZk[P1er"iZP<ZI%A:TAmK$ti^!0fYl^+)?+?+tO@[*91EF>d$eZ=:\-4ZghB&sC,-LX`+G'Ekr%ID=REUd>;e/->O&^6WRJgGC4WTh93!<H4`&`EL-)6IS'k7_\0\jehUq)10?6]]$ZsHW<>I;.UTH^f&*?,uAP/(A/ClE5;a8=+`?u%pR<6(]oEUK@2(JP0hI]72X;Pk.OsBAqZjQFhLOEg?Z&%Tl:C<Fli"K!OH9M^d,"[<n()QjgIJierPNce91`0DKflNR6;77f0N([:%PP\I?U"l`]%E@2j0>ZJZf@f"5F$CCIq?MYiqZh(U%qg'tI48,6_eG\Y=EC]d:P<tu,f*V#4`(9hC;nduCNp1i,^`%%3S:;f="9]r%al%pdk8#I#V!C>rN(f+%A2H]-b[,)J=H7qaBE<V#e?4X<&ogQ*#K5>]_"#!uo=,ruO95_4kpcBk7$9u:"4@?C3C;[,I_VPPMV<nT%>fds/YHq4<AlYmZWr:!NQ)LFji[P#n#(^/YT[r2BFCIZZ@QZ@R2=jdG0Od5dGWGs;Z,KOWc#J/p8C;tgN!>PS0]!SM$Q:6-Sl@"s%LW(jM,7.jtE]$@c8IPseX]>o[oj37R'T<=GR>o=slp3!5^uX@Cin-&I)2]$=5LmeU2#8kY7^Cca6DNK%LEmpWH?%(6r2&CVQX9!0%+aaL^AdZ.C3H5HHWm!=cq8G,]?[&10aa/Ion!uDQgH_#h'"M\OIR[aeL?kg"9bT-[F!&K:%O")RP@7I`JpNt)QEX,GPB\X%B)k!D%,QX+BhN$!Z3,lp6_Rd7!OMRSff]Z-lfdCi9)9:l43#`"BP2ui&:_FTj+`8#=CrIR8JQmZcXUX;KQle,VR+VA:&mU^DAjcock%.fd%,H^78'.F539Bj"gC\GRXO\6TH3)o^i1_1"r_:)Sp+Mk^Y<#9&hPc"Q>0.5qj[fWI.CNj@a[c#)AmHs6m%\1D&?/4/Q_L7C!`U;Q'%Yd_h([q'FK[MsYM,ouH>$oiGD=qZR/^#*YmRV"aMHI`>"kEjUp:7%CN5T,/B'02%36eG'E2q8so#QsHWG1sF="D3,;Oi-:0orUKG%R&kTt!L?L3,?+*CU<0KB(+PLu-CL%\i'[q;^YaQ)3sOUWTp$IlM8Z!Fp@Ts_Xb%@4D7MJQjnotd0U\rk4tPdu^-YJ3j3hWA;RSuJ%SBnQWRk@%)C^3Jp`A>k>5R)AX_4&/sVXInPf[A7tp@'E#ECaJZS=MNh,KW,3g6B/"aPKNfV*:FMAIUUOBkRn?<A!A]8^4RJLmoM-%'][sK-D7P;VVl:G!3o@SFFZ8r"A<'p"nR<KS4]I%0EMHm=k7!+6Ns+hSdWcpb/e"e&n'!!?D/UJa_f`9MQ+cj1N'9pO;&i)65<BW%Zo+->o8&/9h1Z>,7$S5b>VmoPFt>UES$>A`@0C\6"=R2V\iR:eB7Zu(^d9@)VF>T+jeIIs2INMj#XBbQCW'r:GRO>F)pei3M?c5$%8%0n*JR]7HK+%A'>hB&Bn@h/GenY?u%)lAEbqI8=+t#*EZG4K!i54>N>6l=5N$Reu"31G$:`ZSQ43BN5Y8-W*'lXe:26ReX[BA,h%",F#K&d^^>NRo)-_sW*`<U'o%Jn42k3"sCg5IZW8D)5SZ!$&7e!Xjb#?"R&rFZ_TjZ4rJQc].$19C'$;bJt'iOm>uL:Msk4,,\FF%Lf,[I71VlGYdQi,F@J;)1gOpj83qs5M0b.hV0#!R@1>&uO'n]S,?SYs:jOflARKP("B#JT5UaC,D6o+!SM(DeObYbIa,1?(`YM1i%SN,'u*4a]%mMlbMq'6df]WmI(*ML(,UOY-IYBVZB#DF0-g_j.N]G!(Kmq6(eqYfJunR."ZS'XqPKC;iKYZM_c'51Rb+XB&kI2D]_%"3/V9WRDKcK,+5O^6##H$0W[XG6FCq8%i!^7Ys?j_aA-&W&Xs78qI'<(IJnraW^h_iF`XJ:u[n181@U_g`"pN$K@S&[7'T:,;9bK%1CVi*"jM$f*B:1:#hIPkSIXu>V1;tZ/6*(GpT!hl@95OP1#TPpH+oVSBI(1'@PbVIRn2pcOm9Sq;!s^fCPHE<N&_R'b6E5!?C$D6%%J%oVP$VM(!B;^d"I<U<3pk*k+M-!tH.cT('UL^/)bc,l94,+.3%eEd:bp2*f4A0=q*`*/=F]^.(If.8Y&$>bOPN>_dfts88RYBZ%('sF1&YR^\-8^et*-58jKt(@'*$JYkE$TQ.\<BA&g+me>5Vn_E%VoN8J3.1o*$-^rcq-4H5cfE%mQlU=V6&DE?0k6q!d7`P$<Xas%hU';&)e*2b'<nf*5d'$Glk*/^-eW&P_8p^GYV9`!I%d(CcH6OXW34c:X8sUpN,>["[1C+W=@^5/n0hPSI;WgK-@-;;-=@X<#&kI/%BH>:N?(`Yc-pJ#FR#0m)_Ui`B\k#o4h"#b'qoKeR_?hcF-)?Z(&ZnJ)Ks2\W/=aXY!1W%^d<7LZ>mR$PFa.8d?*qTk<50'_`G+4@%oneiL#V?r,R)IVEA-Quq_f5&aJ/H$[%V#Y8&^O:F)urE%dUb\:.TEui!)CP2BmB^rPFR-ZL`)#<G2s.5T<ql4N<u@P`TR<;9SU6@%3#Q0mI9\!7J2qjrCs,t[,O1<)!R572*sq;!0glN_NZbpG3bTD7'3o7k!9CMFIXEpepC$;^Sg?[6DVJ/S,p5!?cO#,[WO!lO5=Y<n%3sj(Is(q([gs'4RNR4`UBiQ?<NaO!>1RO"TXoYk2-0))f%FdRs`[>7+X(G51YapQ.^k(BRW5r,SkU4<<E_n\rk@,ZTi-6JK\RWY%%J71?`iE3-f)p)KbKs,5.g3P4f0lh;>-t[;uf,p')8dOIN'iAFp%I;m^h&tL6@$PBo>9VTinejA_AL'BndFCgW6G-bSVK18s<#KNU%Rh:@M<tY?1-<7qf)%hY(QQWLpM3B.(7@-+A\iC,l466$^0D,,Kh2W-2C+)E;Hm@Q&TY^DtFdE18dj.JI-36Z>X)PO;iUW/!,?BG%%"X<X=TlQUCX!h5cU5UUC>XLfQBVbeaRKa=3(>$@0XfT![9CD$M;/44G8QEFYU-hu(/UU!dQtg9^ZJUZLJe>agE_cgCVk[9X,d7F4%jPUHO8p&6I130W"S3E4s+JcOn0t%rPp2;BSOgmrE/Bk3f[gcS7N'g,tjop@tR%:`qHJK^AeYGoOcBt>k8scs5EmN[2\P.Q\G*'=^%dS>N&>'tb?Oo6c2b!8E3$[XmI"LP_4dV,!aW?pH%Mc-5sM'X!j`jm\Z(&;YhiJM4!#Rd.>agF_Pe-hQlLK2n4_t`>NR`kq#Tu8YH%O[;HdP7<%8!13j+WjVL,o:.@;q#c1D<UW)VCu:(KgD`5)XAl*6M53(3-.cVY'c6NuKSHUZR.ril!K42)Kl/#o`ee*KPqN1%P8HD9%oo\*d8-HJL#6Q)T@5^rjKb&Y_<l2bZINZUF93EtT&!+PHP(6NCp0QdL10I<X.#slG7"j&k5`u8Me1q0":NH2c`*2paG:!>^a?F;C%Om;#F*q1ahcp=bGM3uTd$=hZ?Cl]/J:2]c?U&j""3n<b>Rp9N;Ug-iM2f"V@QF#C\&HU2jYCYJHJ1I,BD4+KJF\]jJ*GldV!,b0c%l>U'foXIBKMTG*#+AZ[d('1KdeMfcD,[3%2#\lpb^/T!#'$H5'>c%N`!7<_5I?<OlM'n+[-moA4!D1Ro&\0%kDh@'8':9(Z7%NqO%0Li+0D7RJ%0&i1^(_(:*-ad6&7ZeiYK<BUe>F)$&qF3r:UEX2\'H%B5V<2qj!C4@X?t9rh9=W_=0o?AsUq$2l15ZK_c2$E2N$<lV%Rb`_@-o-lp<b7LmA>mMi>1^P<1=0b.GVPu7=;+U]$8W#k/]PAa;#o82,e>'P$L5F;O\l)eAWW<W^gLa&PU+'lYZ;m*!Z$<M!(TKZ%MhQc)a=(_)9qE1jL'eWZk;>"%!+Vtua=%&0\Qd3)!!bK(CLe,^np*\o6'rC!7aVtX1;DV%;<2OA)/!=k)/<L?+ou]%-usKO:"764%!*ke40r)f$C_4e6-sDD%hoq%R8RR1X_AZO9;FZ)ePmV)gWa.CfK@sX@@MHfhm2d*uZ0DN1)+=YZ//PTHUWBhK3U;Wu@C!2'JPkJH%KI_17!MS(bKnqJk!927B1S]I85Y632'EF@1O3/j^W*EIC"b8VlZ82gfnhKKi!`FG/Q_bW<7BS,[%9050]'F9F'X.e(#kH%b!6k9*%"/EYsPtRm*;&Dgb:fiSW^`8`o)27U4ZCOhm)L+G#SP^NL&-M6WJl#+95\:^\L.l#G7Zl("jNGIiZ@l\GN$9(5#@V!S)9ZD^Ca*BM%BU$rY;E/m<%JVQM;\:BWaq7-F]0Ss&6ZgM.=I9]ES_WW,IE.ZuSVT$=hsclW^E*h4B6NmsI40<E*fGWr=;7PecE;qB,.;-=n>gd1%4eBD&@*Sl9F$0_'Tu?9CSciONld7*tb8MK02c?p,901`+%fJlG/@>sC?hZuSWCkB"d5I/V>-r-E2tbO5#P&.rK,+1["tU)G_oEa^%_jgtO5jGgS@V@j+K(ccYRQ(*op7<d&(_NOZ@KBW7pFEIL]aN=*Y%I%.fW>7$1]%2D&p$o;jj:H7nT!d#"*k$t_$^*h".!_&LQD,f%c,7=68H&6RoX<3u8?^dEH*b7p>b`/$:N<N!!@qe:D\E+\W+F]0N'[7lXu7B;h7YtY'mmdDlNl"bhZ:K!JJGH1O6I5n#<!QgE=tXn%52Dpac-j8X?SPm0`cB%d3ah%Xk%t0[-Qs28T`FF6"hOMhZ`5rsBU^9FC$]sFlK7PchljhQf]1$E#`Jj)NlsD=Tl$Fid-G:XhX%Gu%\essq`O!/3<:"8;ZQbZq`!1N[=u%@R9?mm"\srcDqfeMN+-'tSHOchU8Pr?NH3AUSK;T5H.35G-FpdU"Y*J[YpVHflk=<;HgYGWj%KBA,8j\-$r<BY\_Ph-cYJo$O,Zpo"X762!R'^1&`R$"&\*b56c=?*60;rpRT7PQ;^)3bHk+R]0K"5m@0!gY*#=1d3[':+TsV+KK1%YbO7a=nXs%e9WuA;VF#XONcgj1,8V?&DUUgH3ZJ`nXHUJ_Or-sadr*0%9J'hhMkJ>FDf:r\q;3J2in*fM<bbO.Q\jU0"ihNZ/BT7%Ut*@0+>0@H^sk-B/:YlFFa=4G-.Y-+KjIq:5r$08JE63[<;C>/3Wisg*K4Rqk]O/,#BHa3:6f8ni#=jcBlK)P>;+PgoQmWJBt-G9%ln6u5pt:f<[CLnN:8Mpe!;%OR:^8$-1d1p1+>d(#$Qen9.8<-Zl6;&LoTHY;''KZ_]n5[F(Y(5'#_k\X1r*KYZ'!JSf"b]-qO(j_%h$P.c_?0!(YA_H9n1@Z#/iMQ"1e#]'@'ud);+<,^R4WFgbQRPN!&Hm",1=i;d3'P_(1u7@O$t!uANZg/T\mq,2,>1E`Du\*;l,t?%l-l,MEk2_E![ZMtar"+]QKuZ'*%GXT>j!$.<N#+>E'l_u*Sm`U2(lRM$hGUbg'W&BbLI)oMKpDmB"\J?@r)9=*B:&Y27I^SZc19A%=Qq;bWo*IT=+FC]U0%rk'fjU7YeJ&oU0JtdX$^";4&7pP1Nc5%WoD5<0R_*mFTCn[p8HqMWD82E/ibm:8LfO3@7!JnD3CVA[B)I:%P"e@\7_iE1Lm:1On]@&*K4nA'iXqjY`'Ta432A-p'(m:XP=1i!+>em:o1n3+clIiRN,&he,aAlj=PI<SC<5]BL:V%4;[%nsn&@M\%[p\"D$1,0$)*1"hNI0bN(dD.+"XkBn.Qn9?`RgTph7;U,/tmW=8)Q'&Yl(<()Jp7()/AIC.o(+F.==b$+]DTDA?_3%LPtU;:ldlK%kK3TA/Fcpn9,&CGW=O=&0Y8V7W,>2@^0kUnV(a[sat#0_;O!YT#&rdtks!dL%#-'e<$as+TS&H`UC+PX`$C,uRH9m%'"*$'bgdAL%La5U9ZoH[JE&CBsJl#K<[K3p0WW70IaJLo)Kpo*'8#=alK32]QDSFf#VF-li"0t!-='7%5Tfs1`VP$f5LGa=hB7_d$fKdeM3,hFa%oEhaNs$7m`p]`G!IWZ"_`!Vc6$F8-hYS8*_j(\"%bCShM`snid/U33.H5\0H1906VbS"T.QLn90i[$t\'Ir<*W(N$lLDh67H^aif%k(>%soYj`5<"KUCIKspA*96o2GT=a17<8HM-[5H95DB?WRAs:k!6ujq":%SN&PoW69%:'k6a-Z(80aIb79Pjlf;E[pT5,J"^!ZW.%AqBkRZU!B7"YuJLp5@FNl))R_l+F#X5E]S$mopQN^gCn\G`g[C0`7kX_JrZ]Z@J3K66(iVV-'&;jdqA:f^QB94rp0H2W"rW&Cn^m%qe2DeX<KLC3d9D8//(T-2C6<iLtB+46@9#)*UdYH]0o=5\hZpo!4ZWU2bW(oP[5%GN%F0X2+qHn=)HL?!5bTb@0=H+;-/JYR'"ko%=2P0tUhF=AKs.:_i6!`.[q3G[`e=R&>iU&1R;=fUe3(2D7?NNGWD]_G$-6nl[S%0r58D+HW.Lqe#_6HUD7=<Qd"0!_`mHJKfajKc%p7(Lq:e_T3[U#+P@l.t?ZE@Z*@,T`q0sp=[#hroQ"i:tJW39m(&60N,oII@/a?>f^o"oJk"JD'0NN.N&<]EmkCX>nNYUU]pVUclo%gEu3s/_DD57/nSsT>c`e)C(Nu[L#G2m<!"r1<6:-E8$$9fVMpDUP#[Rj[urf\X8S!/g%QbV1cZC+j'b#]gRJT?')tuGg4#p8Crh7%!Z"`RH3FJgaE/)$23RbRLi/`]CsYhHe-.[(AF\p9e?'CEbn*.8hX$HUpFen[BDY/Uiqbstj-aptA?6M55h,Zg3$828R$a]=$X\C;%"qIJ+7A;*U'OaD__;Hb#>*uJI9%@)JMB:!\RYS<aOYcZf=)NhEeo`[VQQh7j,1M:gV5Q,da^kN//1r9/`.%jKBAYM49k4=&IVnA]%*S92R;LTJfVE>1O%Rr'];rt<BM\F$4S&,MGLY>uRMO0=l)H7rYXL=$rq*DUAJRTe=gM#`X5m;O$3@k;D1F8pLM-1fO?_@]ZQpjh)%`XmtD*Is6u,iP$k3(S%,Zuac;([!B;[WVeKN5RO1a;D)s)8HYS/d"qpD]S#RQYJt7M:nWT-gS!F!(!n^a2,3TVefJBE'u.$(+Bq)%/KA(X(u*30EDWHcpb*`oRu/S$o!VUjlX7cDHXI=rqgd,sl(CUEG`r-bYhHo"F^s/OWHW%8#^-<g!m8rBJ-/g%T;Oc@K>*.Lj3S*S%+J-M5=]r2]$jRK&<+KAf1+ggRY/MQM(^@e<^I[ln]EDP%eK`8RGo`jL6>8o!gIr3#1b'!]"\2EBW^chk3c@Ga?]]6AXGnKQ\W%m%%gIQM'K8nq<[#st)/9TRg1)`o:9J]=5S!>r6Q;P?:qM=4Z/L6deF,m4Hn!e'8^n)ObH`!6;Yc$4?080OiRsUm_2tuB]F3b>`44u@_%&GSack`o9uPp][mj<E]N`@11ZN)Fr#q7NN&adjH.nm`N.17OD%Jfcm54^^,cH@D=5BJfJmj4FV*7@62nD.`/]]k?iSTpkB0Gu\j.%o[8Vo&&h]WO00;8E:j*@^B.TOJ4SN=4j$beSQju-i;MT3<cQYb5&J_Z?rj@;"q&kOJWWEEj:4S%NFSs_&WDR_"Pe=h@:20gI5ljH%'EAN"IZ,'S'djEd*JYgSj,qs%BeU<e8oZcl&A2X)Fr;o'i1F=a(jBF90RcCL/"FPU$t'@[#ZBi/%,,YEhi@dZcKQ7'`FW^uVm$cH%;K*%!&ISZYo[s79TJ:,6YIAXqHqSZ"O.e7)ODBZ?nS.ZA"q#Bf@r]'n)cP:HQ7ph-*-A@J!.$IuD`brJH'n]&ncUA`ckqi)-'Ver%>Z);PN,]J)HN4j^la%B@jUaEU,9V'i'P3Qc:.3ZP&9tbp*9+VQ$N8a7phg1/75*<K`gTW`QG&X%UAu?&fOT'afOg<3f"e;4e"NTC%=dUYl0$:-4:m)B3@OmVa%aS:0*6#8u@O1*PCrOHr]Fo*h:uiX.\iun<@,J08g!&seDr$_ahQO_i5W3:(qqt$f):n$TGZ'a>>]JJ]%%NbA_4]bJN5FS7p=(nohHOK!o)f-TYM+l[<+-E%ImROf:CQZ;%DX-.O5T0j5%t:P6eDHLsYGJunZ)uI]N*d2).MQFo%`E"3$Cq6+%X^S)?:oK0/GUD]W1_"o,PZS[AYA!2(7/D8k%]&"fK;E`-heP/Ip<qVrk5e]T8?:#a^F3-@r!dN%k0L^"63D2f=;+g&1P)%8NU2ct%i):\I1'4hdc##N]l^YKW1uj^6(FOCF\S[4D,n!D^cLPAVEZWhu5Gk2e@AN*=ifi.QJORR-4U\qr6c/mn\S2,'N)dGkh5.BN'q8jX%%9u5;/`ftaOYb(2FY'H>A]LOUeq9K\2:Z?$8FqpZ1e=ej4@m%Pl_^b@^r9$UaeEOock]9t=fjS"FVcL"C6IM1UX5k9iS\mm?ighM%cqdu4X+Fr&f1rOcTA`c]4_E?d;<KCA?:ib0!51@M]k^LZ:mJ0aC.:m[::hhXFUQ;e1MM8+eX/Wi/6kbZ<$_d\43$E#M/&BIZ<*OG%-olG>,U1@dPAA5^)9L<DTc:7MDRoqA`1f76EZa)5V<to:OI!=;omR&c`M.2!PHtdk`1h8RZ8R@%8-%=V9)U.dFmtWh\rmAKHpK2D%o9Mt:J-<>@6Z0DOdq&eiWWOuce(UoH>)$DQ38*r\,:1kKWSlT.kd;eu(J\5a"ZPb9>b;Q1,Ssg*DU#BuaFH3C'GV5WF[(HGSOe'N%2$EqMZ>CQg5n15Q+J-;<L1o`9+1Q&BE$0arHRF[dnS&C_)SS67#SPr5T;RcZ^0m4i=hqd(7H]H5%8WhsOMMb,3<;`R.jA+)imS]X%"q2m=4ml_55fYqiYs#8B2&I/T1BI.PMX4pIerJ!A^H$#7I0G#92-KEB,P:u+;]VPf,_"9$k%!511?,1`Jr2sC9u(T3=\C*6>9>@!%^Wa&VL>]$"m1`>)AK&(g7CIHGO$P.tD2jdlR!SnXG>H0Fff=&tp<Mael.s1jPGl&^kUkd9kOkIn_e*+ZC<p7MS!5!hm=q:.-s&Lf%c]H(fA65MD$*Z1_Z,c*$j'OHIB.HES^hqET/e7;#L>YILq"+LZ#IfP=qA\XVDUl//8WD49%u>+Q8<IdKP&!@A-/<#"h$VAo=a-T\%OOA4PgeIiUSh.`Qk)r73i9?GE>WG@D"F0hiA7?B)VR$N!52"QU";j</d2'BFS'@%K7S4<R)C#@nYFdI64W""A^\6lLYeR\*p(oXQ%Taid`W[l/Do>R8[o,E(L^=_O_\_hE%XFft8h_6hTI5j!?%`'1/@6MgE5'`58.BW=O<1/BuOrfG9Ad(Ke:*$r&'h(4gDV,CIA9oa&%n_4(sbuh/C5c5F;_<cg5/G'<#q\ngRnVG\E?PJ"2XSS`n]VoAjGa0(20K@T:)E>eEPnKR5i)+XF*[e>oV-Z3Dnf(hJ:U^oN6R?41%)4^Bj4i:8a!>m6Qaj@F.$oD)=#4CN8CjkZ9P/E5^4^=3Q'`a1l$?\F\,@qMtP60FZn`b(U2<K-oOr*M[VN2Y,J+K@rn[5.]4buj[%`>(;QGma)L>fUh?!#\q8i!HbX3f*6f28b)-"Cli?*J5#2'b)JYfT6A(](.M@Z0pYPhu5pPfV4Q,VOPNU"&pbB+<PDt'%cZkm"r@Q%:*a[L$_`,/f8FW0@N[7l)R.@G!F:u!Z#W#c,k!('iIGS$\DOE9&#.WpI)V8Bm%2$uG91$VA.sl%WrE0_D+%K*OJjK2QQE[>&RVWr%Q@QXqC$QMD)?DL5W/;Qk:Uoml1b^7S+kSh>FTE0#P;K.o9E91+UIdI,En`*o%dqlER_rt^0llA,!+uWTa&HG%_DP`^fITO(_$Cm@%"E$!7&@h5\3=1H4>b_cjQ&ski!-i$NjAN2H5QgtuJ@WU/,ldNXK@phBKUrQ$"#*=nD(Y1\l1_,IOeXnhiNV/h<(c(a1d+BB;C<>T%8MdRV&09e_'5VuZRL]gKH9Iibe8HBNU#ELC.)t1q=*jGC#:ETO"#u,r.2XZO$paI6U]5u;HkAp1d89qe,BprT(ZW7"Gn*8X@i*E<%i?!UCJ/9^&N_<E^N&NkM6VCE]Y2(#h]&X.K(J<><k"lc*N\AbuVQ,X]/*R[Oj8_B0p"GVr,_KM_JoTgFPf'ShS6M!*[i/a<[q1cr%gsUr0pF]!E]U*>_fA#`c\kc)rqC/3[8rnW/>.k\a4,'G-<iOiG86ZnQlFboG'eEqh+;)$:<jLm-0GlTXP6bl6.L_mlcZ93CT&-ik%dIl6+4@4@_.W#Vr+UG`)!+]oR)TLT`Hmq#TiR3CSFJ*uCK^u?A!W'0V,UY%%lhq_WR,9^PZ/h&CY3ZA`-8U-A4#@&QL_C7<3_+Id%[g8;L9%t[Ln5\/3!4;\eNsk_'>rdI;g=S$V@?M+OTsf`t?]f9cDI=F&lP$#poj3k_\,8DY-,qKI#?:U%Y`m9B\X`nSbabIKITBsi%LC8=.RSs":>'g@c,Z2=B.tMV'IiNjlY:-+mb%4XL?.ojk`<dh5SJ6phOs8@@Xd>RF6*R$%*gi5JL52?qnU$p27RY@3;R7`397F7L%)$4-E<^8$[K+');A51\H!\A.*K9>hiol?aH,S.S%1$u=T@4S3*2^V$9"Nj+NCb,32^,H$AVe0@oL9pEcb/_1bXCOUa8AhhU8BSmW%/B+3,fm35GX#H.e-SUTm#sH47"i10kr"%g[\r``poT_E;EbGMt#B])`+]-tIM@U`2jZ&-K`T\Zt>_kN:U9dEe?1.B<+M8gBm/X!Y%6A;H$>Q'RTX;/Q:/X_ViXokV3!HEt")5or1WDb,U=J&fllqfpE:^5"rZQ*Q>fH-K.Q!rU$,]uDr,e*%]q3;G[QZPEmUF!1U5q?nI%\d8usl9KG&8?+.[od>E;:o@>#Gbu#^C23G8R`oi,>.f1G0?,_=#BKbl="#>%$5/BN`+-KG/'?,/_6OIPa.G)h_!M9aju#Os?oMgs%2fCEuV*P<:?TRBb)<WYM=;':s#S":\.Em[O>Y*s)qA`^K\Ou+Q/^6Po2+kj9j[t5JXU-Bj8MEWSlhcYYZ[.s@>q!q/Ya4g[4PZig%md?N$lt&VnQ0L0,k`p@.p(mb#Ri.>%4UC/tW>J2HQ!IE\5F(RR`'9Wf[EM7KYL5(29*1_;\cH,pNC-bYIP(NlS4Mh&oZLZ!O?K"`%puKD]&E'J#YB5',OT,uqQ.e%3m<fVP!_HK[YA3)*THFK`$sd$i.;t3[b,pHE=uQCjJ.EfB02:!m)lPYpZMlP*6"185i%%JD<=RqA%On2X//PnL4SBqS47E7i#9BcQpG?OKDN!.!W$MC(n7"*n\CdZ5OcrMGW0Zl7gOL/@SQ`u?Nd%Gd??s2,aJ=<NOXtBB#T_p5UO;m<H%*CT--YJ+GVP\I6^fb'UW`2"ii3@eh(K"$9B5l9&AaB_'B[9&M_f,Xr/\uZ\f&p5gC/Jk-5WXVJ$#WEAIoIAaM;2)0P`)Ye(?U^tR%MEl7D%QK[WV&/I)?bWlN`p;aS`gl+qH)VF\-iF>'Z*5Ub+Tg"_Y[HPh2mI>5.->cJM0.ZMbVJ'",N',D3%KBm:*SWthQB:9Jso(<%oNVD8K@<5K(0pu[%hN"gDh=&\OqZ<4-A3^Dgk\;iHqr8Y&>?33,uIdJKF_#95R[]jRd3aY'URt^7QKCj*OpW55X5VsX!C9"#hH5@%4$WnDFC9?'/.k7+j34q#dMT^]&d5q9ZN,t$+J2iMXgLfLh;hIF)2"0OLZq9&_"EEe&5.N/"L10<<[Ajk9<kU>.4qVo&4CH'FmZ7=%p-A4VWiH#pp:IMq5$>Is:-.<k*rl[.9;E5-^2B!^Hm'o.!+e<\Rk@5COsUM:h:/g+*X?%#8HB;e:TIo1i91q*abhNX8jJSHOTbVk%=nk<7L_c`o"lSoNA2<Wte"'H*`].;MiT,(p-^E%i?Q<@a7idfp3@2O#Bb=%S/Jc*o=.@-3XAU4;^9JEGgT7(K%2Y']lH[Ci#'.;Z%)M<.I\"s)AKIg-n`:rQ<?:[=^i,K?%n%_n2oc`$1-,SVb89V)#MIX!+;kXQLJ.hmUAQ-!_Gt'IcMMWE980Z\'[]T_ZMU_hE(l^"Q%V?#f&bJ:F=c2uIVieY;)+-]i_&nb.MK;q<P.ao+]C4lb-?;Xic4sF5ei>"g41l5<m4imM_A-X#*S>J@P)^FN;9H-fqc<!3>GVWT"%L$@<WEMl*?`s.\VK*pmE!s=,h@M**pA$ANM7_G6]lj=q=5o;UTQ\O(HJY\k;Efgt&'mZ42YWiqoPgF1K8jll!,*H$L^l[V)*AC8&%:EM0HP>j0%"5cV=+J`/%96;>5p/<aYqB2bEWtl7>Q\Z3W-G>%"$5eES](".@OsqDr`XS6_?=CL*/`OFZ^t`#Tl=8iUClD4ID&l`G%Pjs9=:O6i3)DtE>^l(j@4")9Ti8"G;XCQ?"Hl4jRMlu1Do1N%EBGETd<_>5Ih3r7(5jZusYV)Ua\6MW8WH9G[8G3Zi`+h:<6B2P$%b]4.P#]<=eTqr>=d9'9?TtJ+rT7Jf1A$D>U*8STP>nj!`G\K5MN34'f;+*eY\0Je"05!tu<P>WfdI%rA'^9ubmL?,3Ro)9-M&@`r%+rgun&n=eW:`c0L^a3(`)<$=i=6uN??H!*[PFgo+:5Y.JR)k:n`7@[;OUo.*O&7Rl".TDaU\Ea8*/VV!g?1b$nDa(8]bm!Pp`Usl%/i*%XcdCIh5mf7)\Kas":*PI."aC]Lprb.n6+@i6PdK-H]pKTHUM'fcl9upt'`]4S<6;]A$MYn7,c!3d^:68+*Y>gbX:"ceRNZW?%S<LjL<Dd977'GiM@b:c%SWKfnHYC%l#<R/E>85qkSRi8b-TLos_U>/[\]G7]/Od?f)B!hI[T:$p>#=%5Ws%6<WHV1/Q;bn/f"`fV%A=cN2<4nL&=QO%%KD$,!YhBZ-U^MW\l'6/r"\`Bk+/(NL<'qGl)kBUICl"C+NB3&^<GF4FT=SM!<$VK"(C+'D10Za(7t/3g5XGmp%\t]0Q^*A(.U?j#kLEqO.EWu9k9gP;89>L7b3ll?l%`B%=Lp1RuiWSr.JZhhUSJ\u.0En-^Tc!#ZP3T1#`BWa,@[A:#\Z1*n.9+3M%ZjGA5RlD6a9T4-;#GQshj`abhRFk<EIeE,HcV.r4Q\^i/HrHWLGlfVP>)_F6WcP5m7,I^QO8OH2rZE'#f/98">;r[gXV8FfhIuDj%=,&`%=i<XFZoC>*.8>D98KFI(nH5s[OJX3JML*d&*'o/::MdpQGH:@oDL4GC9L2$H<QaWmoDuU.;9j6FXFIbJg.HdI`.!FF'U8dJ%SRE-3^nQ@n+%5ZKPX,u0)PC7aTl!?#GWX&MPkU.h\d#_R&_)ReF@+2m+_i@(P7-6@B?keCUI4+N!LjSDg`8!9oXRG[F&?sN/.8Wo%YG+$uNPbbi5@I\c=-#HF$j9r^C?/m%)c^"E`KmM3WG2E@0;]A(bnCYNQ$NTkP^n>,U8,k-dXgX8HF<s2+En#6/*;aeK21!]@>-`J%g&X:d#fmgHUYOc1<hlmIV^N3(`IG1<_%<>5X'@Y)g.!e&>=NtP,!`5(?DJG=#75H;k;#gVM,#Ue[Xsk0#r.b2\>mVaejr[LhIdq_%2PWdG>>?a^d8tQ91??D0:gIdSJQn:d`Vfcqd5k,QV7p^IqBEci3p`gJUC+N[Jt^"O8Hn/WI)nR/-rgC5n`)R4#To(AI,W:s"gLoU%o5#(oRrb-:\mTab8t(L0MN:9qJ8Z2T<X[7M3ad3kTE,$n;22;O,]uqJm6^<"E+?CGRe?6[G*XDsD&5#bd:b+O31[:_Hm4bB$3;%=%=ZYc[.Y=>=-liGgL.7lr@(%d`YpFHKk`t7`XZEcPP0q,?JoCt5@riYLOsL1R^D)D41Ln8HW50Mjgk``b/`/nNj'W;G/<mQM:7O[j%FD,Bpett3;O_[4UQ@'&f!M'm`&/-*1\fl;GMpS\5q\9IV85):lW*fpK?9Ju[&bna39ne8J3l?jueUCr6rSDLaDO0378=+L1#CqU`%FcZbb[.uN]:#nLC1cX`q:+V'gH-`LW"B]%ORb0`!3i3D:'SE+QKH<;c]KqlBBMt?@0Be.:L;I3bU-`TF)qM,DE5T/>BOFd>FV&kP%#[cfPqW&9cK:C:VAOt3(d51el^@0#JSN+184(XgLmk+$84?(VbI2Un`/IRZacNPCRG[@Hn<pLLW5:G)t6a?V)UJc6B3*Bo(AA/$t%g-bLdMfmnNYbFaHP6@*O.8Y\`1!AhcdNC4m()dM5"oen@F$/YZL/fn;W<4e=1q_RLQ#^dgY-NU]L@n#S])rlT1LbnLFt.]3-+n/m%cqRqD%auUF$hC`_3Pu;d;9Au_1H&L#:;NNH27H'5@L6Mp#V5LZ=4R=_jfW+'7C%\#GB*gF:/^HrfL<tb[hj(1dE_O64-36HcBWJo%Q%c4bCV-[70,?:<4"(rfCL-%D40\"m`S>\S#u(d[^\3UU@]P4;l\blt)e+c(A"n>]a0o:Yi/<f,E`#:EU7aC_.,JnJ4atO712XY!%!fGBg&h[l8Y<`s@%3WK``BsK&AT::A/>EUb"1Zi]^sSr3fHC'^e?AsjWs!;'?(d%55I<4O8fL52AR@,t9fh2t/\p$RjC>8&6eFpd%ZJRh-gM%?8lrXu"7d]r1_0la;#V*/H&7RqG&EN3@"7IKO$B^&U6up>Ie,dX"`r[*5S7`1FQfF2f#*\NE+^2[E"\aiX/b4/&3QHn_%@&VFc>GIFi!7H;9@(@1:PAa"-RF/I!q!,O0_n^8[]Dsrg+'b=B[aBGYSAdled_l,fV*L;CMU(K-"Q!7cQif_&)lpqhJ8?QX+Yc8B%MSrHU_(a]\QIKiGLE+e(a-%m*FVpK3W(N,h1u::WfYK::^'Bc8e\Z\J$VEmcX\;m7WjA#;n/QIJW7XTS\^g@4Bt3507FWg7T8B+?%+CC;!$ls<J0Qc63<'.>tL$$pP5NM-^bXNL#?l.!$!9CJVk`.HahQuQ78P(sNSd$37,=#<.Z&VJC%]kDiAW6ZprLjKnk]*iL]b7S7%l%#n#(mUp`eX@9Sr<>!]JSIRF\,j:Y25jo?l:3577,nFu0ui.TB<iSk`c3;NlP6F$;St+a^McN01qK*<6I>07bSl`ee;=[pKb+qq%gTohK"L3V.If:<eliEY@-Jiq3jcCTe$E-O8DL`f<a7uL(H915Ai)W=F*O()d6BppU/7\pqW1m("MQrgLH8Ia2/KoSJAdNG&V94[@%r>ZNjQ.>!>m0T^/!Gqc<+PH-.O'57O/>FJm#Qs3?Eb>BV#@DCYV\s:sdLf2`";H]mT<no\;9RBR5HO'q,@Fjq[8n3N7D[^?*rXp*%!1H[N(gM1q,U=qpTbnIRL4CXl,s(HU[?kJQ)$3\j^"]Wn6F`+MYZ`hA:+D<TD;!!F8L8^;O#(E>K;TYL@&Yo]\cC<+,MQ<G/]a,o%!F%Tbotf1A]GGUbp?eMg)_'9+^b!:[7WNAP7jL_?(q:DBe2!+@Tq2K6"2Hm0!X?6&D[8Fb;=jE)d9(N5"ei"EWiO;7>=W1&O,=Gf%FW<7W..UrM"I@F_dK^=3nWVnq$5,/M/PuN1>#p3k!XQkb<uaMk;->9u?b$*H\7?e#0`_C6X<,JE`?-;%.teXKbn'-tLQbu=/K=Hb%LH96H3g06D(XhJt</><gmdlEY,C/N+;lSUPMHlA2PS=0\;S+[S3m*_]Hl4;*9[46:4Wn.Zf3)1j3q]?tn4HqI6l1YLVeCBS,`J&/%*'K$LA+U\'j;8ORV@S2r#>'*MM%]iSb^c9'TOK4#!Q12`:0i%R!pMRG0Z#:AL_N?'Yl]s7jeIS(V-_^^W^-=UGH9<4<L"dhEOs$M%fURa_07iq>E@+ep*2a2J#Wpmd@,sKla6/(B$XZc@KpOmf6P=)7i[+53Ha,lQ,s)gRP^=N$[PWAt426L-$oW/0jbtXE_[uX1N^/CO%?^r@W.>A?8\92KdU:NI6n9p/r;p60=RZcH_J9W?]jXDW2LS<Q3'H=!nC'#DR]RA:K*d-PR"K::u61JC)8F%(ii,EJH@ufS:JBhh!%0bdseOs#lHlNO?%np#d&48)^4-tC$sI14?o<dN<_AcO3hP=HgqYiKke;p$04D,(E`Xh^4dHnbBEU.@"bRKLSDk?BXIN!j,qUs"+P%@PDrk!R:\pPfA9tTBs%"X@P_u$r(D6PZWmp?mT_A8mi)D)pCTH7XZ)PPJiK.+Ln/6"c/u7/m&1t)PuAU`9(I@`7"%)CqgT;R6)OL%.2J,K$Ch>j#t)#lS/ies4B_R2n)q*UQdFu7rU(o`G/EL2&8\.NWG$"2gC/Ds8Q2qqbT8E1INJTo,*qZjqnDAEPr.+oUcu"+aj!A>%k*)#5!DoW,PU-*aMsu>>VH;S`;^n`G\"uijV@K+$+@LhM(BK[M*@/15$+8h<\*IMs3OSLfG@7PK",T;_C'01,;B,1X'-l_qY*#/<%IZ,Ni,$<o89jauJ`DrYN0*8H.!K!K<nQK(@I,U0$]RE.=EdK\r5d.`:@4A%*W!al"7/3.8s3>q'TEnn=N4f6jW2sQBSp-'-YEkjE%]d?`(:o]Yj=0^.<`fcS)!'-W&fpRF.n+Jj-3W6hpTEoA6R`O?=!B*,$Y1X*'O4E7HTo.=UWi`3ig]5tRV&enTY(LaF!IWhu2c_<#%;Wj;AR^IcC4#@@Y1Bh)F.+H>$B;WOGpFI5%LadMa8FIh?!/hnC!?//uP#Al1ij2a!*$e=Yd)-],kV*<F:/7\`I^CtX(Vk,0ai4QQ%o4g&oZ"Gj%.70+#qM\a\HdSe6+UpLGZFKB!efcRs6'b+C-EUk\*^Y#,ZNI@D-;I*ak=CiG^^;=h--e7kc1*<ti'C6_9@%2(:19M/%-SuW;=7=fn+OY8s_&Slc=r&k(7fc5=r(<*N)G.c"3_XnZQ;n>c&qLb&-MloQ-ieE=0uZcd!t=6%5E?kOc(L*oo,?6aFArCVEJ\5S%.1+2*9u^0H#s5!rms.EL*SWnhrNF:[_V+[/d,Rpr/*&94AqmAknC10$S+4YhH/Y^k#9]]6%-B6nZoki>4!8\R^-\BA:(4qgZL)SZ%mu][;MFDcRQh4M3VP17fI`S)p>O>b3^Z2^5)bq`*>)jGT<'hrDfe'W`1%XLUE58%hQOK[a34J1^Y?Y"7H1=a7OHl#MHauWh"c9>_%HHc@!!4#e]N`l"+\7"$0<`$U'XLfcYX`p68%"-cEJss2"mMRP[oL^iP,ZIsLV,lgfqRc]$mSm`qs4R8^`]/jNmI(S\5:ds'G//.m%FS?c:K\%"%#Qbqa84Z(gHF:0rlcMgT+i"#G3hGW.R9`AoG&2sJ$s'@*qX1Mhj/LPF=I<$JKk.4B:*,T\8lh%HVF6N71+>*u3B'L7%5k[,:C^Z@gc=.92<+9Fh[LkQ?F`LtN(R';0=IQ4e)?A#W'0'9k9?;Q(FF]c0#*B"8;5),AjuZ'AC3(BJciQ>J]55CRi!%52FUae9%rpJPmZcdP]IL8!h#n_aE/aQ#-PFcr7@=+g=.r7+"GI6LakfeCC4>G&8e$Xmr98pBhOGK%3(ebE:a#A1pkch.WQp!J+p7"e.]NNn>%VB_1.>_]9Z4]'`[Z=l]H_ST!HlIKA*2)\_ad$Q3.(]Y5ES4'#2X_Ya?Cf?>TEaiZD:bk?`SJVd#W.#u:`(8JN_j-J4"EXGI+e`fT%A^rEW<`'U:U>7;iW.D_af7.GU'<9:#P[3uqgX$"],Y&=oj]]Q\%O@q9(_e>o50"LV"lkdh!cmLLQ(@"t#>QiB^qVVYZ_KO+VS[,)%Ps7;J&Ipm=k?lhq6@$q!@CI0J*:gXk[C6>eQTZo4>"_mJ*1TqS7WsTg@7_?G:0#3@.R/sF1!'qY;Scl*RL]-&;m9(OD`A*'lH_3[%-Qs7j?+J4TZu-6^m2!t[;:CQ21H(bh?sdJhoGm&TZA1>3o%>6=<T`o>/S/P:TgtROgKIE`q6:iDLe*ubano4tS_$Tg$UXPM&nuLJ%'F366oe'e!"-%L1Gb;:FJZ=eZ6X/iARK?rKFkI!l7T^4S94SKS@oNgRR';*aUU+?7FpCP6jW*1=9c,8)7;(#Ma;<\JSsdl/7ObCM%,`q"Sl4I5,k:F)r@'E3)!)XEK7oC@nJ:C.*=H11;KeBYcG5uBIT%U4/lZB&3a:fNop-K43OD@GbLUrR(2@l4imA=_M:)S@k<CqPX%+tbQl&4<R[Fuq+SX:tYLB0DGF&qODC3"qJ/)Du&L6@]h0AIK8LRG"Cm@?^iQM^N=`E?L?<G'3qk3jm2KcT)L=TL^i&6rP:oN0n/D%dDBhTAdn*`BMrd]-$k)L_0F#@56*l=l*[YNq]'FSaF\fK_CZ>FGD9kKRV;hV&jA\@3ElMhVmC28?=I6D.oZo-IY8R?DKA.h\28'@%70.T\&KK&r\LGmC`6cT1ZaD[!!ZHZ+4;b;hV$oAS&nkOgOM[)PL?bN.1$emGSNh_9l8Y::I?!BT%B.2/'Op[^Gm?'VD2ecm%MA,5%.[cFW<d7='7Vf+6:>VJpqL'(YZrIqO>2-&`@'Z#1]jMr\[I"%QBS#Ve]V9U>KDPbE:F*X)#Rk5K!ITr69CRM$]"8^+%Ze+ig;asi%Es*.Z"(F`,Yf:;!b!nPQ8Yf?S;akH.(0GB2*YVcoDuf5XW*QXSmVEnXjb9XG#YnAe;rXi@@LP:*Nf8"9D]T^F,^?lhPt5sAF.dlJ%8)(#meT?(C&4Yp:Y,Ocg,:XRKSEo=f%VB$63.V)9g7#VlDZ[,c\W1VS7)3m0bYP7&22=m-7&WkT%KQdo.g5<&eI/bhT#<h3R\aZH%WoCm6*4@^h8"5_VTupBY:;dXp"pg<6B(YGH.Se?)(_K8=,XG:<!>sC6!=c3J5p=sPJ_ak`>KURq1%tP7'#(a=+TB9)5R\h:S"T\I%p2"E__/[VKcp]8a)uhh4\dlAM-cmTeLoai%02-'.&QJ/'o*cMZ.U?p-q_kT!b4GnsSHH8DOXk,7=H=n!Fc.UkU(&'(5(mV=&ZILp%;L3?BHX*9tH[.H(@AiXlLeW7-*Frg+.Q(hlmOXZV\9^g[/,64Ic@EJ;%;RP'X[9&5mm0172+GSpWaW,L/S8cZL=!D"ghZNi].*#I%pgCEE&7?9*?m>)?cpBBL@05u-`A;%4WF0fT96b*$XFe3kWnEk`C&ht-)(pd49j?J#+DeCl4kC#PO4GRQ>'qD,YT%Op'JqYCWQJPT%)V5^5"TIY57G.>Eam,V?RLh4(egeT9f[,.PPI@n(^/DG+XKF;PliE5;<bju)6p8s-!]L6ld)a#hXIk5FW_J(Xh3u*EAS+JPRl/te%!jN5#_#p!_`V?]2UKnoVOiYNs:"5U3`RE<P=#Fgq(+6(tYtc.k9k!\%<N=5Tp^lX\4+4oq[I'_ickTsde0$G?1Y?7T$]Q*6GCAO%%W`qjRCIODgCPsG]9me_!YZ]Z[.u/Z1J%Y*Wo`hVO8<,MQf'mTp>]-W8U23W+cnQ:3=NOlP?DZUO/Q<@9-X[+k'OYXOIcR]/T[3gK%-#Z%Gfg&d"&_0=96$q>8k4MT0$>NiA[_6q=0=`q?@D$hn[#G-I\YJ5cJl>QU\E<ruD8[uPm]>Tb,>$qb7'&h$/^e!T,1`WjX3Bh7%0csK:Emb>?4`XWDV*NNZ&"Ub10'/T__s0$#2e%M6AFa8hP2\qo:b3/B_0/>qeq7?q?Vj&BB>6J1>]t7AA)F52Zn#8^+Ml?F83E%D%X"9X[KSV)QU9#!Z_eZ2,.ZnM2[,=W9nkTJ@&1"aCpA/Cg(qag:F7>(hnA=&A2PFHWeE^Gt?JY]>=B!j.0a*Dg=^)XYQX4c:CKgf"%A+F)(:o.&Td".@4kd+Bd+mXd_9H%SHiF5]mKqbG!4<uEB%<8&@;)Z<+Q-h/#(+a:OP"!ML`%=GQ'u^G*]WP[;&5,%Ul^Xh0'!j$h%:^]unb\87&&gg:U!/Dt0kZZZ2F.d&D3:[_PXY^N"#C]nLa6kli2@%i;`2tP3%.`*[Y/#L"nLb38Wg6t!\o`aAOBG+S4)Lu-080m*%[#5$d@=Md,5fmK1W%>%*RI:Or!s/h96T0@2d;2XC"Nr:<`"$$B%G8+Touemo`,H\o>bko6VqFmjfKepa*?r6T-p(sHE<TK3e(WO"%&IQJ5';95^!\1IKBj*E))(O,H[FPC0qsj,eCV'SAN.W+q(`!S)o$0-ZO:5Vce2V\RfZ;IZ7#+.LA9NiU8Vm;jq(4&2V8A?3MP+WM%&b7rbHdjaV\2$#l?[0<'9%<=@!nGXm8d8t(E4p3^J7e<3DhEU"XF/3m1T_/_&%n:t>DqK#;"?"9#Ji2%-E@UFO,,C7MX`<eL=pCH%Y7Bq*`DtH!1O_#oW$&*dp^Q/g$J?RJ#ZLf1^^2jZM[<brHFp7n\E4>4*"^V@MI&%?,p8#/#,r1FoVON?PtL&lbjQn\2MgCNiQdRJ%//Z9PB0?p@Z[tK8<Mc?nRYEX;Xfb8jW[\c0QRt%f2)[5#2AqGTZG_ht[N/7BohQM,9k6SfD:Y1#"VJB96607_TJE#ui$[h5c=V[P%hP%$&;GR")DbM8MTB1NB(T03=VM&Q=mg&emPTP)8LI(pRr4rU.\[buPH80MYFii.9(FMT1a.Our`"2Qo+gk@#^iA+gI/gaaFF?V8%b#VPR>4$.n/!VYN/Re_%BjMl79&:YQ!HbZORPc3bY:"CsZ;_,jGC0KQ1O1V5nJkX-g:YMQSE\86I?#*qN1$)Mg#tQJ'N5?&h-&'D%o:dVNSc1nsT%g!cPrE:.`Pu-=!_^-b+JYq5l[,j]nic5b;u`Z,FRn,gk]=&EP,H467cr#T4DT+D2>b:g3X93@,hQHSj6gh.;_WV!%mPf/"RY(:r_0W!Xr94*A2WYCOSi(G2h*jWPYf0sG./plh&k5*Og&?GAG/_)mD_"lK;<C*3/kX;]s*c_69=ArM@SEh@#[_0W,q0V'%OBViE;^eBMG;m?9HOtR>_]"5`KM)XOUR3Z#bbKB(6XX6kE2jRJhOA1-5M5M6TeJiR&5\!m6QoEl3C#C?'GNBl/WUi!'I_FFB&TWQ%i58G_nTGe4E?t@eR8SLVO>ZV,%4'1!HT./1Ii47hA9Zj'[!3>LR79CW+7W!;r,[Zr0GN7dB"ES[)eq4e,.8oK>Q^*Nq4*ALhiC#2%ZD-G')m-B=bV[3(Pe>V9`cus6ZXatO,,@bM'Q&M8n+V;,ObSs!;T@mW:4e%.fd_@^GnIMk4WCJ6nr[fHJu^"uK4o%>>)Do/o$*>P%=5I&^Td>HiP`KU-]U$VEdGrR)&p4;;:(*i6K\*",)38H*+XX*0;i$2sTf":7NJ*hMI2&E$,1F_gT#*VF'G2q\_:7LKb;O=4Q(KKX%[DU=cNN6rE"be.RQ0&\OQt[7Y-gN'M(-cPcH;h0H;9kRDAR?^')K\gq9,UhM*HapV;%=!`C$TrNG-i#]([DC^O/a5$HDi/0rD4K6%7TGMQL7udK;#5Kr6aa6f2;+ZA*=c()TAiZVG,Y9.:p'+]NHV65?@X)s[E]KseQV.5[R4%*bY1<dgM/MjUjT,LcIp;VMN]cYi<\W4%c'6&B+k^"`b!X_#e8:_Jh@A(Y7+=U[rjn_[O8,.as.""9cBZuk0C#:*7e;oZ1t,]FLT2j8e^b5\YVdH^9XCG:[$9oR2&\nql(K$f%:ec,37QXR"4&h\sW05:r%TUAA`1bo=Tj$PFe^cJ\0%lq5A8;`n%32B`B[L^MW\TlUB]R<mNuL/[f+CS;1&62K;)^14j@7XHW.s=(%/.U3(DY'P?m80qVTpk=E:$&'PgS#PWU"\4oap/`k3r_=r\>jp-.*:m%$<>PBeS(qg6T+,%C=sQj"N@(7\a:6(_[b41LMCCUWf7#?%gr5sJ)(e!Ns$Oo?hY8jC7K1!u"-k.!VM^hml<m.S^&[3UI6XPnZlJR<Rt+^\$\m1<H4,O3'j<hHr1r<Y8Yt`R'5%c]INp1BVheS,%3QA$J)C?0Z?5`:WT?:=jnqK[*GE^-D!qQU20RI!FC?ZGVf<CQ;<f'7".!d`Q?-6jqU;9m+A7<O+Z<n3XMY@;,;mI^ORS.Cqq!eiN%R_!"QTTpA@Ui?K/9Pf8!2JY,L$WE)O>kEGcQ<?(kTX#3@1X9"Dcitp;"ptqG0p."`9-i?;f-9!4'V?gXTJhcrAL3iD]uDW9>D2$^%Ge#Nn]aab@")nt<E6d'@@A[M[>q#;p^Wc+k;9QgYbDs>DM&a$9hQYBEGf4[-%AuO8i`\lh-('JdIOrb)W*M)P8%<K"o0Y:cJH=FK%#:?!K'p&5Pj9/#X.IS8r-,k\:gd,PJiBS\1INl[d<o\7hfHR0DJ4TP<50&On7:aYfd9&`!\i!9E!AWVm2P%>b9+*e'6LT.<ecr6:%D8+:ZTg$TpWAWc2?ppm=fE;V<J.OG-k6!BJJG@9u7W^r%^eK-kFu`KPAm28$%%SKuLKnK%[:usf!aTrd,oq%7kB5)E-N7`4rGt4,%\g2P..<^4SiUMe)W>YAl4b^huR;JQaCpC.T3b0%@?^XY/m^\<:g'SEeU6@4jAAfAe7A'_e*^Jd3>?o;HmdGA6*,;%TU(P2KF?+K0%$CGnc2d.uQopK)LC8Jdu5Vhr=8lS#.c9TM''8R#Q5U;X=!sOFU](B*BnZr6#J7<.^5d3`+BY1\4!M>5Z/mb@?-QDj^aPr:KA.9M&%cqT@FWC(hu0`QPF[Xcf-3XB>.er"EfVp_0e/8P@qars<5OId50h[YGWR;B^jM)C:oPf+`90P.*$/>HtNlW.D%j@s0&nq9usn>oO.%1g/t6CdC`-jO=iGXoecK.&qpq";b<a<m[kS'rs=eecj_J[DM2:;:0JF]9P>r<#nfnM*VNA=W/1b'`_SmgGs+:'eqRlfb<)'H*eB/%)[jF16"q-NYfQ.'$Q5O=9Yu_s"h]%//!*e"euNsZm%7[Qn^4)K[e51Ji]L,#p"4"47j)5&>C',^KHckf:_%<(ajIW@D>de3ibOlJ%DbQ;p7bDk*6n68=7'$u,`$n3X!BDd269:oG,BeaD3cPa/_Zm"Z6]W7\!O/P3mnqT%e/?7lCKR9VpaAj!>6Y=18Z`GWQ6*gS6BlLW%UXg&+'*eus+ZBY2bbKUqA<gq/#@hqq#M4b7aHM')9L;drStG$P)X.6fJ;=PLO+o)dJlY1'!NcC)m.uP(6o8OX.\*r+.%J1(]Uku\%=ids,aGLd!A;VchZ@qr`3EbM/Jho1@:AEtM6&if.DuKn.:($h2V[[h?f>R@bU'f-IU:3PBNTJ&MD:&s8$kkd,$UhhNP$AI^)RTt@%W"s!`7j>eifteX(=JQ`ZB5hQ(&R0>Q[Xnp'B("=b4&e_nper,.pk[RFeJ\WGU6g![.PljM95i70_Kf=g)oX[!:pL;!e.dMhQqst8%Vbm)u\lF(s#'J-4F]&']kWHs`;jfr1Q^pOP$0"8h0Q>"@XSNj1ZF*uZI?SkLM4m:O&321rS7/O!BI]_`Z79#KCeD<31<3Z,;^]%!%`N3#jL9!oMai6aaI(CZE7$SY\YRmo@&coa?3c'T<K<B8l[XZg(4=KLf8Z.>(<Z=Z$;O(kR?*-;Q7$N%ML^=mu"*.?%(.c4G&N,j0%TVg:\]G+XJnmE''Z?70Q`tEd;l#J*[-'6c`on)0!ed3CO6Xo7?C`JA&U9]+"'q7</ZP`)M$FF9+>N0HSBoBErc@E"(C<riUb,QPk%+/^Cc49^sEn5gqAHU04G'VH4R=lTQnhC4XY9QnYQ8gShI[7DFZ=fag?/=Ga$1Eq@#9q)/rE?!8A^0MQ5X)\Cf/QcCN*k!!7QDlhI%3JmtK(l]`'iV\s6Vlg,/ouJIh"P\<ak!Yi$J]gkej?uadAjukVANX"#Nm.3m>tFfW*Kq>!+`T?G3LgH1$H5>!30g6'cp<DO6:NIF%Uim5;KRC!8#:L*,G;qB13%5RD?V*r*A:VQ,.[uC^6Gs391bqs(]9)njfkW%Rp*Ih!'+?ihnlnu7nInO.$jT0fIi.ZDKHQ=+hE!N3%U^.Mj,$+O:R(>,R96!Dr@2>qE_]CA1CG&%u[pu?OplMK!a[hNpOL4M!+YST\S=RIN;BB)$puK%kG((_<g,`WAe>PcH2B5-p3k)BA%+nM#`QFMgpQ&#D?Soc,#lG4/O`2O`)@rrG'+Cs@>5V8WVWkok.!QH=Bg,9dmS3&XGH,P:8<u7VCMY*?+MhA\H#=M&0=PF!!TTu1)%X$dY%D:MV4pjan`S0UIr^;RlBANCl<_4ZINb"hY"!TT!sESJu'm^b`<<;AP.E'(!E*!1G]S]0IR>U$5;/t,h2LaINS%9dR1E40Hs%\0<+V990[:Ynu6Fn;P\2CMN]9%rbcA>9-Flbb\9>hJc2C^p@GO.L>!E?'QjCUBEde;5$;'/XlbUr??i7Bso<Y%AP4;%7]>?LdPab%12nai3"FP_TttXUpPe.u.e!q^;jA]Xa;#.b+tD(IDQV#!G-28NS1H0n;jjXJM;R@IL2DuYSb-2sJ*^Uu.;^>6`0NqnXg(FW()<Z]%_]"p3SskA-6t`s0H7#:SF-%2S%8p-&S>T9$Ak6jD(GFm6'H@\ppU)Q;Q/`^r=qas,NC?;l#skG4:X8?9@AOqFgOLqaTL&e=8TV@X%$"U.n$[,VRR]r?K5QoNoTQET1T.(;P08J.C4_Zr*7>NKQ?rCoY(^Fc8PLhNZZ>\.qX%'=*i#@>3CZI']f+AtWabrrN3Q<-MBSop^%`gPtkYuF,E?6H4]Ld<UbpVrWXN8dW]0F#ms>+gV5ohNa@,8L<<M-26(6D;S_$%N)s+LEO(<GNYC`fc>3$9;f/"M01PITpoqZEd:8%9rDU7_jk8-a:62V"i38CZ3+2T+ZJU`3/?K'au18TeqBmphW@4XB%ahj`WBdKl.Qi_droShGA#aJ6=7'#+Mqk\W*lT%d!",i<mh)5%^'2A+I9o>J=0:]YL"r*=6</f#5nm3_I@W1uZ:\u%Hu"_#Q3QPG]l#+>;Oa\a]0QKK=b&]Yau\!i2l7;6pfLMDd^.Jpi1LGqB`Ui/%;=BkA#YnD*>9G9qX;6"#T:Ku<FgO#`4dq6<ffaS+%R@1Y[fgX]7')Nl_mMOVNMqo*kUk*q<S&A\LipJ;/4<@h0166oDG$0U]1F:P%q1h/9D@@jke)Le?'1%$$!fbSP#*!aKMP*MF')Ds+NkrSCf]4N)b$[b2aKTDi+KTCem#cCd[X1X,koeVn,V_nX":^M7K$re[mA`&t%<2rWu;UMO9DWg)=84Chl:b+PQMt"?edP_pt2+cStMk]^i$EY?A$t?gRD@2s*,`i$#?EmgmXQU_57m;hC0u?K-YCpb(!;HS-kZ1+D%29_ZWWfUFMV[mf)e`MRZe/_@CUP?r"b1eCeP.FAE<^3?hJLr!nS\1u<<tjMs3OK#tod%B#X<"M/p5NV3kU&Y8Oj&BtUsHpu.L[au%n#U.WfugCrCNPA7cniJ+3hkdI(FVYW@-li;6S('r&#[)DlAcM]$',[Ml&BPN!BgaZ;").o<k]-=L[+F69Wk'TA:VMj<S`1]&H;rL%6g?pehD?YqLeP,VJeC&'6<@]&Ug+XAEq%8GG)<ntToa#R"aHg!j[)p(#]X][#1@5)1<mm5D9aR2oGCYG:*M4D#T:0fjQ'_4Outa?%-SfU8c!HbA+;T_#:Lp*LE)CjC'j)4A$O,0,7m'-GTLCL@2U32j@F8jCbFXNKCIAjN$mJ0i<dMF8.(b[YM]F-b5F$*ua?"1W^,6F;%P(7saoAm0=1f9,A/%I]sBMDOJ+#)Q[j3CXnU\.`Pf.G^R,omo>&]Y8@)!/i@o0qo_cn8leCG*"[4H_B0eq..-ARQd?8oR2B/b%/k%l[mI='p(d,]%RWJ2)&c:Rj!Wb*f`OJ=*mOd8eY&W4(2O4+R18<$>A.%Fg9%e4ISjC5_g;NZ`%":#0S2YDYG_<JPJjjXBRQenhX4p%1G@I'\BY:g_LBmgiX&iaIC3_m.7L6)^a[ILI*4t1RPp"?AAe1oU`(O)*JXn?.?`Y8d)i$QErnr9*OtAI-a\TY%gbBjNZDu$5#uau%WBgcp2.G8mV#*[e;=+b;4E>;gS1<A\'$,u/PF["kLoEdrd.?6@Zqpt:hpohNL]@MIQF)gTd_&%\<c:a*QU',,6_+$KNbE>;^\CKa%:eIhs%$4QG"5lA2;2#`k@W*Tf_DD!Sj.DK+Q<mhJPpi?f6fMbf1UpZs27tR*;2MnGgG:@&rLf'$"g_jM=:NrsU4BafE10U*N;AL0%"s0JG/(<+dEoJ?'3Gqhklj'gK?#q?$>Y\S"Wn2;rVF+#d+SphP`>WqE6`hA\%0(s<Z4^(j(*;IEHa;e/+"X9a;32Eg'EjQ2/$SN)%2TM;LN/2c\B;IKu<EQ?@&ge$]M+j2Eqs8j:JnS/)hs9:r4:rg4k,;5`=ARQtQ+7K(-e`1TFYkq#4i-`m.e*(.K.Lt0p6^*f/BSSS%2/=%_aS4(J+e<@]lcDq#_0Do[]WEWK/(emjoM@qtYl@N%7(uF4FK_YEC-*nLgOkG_eI!KmWqkEP86%0$d_pGoA9CjM*9WjY!)o^D%/0afB0mCmpZ8kO5R[T)U.Y:O;\H5hd:s^.*LDENYQO$4jNL_YqY,?3^6;<5f.(hOYA],!9ZIpZq-,q8tcqJQdlqN3`7o[Z*:N`Tl%@kH']+KKE8"b?B(gn't7OdMufNtt8<[LcE9#$`A(P*@?E!5>7DF2lMaN9-I,R=`:D>g--GYbditdaFF^SQ?I?oESW@#GSa6%a!f%%N#q:#4GTG!10A3b3[Sua*4*UGW%9<7Xb#+ml(QU97LMR`O+c;#gBXqE&VE2*714-$1K7t=%cjuK<*%P.jH5eoiR26-SB&%9fT$rS%@gb?PTdp0fZ:qP"*3Cu`I52mRm49)r_4rPfD`(j^'U.pQG1)'YT^,=<E=ue.MUncPLj2=P2\rnA"!_m)Fs\^jk*2f%'!Tq)B-qQ_%EYN2,@hbpq,MbZ!WoFAn.^foAfB@4ZaHL2O*Gl)K'JaMd`N*O%2#Q?5&h"B.;d%(lXVFed"ULqmU("14rOblr-3mdg$CltR9el]3%ZR^Y/4Qpia-9Ej(&\G#:<h6UIU(sB$W\F4%GZjHp@[s`h3bV(%J4Oae\2'a)$QYVa[VofAWhA!r?IcS(%P,qi*h-4I0o75%G3X'P%/raDqOhi2>mLVHW&e\!,bA]_*7=o#Ld#?;Xgl&IL`WBPOe,F5\LV6s8`VIu)3/(@C,,-[X$/:Sg.O7+].Fun<G9OfZee"oeN@^h,%Z78<F.l+mA.=-%.gORLW;AO"YjXW_P="]c'i=EbFS<o%I6rp-]@$H/7[@6KMi4t9e&Ajj/H3[[m3.FH?%-PZA.'5gd4boIU3\/(W%;o(AJSe,]qc3%m:#QZb!P4tUp[<82#,NVu\"^?d00*d-]m>3f'6BTfY^`7r?eKoOKS:Uc=!P=.RJg*1A]+pT*0$cHjGNsRQAOXq`%a@83G$'/:WCT/k[;DQm0-%g,J;*/T]OOKmA@%&h_XVAi[Tr9o-PqZ@bq;bSs9eprp:skD!)^*DsK3a:Jj<>0XT\U?1SB9c/DD+DD%+Biq:;$>DV_<,:s<uVHG,q:a9`7_8q($%-Cq-/\(<m[!qJ74u(<'h(e6Ajqu10c"O$c\CQr7a63WpujU9nk!Me>^DLQ#PQTmSV=+%#&p[VIO?EJ`gG2'QRq#%j$fmp&Rhjj+pKd=99Z!Y<F_*',c;V,S*OA32bC)SXQ^MH[?PMb9p'F^oLGq\C@ZmFi&FYNU$\9?IsP<g%;t2c?;8Nn/CE)?*.@E63Z_#:gL0unLg2Y4WJ\<=d'=*@Z,uYE(Nl0o([!ReB)f=p8.Ps(&nK^N9>d-)BBTWmd)UsFk'4nSC>IpK?%7Eku:<>2*FE0tedo\LemP/n^4-e&(_9SVEAK)p`=L*YBgA2"-SoV`h,=:YQdgp$X<8Zn3]@7o,!@pbYT'M]P`G+`Br[58Xd(+h$E%h)ag^bEr@@Ft63J*m"P<c2nB9nqYA?OQo^YEQk;C+GrKo:mPt"!RQQ(#t>K#)??^s%P$V>fk':B"t>K9V4lS:1%;^6%=Zdc*Jio2%<uki[a)XnC")>WeEcXuF(AOFPPi;hR:CdX<3Ng-J_UG5jVa7=%-!KG!FYb"\=iok_esuldlgQq\%PCY^!lCRn.G.=i]'2]OC@KB@%_u`Ys7T6:CEY`>=Qm!kRMa#RH\Klm=)p`)"3+,Jd$l\:9Y7B.O2#6Wl&Y2`_3ZL=EEDV,J-C8pPdKe&!qaLW3M%&Y$>:`&l!R46$%X"S2F0c9*pa8.>K^(<3L8Ch0cJRSmA>F&JCR@-+tU^#<NOmn+_CN:nh"G9qpTtloC:0&Vpkk(k8i?lbe\K]]J_JKMie_Xb2Z6r_i%6DL1)c:uSEhF'V`(/IqK?87,%h<#q5PB/WelCUV4'='`&faO9hL2n<1$#dAElg-l&`#<210MgGnF82c+Lr'nNf6fjG=HX[N,8IFd%FG'q=03u%!V]o#R-fdi1ZAWc$-^+lda0Z(+<(;Pu$;%!FVe&V4BVMdrUsZp.ZF[q"aDT3%)kV^^+rJ,0OY"gMb\fI5/hJc-7ns\Q%#;*!j4+4l<FTIQ4,hpEXkUFE\HopFH7%dDX(e2.IW6L0eW@/[+](3s2k2hKq;dDIeY1^9I6JD%n\*qRGMhmO1ObhC+r#Y)o_#S7K%<Sc\hXhlBLDG?X0#S&#XG?I,A`ms>46[[DcT?Q^TB(7Qh06c'o7&s#=SCB"j%E7_!%*\mmBn,aA1tYq^pfi6eTE<=1G^)6(jP'DY%1YC<8ROY"D?kn[\Gbi7`O)NW@mtdp&cB6`(p6@@t2&o_3#Z6Ee@;XL6SuL."ER;LdBPVY:fUT<MO!D(aAQS"`k(l`9%C1'8_<@Vi%b>h%L".p@7WnZ3)KX`AS\D)U?bH%5WMB]CK8n'!%`IMc4%:7OP(16cDX2#jU<1NS1B./g%$pce*@B&R_Kjq4oaLi'ML+@VTi-uqc%TKl9L0s*(;6R<6=7I+uSGnnI^5fE6*O3/qLEIpQODC,R6&J5?V][C8>pBF_:\M;19d%uXmX2rOn%!!Oh=n+E/i"q+0#njKo7*C)r%m2=6[&bo[d;C^B;;oDaN]C<K\9,l1illSOaPA(\8'8n1KZ,2'Qb(O\e[!:N07.H'a8%g0g-589FHS[l5#BPaSdQnZR$q=1.5CW56%`fsEe*),L00]>ilN`PS(alL,N/6aBR9gj5k:u:aQ[Vi1jciS3LUL1si-s1(Q;V#qYL@cU-BH/Ou-)5.W.7cmmkQIGh[d,h:hAh^/%qSk49NRlE0!CG9a/L'=6+boDNocp;(>9";F$eb`dK,3OR9aucOck^774:qiLY_($A.dP<8DUbmq<j<.AFG+fgcetHW*&H++#\)=m%)Fj<(j=Vh&UXm:gO:Xh=Eu7>A74cRefr-Dtf7Bej!'0u2*omff%#VP<qE?((!a0pWdo3q5CVdF["3&FcGmED`FsW%IVHu*]1'p[;%I3]sQ-('<doDngJctn'0Q_dE3i/fdd`W8,Nad>fp@FV?$&0b]'C&hFD;c6N]'X`K%l9MQ]LG!"3&6Z,i`,hfUW5ulEMOGij[YV$K%-<+"jV<`M<Q5p78A.Rtb\^W?s77]k@B.<!sqV6Y5%=VK&h&)1WE+6$h2UPb^3PA*aFs5KT`PG.`O3sVY7^]b'BR*`>;TiX,=5f70%kAINh7\*@e6a/DoNPZk[J8C+S8mV%F=@6((1oDH.ooZ$7YAIjtRTb[c?p]P0:rnK7SG<IA&H`/)I42S58tJFMpO^aXbT4&u:pr,P%82Q^G;MXG.6Qd/0<Mjbf<76jP"qAI2U,I8KWVEo+415M9FG/#IO-YbcYiV#bb]ee?6/W%2iCRPhBMI05f"l+<DNGHIX$rGu*g;]>%#(-[+l,6GA$19W<<p=;5)%V[j;b_C*VMt6&Jl"tL;)^8@1*,hV'jTS?E4+-0O^f$d'X+?r4D5eN#f\E#*hgDt!9,P3_UZ4Oc;t%?%MNiKeEP+gjLT>r77PdnAqmD6bgK2C+nY2\f,eAHG+?.(RE*H2*D"6>[!D+J@KNM=&.Wbrc+f[#.KXue:l.;rMW.MuF&NFq69/VhF%\3j"M(M&1T=U3)8?'@+*@SkJm-E@Kn+//hoXVZ]0:fZ_0Wlc;5<*KJ0a>fA/c/=VF'uYk".S2Y!)[dD2KS5YQCS6um.^NVQ_&4Mm%2b:j1dpTa`:ql[iBf6j9%jB,skAE&YMTV0l;"]?i7^u<"K9gY)XcjMn1Rel1N%QOf$r2^-0a'#-.d=TrS/om#1uOp&O]%oS^DbB#%^B:b_UY3\l1-dP[(G2WL,rrfWKMQ1PFKH#+P^9Ce_mR<0<i"ejF_@pm'auk.N]%=R5XW7KD'!U)kG^m'!sT[`87]tL:W*H!%XE,N%7&[FB_hM+TE5$+GR%j6di,GL.;7bfkM5[DukEa\rAo_b4!Itr*$Y#ENWsZprPY8GPROZ>07df2n7Re=bJs%O-YD6XRAG$"B/GP0+%#iHM$kf-8_Z*&g37)>P)=@1`Pl4-]2FpIF)!.V'i'/qIX&R^7>n9V%=V7mcfJu*F#1;<R[U/9_!NfKq%=A%bU@+Gcg=9.>9aECAe%fIP$Q(,=9mf*C_nJsZTt5^j0iF4Wac+Z9je5X?5"D*\_?$aGHa8U3=2"CiZ:@VCXLp0^`i6oGpNq<fZAZ_2!E-\d"KT'%@V#dho2%MNAu`eS@d5WpW5W+i6`u_uMKZ,4'&SeJkbO.&B4.:"gWs9[k'4_%NZs26=Wi7h@*5n\E#D[?g;.rBC&Jn[!CROmY"ChG>fd=SR<\%Yqu^DZZD3s[VJjWA7Eoal\mC1)%\PAY_P$%=t,7E1K!KV6u56a(fKB#"Y4pO$2C+3Y[PWQ7s4U'LIoRC&=Ol9L`&?"LQ.)C*hXG0%/OVHOEs+?u0Et1W9V"$oRnsoOdAE#)/MNtYlh>M2FWPpAh4RL'e@Ooq3(SV5K@5Wpe,fo;BZdn@h/?'l@T"FJ(#/RJn>dH`+qdc3%UhIM'&5cA)5Z8KD<<hK,OblRR,@?kt@p#-VN1KC6%:dp'phGhKRNk(mZ2hNM\JrX&jLl^41^.u\cR+YVa>)P@"*nC<Uu'iqBaWa1%+tNLCg$du-UXX++e21e6-DKpMZEk\tGX65*G6[RP4W';s;2c9-+FClE7QuS_[mdY<Q.;)#25_n,a[B;73>!I\29Od,O<X/[AF'*P%7Rt94L.Gqfc_=QJTr[aM%@M1m7Chao_8"9Wc(9o/qE6A'ChaZ][k"af;JD%Set^*/#i7u8N3,,_&^b'iMC$^d^b*O"l$FbF9:1Fm%YBT]=*tVSW!5;!dUL`E>TkQEDA/t/S9[o\/iYs_>2;$BT_?C3P,;<cWHY:(N7+R@Mg!)E_kVVsJd7.CW`^"sGgDlhjE$3tPNF'K7%:oq+\VmaYJ?(<Wdi=b<*a#,I:]#g-N!]]d-Em+T9iI_4e!WRUfW3UAQVj%Ei&3GPqN!P>BgsM(^YOGS/T%XIh/8F:s^%MlT-0lh&%KjZX*g9cKbNL4Z>87T?.A2jc,["f'%eH*sQIBa^.S9FBsA*"WtB*-Ntbls41]<0.ajL(i2qLmR>$E)0N),;/TWtKU1R8YeY],7nZ%jQe2oIG7pg]S[+-N8V*ZR/8I"Hj>?]&Ym%+47b.b!m83OjAqpVfP^ld!Y&TAkL@\]7Y]SBUR+n^HO:!r$/WjnR:rl6l(XA<Mh<H=%q8,j01HoV%2b:A?jZPId"k288U:rUSP(VEIJmnWl0r[fo0U6]`]Y9.01p6t+^B^R(8;`ZOK&M++r;o2@.]Zs'Xn]5]\^lQDQujK!%Rb)pG3(o?H4t1ql/*T6A5W1oaa[/t&Q?!tfh9A[K<X/@b6E!lQ#(,(c"SQ.??aa(XRWsP?gW?Q;]F!mmZOGTX\0<:>P7;jbkW'Nd%&<a<<W@EJsXqd3A$m=:5erbaZ&<ShNP)'`7cW=\Y1dJNn`HsA)=%Id9L(#G:1q,5nZ_FuF,%OO`,HfFj+Cc`K+-j$2-m"g6FnFlK%)Q$UDrA`C%C<?d%-e_)[<HoOqYr(s8=B$X>B_9Slj^lC\?irK1_\0q'6j*b<$kA.hClAB,(p[GH"D"^i<03Ar.#N6hnD_JmUdG9i%OqjL['9=#XnN4smYFu2TlU>U?egaeWGmf*P+X9sBP/26:L?S'i$jiGG.<Uq'I+B"J1=-mW$P=%Q;p]AJ3Z<DlCAnCcdAYL*bKAed%St;K5Y#DZCIILuW%!t7t2^UI__%c@/4BdE:(aB2.%I$3l!?]u-WrdlsMrZLU3Ns(a93m)SDe(4&ACI@_!bR!'1E\`4;&BoR]sToJ%U;)=l5XeZmb3P/:"H+#H5h>?sQ5Qc"4q!>9*4!j<kjX*n/uDQV[-#@`FgHk6KZL/7d9I[OVBHtsFQZB$@N(CJaa#q_>ZR.1VK!fj%TLWrtE*7RZYaA\*^4f>il2.I!#8;,'pY-]7_i$Y?)5H9'(!7_XO@j8DKpiFYPlZIf#\$/ng^Wa,8[kjo#/535N1E*PZ6prl@DF#I%95dRP0=O3$Al.h4%9)5V<:8&Mru=puj<DuHW8V^2+SUihg&aWOY,dLsL(QcqRC61R.^CDUn_R)?#_C`.+SaN2AeKAW)/*+[X.<j<%B6(;PHjd\D"p>1BhLJjTVK6H'n7j1.0E!?gkuqkqY\bm.\H=-ne-X2_eBg`Yc(qd.:QFOQQCu`$A1Cl8JV]e40_;2$E5*Pn'?%9s%`jcj<W]!?ek#L(n$^/fB$W(IRS97aFIcoPfXiWRn"ZC;WBoGBZDlJP*2V]XgQ%;j[G@_>!4pQ@6QD2;&#YT-@PeI=:3`'DQf0:C4%7f8PV$t=Z&#<9eETUf<sK,+H:ef3s58m3#^!`6d6I=t9^1h_926)[fQK3p^Il8.COKe%G*KKT<<gI?,XLs\Ko\@8O_hN/Dq;,jM(%n9@X1(_#o[)mBqe"ZR8,fO!Gf1q6#@>d>G3ordn/@H<!&JeY[8-7(%5`L\&S*)&a9$0a$M"HaG%g`$4r<Mb6EhJ`S<oH[R2Q/'O(%OlJa+"V'fqE5e`P[ODt[Zp6?_M6*B*7-n=E!Yj.7!B4e@mD)E4hP`HBEGL*^mOa%qHF/;GW>ApmIb"S>c8>=&%u;*.`*:A!)U]P]%B.I?O3GR)REp.*#="bUQ[B3<6D_qQm>(Abma<Ft("8)ia/2s$$$q7E72dY]t$F8ApLIA)g!n=/C-[AaOJS8oDZ5)@XRt5Gd:?%i*%A,udd_/9t,)EK1hp<p="JTP0sDJCGo7sT]L>$hE^>ltiiZ<F%c;>rgpWd)3O-]0+0<GJ;IR>Nf;C-/V148!4W(#lAEF!mqmd>^hS%Y;,:W`6"!ZFLHFnP86ji,`.49!#&4-+B)DHihKA4j>KDbD4WU*8h^6Pop@,4U9+u(+G#@4NN\'kTjbrBA\u`#qsjl0r_dZ-7&GCV%+A[B_DU;@k_\-\Nj9Ike=1J2A3FS0TXc\Ec0'GuhpHrH#b<EfR%*C'pCXX0N26CN5fg*J`G+Sfg!>OAqKX#J?d41=l-f19+j'_m1%."/D%ZW.A<:FsKL$><>5T>R<2Ls_#]9,_PURi1_WT^f,9XV@iRiD+3<&lPF:e`@4BVV7)-8KqKa=6AjDq#tU'3-CLCJ;2I"VS[%(%[i-aN+qDkoVB0Tg:]tnT7fY].bbV*2pP>m8g55u_*a+2f.L4!PB'2K/ER=l,Tu9fg5('PQPopaf_3Wf./-09j6lI[(CFCokk!Tmu%>=(=Oc@TLS1rpTn/EEoM6<A\6,BJQ_k/A*)d/XBN<@sQ"gX;C&[NI%GaulD0CKa<4]gMCdFU<=h]ed]d.,%]U8;=P"6BZGFi"=r!%7,OK;S3:b1ouU%l]E:>?&XuHn?b[ja+rCH0%T_G`&&Io@Xr+#JK.7*MH5)(J8P)SKE6Zb_<&DCoXS+PLMGK&6_g,9rfYs+1\M\:J%mtrg;Jjj<XYZoAAX[7lQXrG#d]50Kdl5e&5>hEo?a!C0l[>i^JkK;(&BCg_]mcH[6?,2Tabe(%Lq,1,s^rF0/kn6co)K5]J((3f9%eV387Mn_04Z[dYF-,]-dk?&%q9B=[HWXHqA$W5`UMF1;c=3S[]U,bTU9MXT[Ah'"rPGQ\X%eq:f"1&YU`(#nTBpBJYF;5(\c9_ZB%a0]!XkUSG*,uZs>0h-2NjaP%<;g5NiXMSDm0>rtqK@=Auh5?U6b7>9r]KZBV+J9fr^!;/MLo;pZcB@?&Ysrtjb>Q&@&dT(`WlZS:%%L15,pMgg\(h]C+-YK`LF[7!l)[SThP)\E"23$OUJq7*pLo_ehe(f0>bg9'VjW%M+R3t2M?l1)gO>n?aV/Jo3>f\N"h'u7$&7&iW%L)R2UqEqm4_i*JoKL(7tQo^m+<((QlW8\XB+[S?B8/bki_"lkY-K,u,4^OS5jR7rj(XoaGnP4J&!D$<XYD]W<'7rRTKG%p#c3WgR%2ta+`/`T]C"&r-(AsfL!H&r'<lCt'rP-Xr6/I&:,U0F2MKd-dOaUqCt_)g'93(lP-`"'YuZWmeb]7ZMNAURV[F:hXdgh]M)(2]L@%Vg.&d1^VE07RE2j#b,sL11IN,\jF%HP#V`Z7(kB;;m*Y>KKSP(#3aEtZ?*Gt`-+6'$F@:'!>o?&CToKL)KIYX-ZC,cY9G"7FK-CA%[^sHn('Bs8&1->?nJZ#kM/%'U<chsHTTXV_;Ac$4LNEYf/5gYrhZ:7l;@2tf0'd5+6ou8B@.o+h'+m5`3#ghkj_@Y?a?h8nPRsPS%BZ1"gpo6tQ/,j;+TL!-\F+mAMGF\Q4jg+,]%30m<OFR@^frh`1>b.^lG8<nFAfB-"%JY+Ha`4GV"]3F#>Y34M7#@tDGF[pILFl$t%G.cNHER]\iVZGTuMWFh^)B:r9?/r)B4IMD4&ktYfA)ZNFPG.IMdBp="<:/Mh5XU@[!P^e5^uu1AQSZgChJcR2]<sPHVc]a8+gOHZ%3S=7U@[k%(W`\DY&Q#ZG3Xs>C_.(rGP(Du!Ei,G6$@J1/=r55R-]VM8""Dp(h,Tl!PUh-S=,;@!?S=kX;_mbT8=JThgia@FaB:N2%0PFS)JC7aBh\IpX8/^JDD"qBP7O,?Y6]$HLMba:[6?_Y(6:@)IrKcHTn`<rR!OZuF;"I+,&qVq>,Sr$rU`]je@KfUGjN&W[g2s6D%9=ab(G;)%*i5t274o-o<%WQ:oSR5qoA!jA1/r+Im1Hb<J7dY;(0kZ?8)@_)QN^r.1XF(;V740s&U_",03+@ukr-[,t3Ai*cM(1#P%Le<:'$aF*T2^15RC^(f46UX?Lb=S3p133&pB+_[hb"b?_iu'Pl`,):gn?nC<-9cYdoYrC5)<16q<AInpflR]"_C(HL1fVLBd[^[X%G$;,u28Jd..8<J,r_Q7G$ciN;Q5s.^#?SnQ"lV/BUf<#L9YF.g[0LbJbe3d-4MSm)j^i2uVT>l+1f)g+H*DIbDXeM-jDnq-(LIk&%W_cBV;g:C8?j[Q#7WU/^RLsI_O"S5+'._KJBQgaK=\ZJcFXBN/1OTkPeWX8WXN@">)2Z=gk`E'e[Ru8/[_n\:,*<9MFbR2Y8/<[C%Uu'PD$O^MW%:9.87uFSiiS@LC\Ip*n"YN;m<V_>LRBjE0gk8YTTPU0-ZFCnKW8q@hJqT46Z%Gc:Q0hrZ1YR@FD/d.D.j8AU!:HAf%DSUeE__E,bBG)Ms=ePm$),f+YjM;tW6G>;JOpQ`^Dp'Y@+/?,lfG5qUnU3mGoELIUm$gh%41Tn>^h>@A(k]u"PqjV+bSQ;r"J`Ob%S@b:0"U&ZGImib[nq^uhkCsgA5T1AKeXqe$%&B+q*\LHl;]t`kJ<H(2gJM`:_Z?,GEY'0p!=m5+SHC/cMjSE?qmgc=%8R=Q2&$_O%n;*RV*p'OmXjm+V+r\mL>to#^f`>4+`=S&%eE]Y&EJ1:d1`Aec1'WJ\!#mP5b:o3F_J9`\eY5>RT<&9tmLK;E'QOCtXpj/u^r0GL%$R2WlUKIE=?mLBDIh=DCMR.>hWcNn+A)Int]"p/fT=i01>^hO^<>2h-;[Klm7nZ_/GhN2\9K>d=5F@(n.h]TbO26Of<jD.aq,!49%[?gZYXtpGWAU#N>+?QeuUaVR/9t&@kX@u[,M5AO,U)jYbKG.3i,iB"6+Hu,0d\>Es7FAo-R)R;[GkOO#3@@U<F_M[gmM6Bli$\!,%EES86-"7SiXKD4+'C?E0!*:<g#A#3CGZm"Jdh]`#5l3EMTG,=Vc/0mLN=9W=U&J'C.2'2a\FR-54%dd(8?t4BAf]oS,fI:2ieUmV%()LCd[T*DnOn/b$LS0bmd(M::KSc_gVOP^Y:".9n.kUC?-qgcZQtGPR)WJk,od85$*3FoiUI#(i&M&L<;[dOj3c#_H[Y^MQ,Os(:%)3OSI(33p4*d48sfaP#:_4+D%_2.:XXC=8j:(LUkWe4^"2%e@X[630RX?N%\7ig0W=2U-P,'slb%?apiVSg"?*`?G^a-PYHY8Uk)%1-')=i!bB0't8`UT^'<@^=h'j$^bAnc@i8J^res%iq,:79W]4*%V>`ukZMf(3r5-E;]&i?/nba>`]EI=L3F&_Xg\Jb849bFjV;&R%RG98]>>CCN>LR433R+foToUb+5inl'Ec_gN=jiCinjl:aM1F<Aa#('9KH;rjO?sY,Je+[^ht+/cV]'S=.p7ooQ'dbg6KhQ$5,+%6%FoVUaTk95Cj1^01ZP&K0^+WHAeZ'Cp>0PDG$48C8aU5#M3n`%oL@.>03\sAu]*=1n,iWA0I5Y%dLTj5"!dDF<S$b-(@<(Jqg^\8n%Ck/E6hjet/'pOjaQQ:Nm2Z;WNals/(3Hk\FeVp>oBTXa^_:!)-RR3h^V2?!l8jZBA]2Y"m[$B:%G2fQ!Li]Dr66Z@uo>N&ZC2)!8%&;-.SktA9^aljV\mHiY-#`74dA&,Q-OZ8$;J.0/R_C7=H7c.s%=K-ZU+[.h93tIMhXkF`eRG"!-k7hoe=@>feY'I.H%gi"k[0?WX%AE9iYQHjFS*PCla/J3Y$d[4'&D6FnpQ.f7CJ>bk&%;u7<'MRsV&>?mX`)_`@A&^d,<u>2kF`]%Mh%Wf;#C1!JQ0GW-n.O[(;LY4f%R(b-`'<6m&57ulC4WZ-_@T*7m,`h";fuKW:'`l9-/\PY1'Zc+LSR'Rd/"YC\B5C-Kfui1d3!NsQ9[+DbdgEF2Z`7dX)P[W$UoP+S%OjtPQ[`J0^OFN+S0[eVr]9^KPb:"?)6rDK7N/3YBLkrl0U^.LO.6n/oEPP.JY::_@(<*qP#mUU>C@91H@U[7l+rg#BSZsYb*k'c&%cb12"94BAJ'=1UW-%?(6M1u`A<8_@l1dWrjR[T'%]nSb<*D=JA6:CVF-%k%)e=$b!d."YVE6U^T2`XDQ!O*(b">)mVRdAn'$m`4%%:*X=Aer^f%(<aVTmdh8P3UWJVe#3X8UENLf(+:c:WL&#_YYUoRoZ8d0H`9]AE@*"8#Q*k;P]I9`co_$&!)KF+1<>q2R><&ZY[bCZ%!2+tLc7\b::c&^bAT%/TEtA#u]Z/\-0rW`NXhE3*NSUfoOArShiAra65l!=t\?3]"3CeP$_(O'5\3-0#>@l/0j;7^j)iTS&OTu;P%3"a>+J2tYn6:SS!.sF9<SfVN[&"e6n+rQp-2$]mTTdapsVknCCPm`1B[N'g6!TuJXl%#:dCSsj^qc?k1g!slE5Q,Tk\$p7(dXHE;%E;.rKm,[]mq<@-aFXY14b=?o7"7k!G%M._-bM?<Bm>@Chm/R"JHhtqVb1RL:7?EUa5Q/t/n;$urs6*&3cf4;tfjDI9ZX#&0O.+Zi%?s0slF',L-[^+gNOEZH?MWA^NqI_,oaI1.Y?h9g='Um[4"dF2@UAsirJ2AJedf)4Od[.IV&J^pEnU::_hgS$*D.h`>k<uKp=ZDZt%@UpG?FY%H?<TOk3[d,cQN7HWXWGGj+o@+sCI;G`^XX,O^]WD<Uq7<A7(VO]jaW\K33I@kq0W^]p;Bmjl<g"Y1fh(5uY<;$(`08Lo%6OCaM3J0ftajC)[)Q6D=m97O)DESlIDY9X015,V/YNTcMYWI,*5LCoY!@q.O!JCc^.jS/Unk`s5$b7?Xb^&t'&>bNsm!N;>N4YTp%PlF3ObYo]M!TE'Dnd-^A4uIXJf&U3]$jacZ)l$aeJ1@]_"T$$G(+W%88*J<55n)m4i!j&-Zl5r"XZqfdo0S_$*8`=)2\t^N2DCpn%ii!%2,&+J$=(n,VM2&dCN-LY5Y!`'HBVF8(O:"mO-Ia&GU!#<mkCpqH%]5XpOrA7RRV%LDYW:Vu1Q>T2JOW5S<l9#!+ihl=YubO&%Erl)=$(#!^a?7tej;Uu7XVL.%"5UhES4AZ:D</?"BA%80Vu_^]-7ri0e5rQR`(770,o795'Ss/c?^in_;YBfp"A=8GZ2]A/+PeCV%a5Ppo0f>9D5Vj4`"AM0--OrQBGtWH_aWB8/N[Gto"*QN"1VW+;(OoQ$]NPhRB?Da'maC1Y.,j*IeW34RFVS.AD8?SId[WTm[U<Zd%!)W'%A]R4=p`(WdNCt*bc<a)bj@&F/iGT<HQR]n:'snWh<p\n\.eD6n"sc\(55TQn5tE]nqR0rg$Qc6C(YQtM#F&HHc+<oN)?N-Z%#Zb*HBpRV#p'=Eb*6+fR#dH=#4++/23;ss)qij4Sjhi:lZ5%0XaA\[nI4"?_KDpjnNA_E(=?G/=#n+Zh",CDY%$Mo6>bX[+>Hhj_%[bhRfVf]sFE)/&*4t>:1RKAD=F%diiR)W:Ol6%>(:N;kEQH/uHm\F@6>fmG3[md76^]&PIMi'<c6?5kJ0/<Xj>3\%Qc0m#P/"jq%%Zr@+SMdB@X_,d(NHZClsidNndImMFh`M\#kWk:f.V3HpWL[@CR2C[D&RtGp:C4[`6#nM5X5^t6KE9bHg%"a_[_+W(ZIOEX&*18Jg%.23&+FE*/P>>!nf^@p^d>41'mLXR!khm[]9`a/pi]pp5Z#Da/'e05]MJ!3j;9c?G%:7W6!q]T]b#+k*3h/t8L</in':t^SWlDgJO%Ib".'mo)kG08m1!Nhi;-AB*Df^7/GQ4F+Xafh`nZe?P<aDRnU<Il_o/>f;';*BFNYE?r(k$8tS"(>dkLK"%CD]uhU&:8UDbhfUU]%,6`Lm4E1_<7=TH>-=Lek,sUTOBCmas?DiNUp:T_`P[tAiVg>@PJtkV)[%+M5P)`MS_X@H%ic;Y+>^f_QR>mJkLrV7lR8VKt`M7sd%U*-ZslcFqb*cMfJq&TidWS`dW>SO_[]f8]9N'YD?Br)'Wh)1m/;lPr%EM%FCrfB\uhnSa5G;jEB:-[B8SF.C<c<!6ShX*m9)'?2#%X)#$\pJ4k;LQ?%KDr&"8=I^De4$&p2d;-(4qL\2/J$-j<4!.H@C+*3MJ/>p,\,E<9g9#,`LJ8j!aIKrMkpB,3:TcP\e]=2<7sXRp%1A[.%YO6Ze.!f<XT1'\:1#[X_r<*,:l2[[K%&n&qKjT+;Z%6^R%W_a@$prS!4;&6J_TL()-0lT!kem5-=:E\(['=EUUk]bO5bj/c%c03M#/R'Ou*-!Cl@jM$V(5\5l8KEo,RKd[>2X#@M&ll]TV?<V,=ML4p,3W*/IG)U+]GZ>@E=b<11>KqZbe`O0XL+Y-@V@64_Xn&C%6lL1?+882_/G-`E8.'m2V=-i.)AZ=a)A+hJG1urY3&^C__?r$A"88QYMduJ8"!1H3.!?kl3us#!&>UeE>erY%ZCI,<AI4k`i47-[%02,gI)/c^S7jI.UC90Q1';EKc/^hR[^m;e-G=Y\o6H7!*;qefcDkb:4<$.`=r/s2%9k0hgRg.GJZt\*h3Qmsa4b?[Ldej'aa<I<I%K*ZC!d5=sHRod-Dp32UsH1,/Yn>>8PenBOP`H$I%>pC^CJV`eUc_=@.*i<+C"U2EeMWFgW)S*+BelB.2>K,8%ZXo\E98:%Ec0kD7%BYD)&aFDoh,M"RK7S/!IjJo<nL8>!ofG?E>_eNsf%-AL4@j5)hU#N4DXEI6&]ZRV_ec6<(2C%gWA@F8'l-.&Y6*&3SYi!l'e/n7V%G-[rKVk@uE?#A_#^iZC=EMi/)Xip5mm"6G-2[lTm*_^mU&/"mfUfM+G]QH5@L)hM?IPnNk@ff!R]'O4Z#)tLhN5^)Z$<oi`89SE$%SLp0;e`/OZgm0>0&H1WppB)AijeAZ^GH5@tV_/LE:ba**QBp;b>a0'E#QnZ-Bd*30rc">a*@\k"DDMYZ-Z\iMj/kM^7-pP8M#2>K%!m9%kCLA'-l"k,C)L5=?$>-A-*F3E^qRn1@<0A"rk'7b;rRE*_"EcY(N=n)sN/!7SkX\918Iub*0n]_.hAhep)pNu?B"Xc%>f&G+%'aHH!O)XW-On+Ed3?Bl_f!l1&6U6=d=_D1O=<DTG,Ob=qj15o>A@OB:5Sj#&2_/%;jJXIq>"UiZOcDb'3Z"7`:q@U]5X8/tN59Qt%asm4C6dWAX"Xm2DUM!aUZ!\[^KQ/4)1nb796niu2]>VPW(.;<d,,d"2?:.VA"%Xs1!FVS@5#p09MM07lQru18>eCV(/:B3$[1rZX%+kBB9ZKsk$`%FLGX%QFn<L3^a`-P3&!Wo=F5\<%UN#gJ1A'babO]t2198Gr(+<D1X4,#-aR70aDJh`&r=qI,00EYTu6":9]B0DoT%8";n'/@JE7_G&HAV_eMV\S@dgV1J^[\n7^u:i^PpHLB;ZlD%!3g/L`-g!p@a#Vb&__1k51.OSMX:lKEt?&#?2@j.9%5=bZmS<^Vp%<*3D>N>S`ZhZ\!e$^(s"V.%9sYHA`p_p++TfeV'QeiYV%O-X3*eo?Ei,*+B_0A=hOq!(iWmjW,n0+![!JdIpYQZ!'OL+5&gi8D<^%K)nTk/[eI[SHGUSJb_,<ku*o=)b]2?'S2P1jAVfW9s&:f,i_4G7=5mpSp&4C/<8D>hDG:>5SU-JL'nUOVN'[d;p!Z/5lIH$,(tqZ%i>I8M1a48OCcN,eI%>(a&PD2t!g1>2]/kI&Zb1.B<+I>mE20O8eh4<F``8.d$cd&Vd&<HPiYmA/'4TEnAJF\5[?a7s6"=jFPS(#!%/r=![;lFFI-^AuKMU\]l\u'd@=i>;VZ[@]#I>BIC<YHiHNWIV,/)FcT#,1"mG2XaZ\?_gl>+V5L?dmT6^"PFI(g2mbkG"6/,]Za*%AtauC:uqLGDQ?fG+rcJa01"MJVL_4+)mEqcekYRB&Y-I@7Z6T%/"7=6g*O@>Gn]'<(_s]#.Rr-IoUK/-6ib=31NHIud>r*fQM#dd%<\4!7K(MGujl]TVYd2:$$aL8ilAD_[>K_Rfc=_1c,S0AHcE@LAg!o#(;L"'3#(WC<"k[]5=\Mg%RE]O^cHo`kVKuM:blFPENqg32%9'TUKA(>%GYn]I-$=VIcYc-V?8.HM\4!]L"YhH\nfJ'd:lK3kT+tZE6U3Q]oCPRUHZaPn%"Kc8k\h<^C(+:d(.[)[l>#PDpFA6Es%?8_W3g#VA8k"RhU$5em<KQV=(EN(b[T]RJ6UPUq/_P1qCFbjX)Y+.D-)Nbs\KB*@&aiQ5Ba^?Eu4S";bQL(F<8\#a-<7O6,92r+!%km@)oRo:#B``3F'/)@J`K4-5W'bP/`9(Ia<Tb_5:FRiUC@Xs8'+ZM@#aKn:+>k/)#osP2eMZ6AN_]UD]"'*J4"s>!tH).i.TU0i0%4?cu'_-Gp@W.H3YG?u:X#oAjO<*P6dLYm1'7Fbk#S4K_ImW)5%+L+rLk=fWlU@aO3>hs'b2SGTXTJ>Yl%Oh!Ka7%O/)t5sMB0*-E%_TA7.NR0AWGk=0,dZa$U?kSb,5uCVf2W@5X2,%:ekkWV+WZI"9)'qd#i0&-!Q$cABd8#rZQ64@=&PT=L0.=NiBX!p,FAVE]lBipE%+=KKpQ"doXBCJYq?pY8+!(5G"CLmKQ$.n-Hj`+/"98A^roLkak.ZlN==0b9=GHf,NQ;6=VXttp;PF2Z.fGS3MFBfho<(Y-+cGts(%la7d//?(;*Cb32Ll\61VD=-&+XW<%Cf8.PFF]k>4:0l4ZFdb@JZ)LF=KkO1--bqAY2n;TThWo!1'%+;+nUf+O!jo]u%mNOf8RS3J%G$UE7>O`sP#-@7DL&h_72(%(%!Y[(P=;3fIcN=9*gQ]](!AqlcWm<N+Xf)k4I^<_V``r[OF.@<ZTJO`=<X0`O3Ua@*QX`o!RihAE%S@oet$ebk]L[_^;c+$X_'=,390WYs*CVtC0buk8l)hZc'iG(,q:1J6Tk,%EB+fi#.1d9HgI.Q.#2-s3ul.aB)jZoWO(4a[jHY>o,%2n!<[,OL')5Qc.'`0F7boTI&4\+sF.`6NTTZc%ZTG#k\45g3gO31>%QKL]<M4J1SXNaBb"SLOA)H6CP>)[1M?8Y?\9,;Otj+CYT5%ijBJCT('(Ua6I>C7r?D4+ZFEi1gnJ#g'iagbZ5;1(k]<F[__jFmb7"pgr:KBjN,UfD_9>)1p_8cJA)FA!`9(lCJRg9kYUD&mH*I6%oP(RNmQ[9b05p52%sRo-IJi1;a%KPt=)Vq,oZ7?WqJnFZrHU-0\`u\V[Z2SFel7TXD872ahR!MT1)Y$Vre45eWMamGlr2sa)V_87%g-hluT$+R9!+]0.R>1QL=u+d#%P'?3O;;sgb7+GK)ISOVaqgPm>c/g^#m;McLAg&A@^tV)E^6V#kL@>(9XtGj7G(]DG'77.>o3a@%().1CAj@aOZG^M`]s92F>!9N162$W23cjDE)Kf;Ml9UQtXdqnsU.:X5[.cU\'g"k7ojF^Z$YPMEV&tZ;XX1St/A2rpj<CmkO&66Y%6,[HAQ"!Rubpn[r[302l0NoTGF4/?=aTklUN^X=@KUZo*cAAhq^G=F*(s%5]ITt#%1Sl'FEp<7^L5JGGRjtAt5bedpjDHft5/Mj]%&33@inZ%\,!G2(#"DTR!(.;ke$s0<PK6tm;l\n#r)ZV((%65)mQ-J,7\;j'E7]V#qOFLs1-bL:u@)?010`6P8\[M5e%=Sa:.aV`e%XU$bh3Ui&^V$&nfP\n*"?>$DE;-SS@!ngd!XN\)tM(`lW5a3$dCWj#o?No''(smfT>ta<U3pm*Lj79-;Oni1sY37];V][@X8Rs-G%%0MeGaJgbI(pHUWn8h_ni"^EOr3Otd\2#=n-bju_B800?Qc$t2.$`tM(1hQ*$EfSas2Z_cjtg8Y=mD^M\L4D2_C7lR^K+WWLod=_%0R%(P<lfUqD;B_E\F:H*#$5X)F;q6'XB"%a)7q"W]c^cTTnXu<;GnZ`XY]SNk(EeLKGY,HMj0rFF)@+0d/^7sZg:^C.'T]4er"un%"K<P)M$cS*I0#&b5Y@j:Y]"UTh^4aQ&b3KZNt1XP1O[tQp@[`<Al65=`Kec1$R,K:r`T9i3tM=q>b#-2H?8iE_,<_ocfU#S8'BHL%c>%R6\p")AB(F.4q>UBMUXf;;n_QT*IX-%BIq)O*N_a:0ma"[A2qA\V2S7hP.*Hs-+5D-&hd9H6=L=fsb_"!@X^LWa[=L9C=B@[`%q0PVELV"?WB,3F<ae?<_2Wi2XZc1tqf??S)i9U7JT'*qFp\Lf;?%,B4*KJ9:L\%:kr8_C3COa(14HJ[Go>BBo=sYQMOj-=ANlT>r%c>ro';^l<E76a"?SN`Y$5Fo"'@sJ%?_>NrhTHBc;o@<*^@XiZD6TQFKoV^T;6TVRY?\K$e?`]:%^Tjc&["=0Q5G#%o7sWP71]6_n%&!</c(?8kNX8_j=L=S/m^K;NDn'CDSRDn.\L$?NF$/O3E.2`MqIC6Q^pN_It7f(j'f`1"0.@"K\(OYf4rpjlJI<TsbIuhU!bKcTn%3UrWcS*>7_O-I;oqB)`j%?"EXpXb?kAK-q0q7e1?oG7bSLH##%,!q`<*,LeU6%6OCs3\UXf$3t#I;rS#s+@1Y]+*Js/a&3qOoefZ%Hm<&grElAZOmZRnGQ01-41AF'I-I!LRp#@\>@$Up_1;D%m,m2D2JSi]Tb4I#?i'fgFoTK`<7K*#IBK]qVhh_JoB#^K`\[(/AGQ6a%o&*NR!79fm9^2SrX\5O(HHsE1*mADg.Vk\O'!gV@es!.F/`8:hY^>&dRjoq?=$TI7L!Y*Hqk==\pMG/H]i]=q%p-_8N@19S]hH]>%CPkksR6Ima;Pp74gmPn@ID`NDVY-,q>HsVs7;mR0mbHY]cbjDE<Sm1*',9X8RY5S@'E8^cs/CIsni<W1$8p/>l@-3$Zi5XpAX1$/%C9(cuq]FoA;TqQgCSbqK,&/`@//`9,OXd4m0='&0=Q>;9>&1+A5D`nJOXJ*0C9p;Ze]q@`F8o%Vs1G;e:?5.J]aT5+rtL*7M;CJC%]spfml<=HA:JRRN>tj\+%0,c88V`CtM)T&FIma@ZjokP&"G%YAno&1iAB[n<_l0,HST84gdDFm.s)Ak=L=SY(*OW&!79Xm>BusQ0%]c&IY0ja>?=a?]Bc"%DQ&F#OS+"b@B!+4M*AC]"F+Od]W%/]#t6,!KJ:="OLf*!.()9?rIkgD&4Sd301#7IZ'il*Z:+M.LFaqoPO%`SX&QpIa>V2Fq+<15SN%M'B71mm,^N3cm%GN&e)fqu@`0[VC^6VsIhH$8MRg0.fme?bL@\![uHGC#tN$?ldVE[9HBbgl(B,q0F&W%Cb!"toZ>^[NG,ePG'1^-nXLD9-bnp?kP`jOHHH!*NDC(G^-C[#B(,G!?gR0Cf'C?=IB.#L>e+iqEOtmdM;R4C4utYM;<Yp2I1jc]%jbm^=E$baAH;+ke/b72PrabqQmptn'4u8^Lk[.)C-dTTef)0&s;1?5?HEt3]pD*^;s3=5$loCBSlb;[TVtZL8UXa6HD>c,aR#\su%UD#mG*t>j_\B&R6HhhXShX&DOC;G[Ig[ECsg=^gSAiJosZ_hBi7u+]hH`*4p<6=7BcdA[31gJArom*=cIs%gL6aNh#SLe\D>oqkU%h5.sG)9G6n-i7H,lh&nQB?^A7Q.Z-6gY)+/%uoi7pu1:9rKj#m2H2f:0tG-Ed!MB;gPO_^b[<g0Ir<Hi=XX'sK7;S0Rd-L]]6h`=%doh$Wma%1NaH>se6Tq3Ce/&$@q"Lm\4f;Mn?HE@L^#8SSZ^L4%ZV?`;;NZ(^hqJdN?qoSb"PqS2K-*2B04b;lH@2;u"^JTXqd7Oc%)7>$F_;C:7Kj/p(rqCe_oP+aBci(cq!V,$ofqZUdb=b76oj;%U6<j&pj*m(XId;nEFh"RmP8dlsSR+GKBm/OnEo(`&PJ)J;e9UDS%PCq?)9Q2DcHeL^Y06]JU[q-t>Ja1n;&F,Pnb6Xuj&KG7CqfMdkYGRnWrn1ka(O?b/b3L8L9UA1mm`XVc8E$bf[7LraYs8J'G[eZ:%ISjSFs4m:V:H&m=eNT@m4C4Vlg@sMUYe(oE%<Ac12Qt1241iMXp=8M"D=1Juj!mlCk\7e.T>r,K1HE#F;[(A1_eF3PXnGLbpO@Fq%c_M@&KDg)adD+k*c54=n14Pl[g*hOF^RkClG[*uFo8p.Ve=FM=aiUrR3e)*h["!81`%Oe(>:oSf*qZ(p%]FFneQ-X-pX/QmVg?9E%J*HppES-D@f'4^SOsIBc46C1&"`2L\:1s;CcZbGaJ$lJ2f/B1$s-V4k/9m@;ipTCU(O9uu9^EL73PNjk>'m?#\6:Lt+7t0CdH^B%%_d*Xe4Pbd_/pYAKcmD&@,juBI*'smQEp?dX752KE<^!#%K$ZinjWe3MFfB3^N8.?/HaY5q`ts-aq'3n(o]:j'FCeH/IG/G0'st-:%KuYDV[<11K.Q;5bnU!Bp<F^J@D)+FWmch*,d[-;9Zn-TC?AK?]J*l70IJ@J5InDmOGPC9ubL`*T-/K\\WuA`:OCrD>9#FG,O$l89%)`mhCSlr6l7ji&$FS,C-rEl+U[[T;rIo[S\kQfJZoND@n!aHcrnTc7U=Z<tL<93YdM&7\Op]^LTM!XrRlKHl,TBD*'I6f<k;>M:%%]!QoP`qjqo\"Z'R!;Kt%N!Tq!O,m?A<oq4HrNPqu%XDBNrk.I6/H0pq0d]E2o>QHpHh8Q$r0,+61cC8Xo@9$jCS*4\V_;?:H\oVe%L\&F4q8pHg5LlC7:?1O-Y^beV>&X>lXiKaglt[RI9Q3euTDm$9kaEU^S+^3:%f-u^34rQYQWZAP-9,@i.'D7-YXKo5T?u;;0c/$Z%:Un"pK1PspC%^0?LJJ]/g"iFPf@%QPl/="6&6s/X,ea=0!YOQS8d<,aM?Fgqe%#OKf@%R[=ZQudahgEDlV<a@$9qiqnFKdD5KSc>%*":<HK]_3nDMpaa.FZ:peI2=,`JM4ue(*=&l/#lmDstLE!iLKeElFo+K76e/O&h%Ze]EMR#D]qS"W`hd/u`G=N>Se"Z]4rBcWqg-%!:T?g@44A"Ds3CE_m0K1,`g2+$<eaS9*W0/@.30$J,Y)uaP6]h3tM=1Y?u/8c3@W\eEIo`KQt8UYA/.1X5onp*SYH,(SddU4c_gN%*d+bH:0`00ENeNCg!8XXS2Z/HCBN8U&:s!t\t#m_qnLrMgYL\8m::6GBHj/9:u\Q/T!qj0N3gX,U*b/20s9j@`D-3qS,)LR!MQ`8%P=N/Dd60ifXE=Kf_hTV_;Z\=lI/X[J5q9?`'F)3&2\O^2KDiK9CU1P):Ap6kdpr7MHF?^94LqPqpglR"[mJhM%),O_UWS'4#3(."%TYK+Iq$0FIP;hIWmd#N)jX@kC8+hl]D-,Qb0OF]:\*j]JErMI4kH>>b0E&8U;l4K]D2EahPu%:LV+UBC)UVVoUMa'aW1etY='nu:%lH=Ft[=U.!@aMId1_cD\#gBR1&OPC$gDAVb(Y@@?lq[GM42B0;aI[Ktq*L'4YMe[Db3Xfg#gEb(SDQ=gh;:;ihU;-_?BHpNGIb?N%d]Ip8.Nc-#jV,W`T.j=AC]k?[N6:>H-]u/EQTq*Pq>Oj2pY`lGL"(BZp>.hnl>qKE6tRM^alR?qYECQR?d>:6h`$eWfK&'`N*Sg+%:E##>=R=E4E:J0<fK1)PG_2e%a@Bk^[B;`>%@K0c0Vi+A2"fIGNWUp]-M8a4'JkgTV6Zan=V\!OAIRU7@)hAT;En<U/ft%2@\<U8%c;m(rZ\@l4EYuhWn*;sb_Y6uTI6V*1nUJ@Zr-FpI?>$Ing$<eS?XIG1%nZ9`U\m-/H:JKA)1qbG]gn.Xq`h7dqd'O$]kS>!b6CPN%lpL#+"IAkVO9S_Gcn`Xr7KPI:cSaA=-\k3%J1d2.UG9G?^h5&7mVA2WobYN4bC?(SXnjsC]Y5(d?OAIdA=_d<N7V[<J!9g1F\]jS%Q*B$OY0G<iLi.%/MJg\k<<<?Rq%-jo`'*-\n<]_-5MJF$[^ZM/mi<D:gF\LaR`,Ns5C:u(%_UPg9W(<h3:H;&_qgfJFn`c&]m&Z:%bPmU]7biE27Il?5g"!jml[O8%\scQI^SR@oe&dk0ouc)Zd?gn`I(X[7/;OErI?cT)$#tlT^phB#_3bi,>=p-SIC+L2Rbe!mI_'bd%o3*u]d)=XlWq!?*.)F'FY3kM_Y$DtLFs=oTeP4LRQN@DZf54kb'4^2lWae`/li!&TYL;e&h4($dH0=eRZP9In2KbpdrTRZj7V&Oq%mO]A7N6S[S3o9+VVd'EdF5`Q5:*md43(@XW\G+XfIdDPefT"Ls<X8%V'<rk<159cI)90\%2G[b6EtXk^,30@3:Js`1-bm7m_ngu#%I:DgJPh\&5&N;Dqanak.EH]\NFW\h'k?$O:mKS..[j1iN*%^aRT0D$*r+L;bp6Y6mY5[`ps02Orp&8jr#Q*je&jQ"WDm!.4rsjtM%^qV;*GeCN#]367J)+=8X\+HlQ+-)]YgT/(M4SeF0I!,!d&^so!I6-7M6Wp.UCa_etO;-00S.'lCM2om?dGaX/"1*KaGd?,<bfHI<%4"n'M&,$KWqhFr?oW;I?pQqeMF!iU.?Wm4c:&g7o$%MA6>cRgNo3Pt<beh,6<e!^\rS=B<hWjPnIH`8N]!pmA_kVjNH]l(PFnkCH%SE*GVoD1%^g#`"GpI3u*=/[Q4LL#5snG?;^2L`d&i+.=UnP_Z1I2uM_4PnT8n+UucY5?*#eUfIKr4UrD?%#S:I^i'qIX(ZoC"m`,%=8m?ANVB`jEiFcdGc=m7$i>R>0=b"XXDR7LK;6n%%+n]H4MA)THUP"N(O'`mbq!bpo3$;;k\RY/hBKqS9>C)qS*=KCiF$plhsEk*%+5;hD8%.I&?.Cr?Ap"iBq;]5;[bT\#4.+i.ZBpSbjG_@.:V<<f8u!2;cAic0MS+48Zb*7aTml&MQHojZDLU$Y5$OU@T&#m.S1[li%s(8rN;2or8gu+)PB;`d_V\aa@FM-0^DJ+Fnk\U6SPY/u/a2@K&X/"^EX6!S[B2_Z;FE6m(gYX<'!8frn4$9A8\9dU[J%7''-7Vgl%Y0YURfoPRGe`h^]q.c7(c#7uP\@:\""(POD)i!;=c$MdV4fKEB^%[ii?QS$e3k5]DO&#DIZ2E>`c"O]RdNA;4&ba<Q)QO4bc_p(F%-$[etGH$I"CD5.@k32>e<Njs>d:t\uE78hcNm\[mE'-AQQe9F:_:efMc[Aft3*jc>:QFW:5$Im2=0o@t6^5V;Re=Ji:Rr,pe_='Q%QT_j_lj=Yr$QEJ"0BAOjWgBY"`R<Y8+$Q6fgpb#p4H04CiD$n0\t"mXG'84Vmr\P:Dh%6JLWPqXKlK)rpA-@"5@*u*03LGZDW)su%7uJ`brP!]e3l7a5mj@\2n'lTj&*>7N?Q)W,md]/bW&#gA7s\bNPO=Io]=T;"oDQB#^ps3^m,m!cOe!jm'Y^0/)fP&SbLO`)P0\lD%qSi)4^O>8:_h\+Z8#riVLO1D0qgm\r_ehX6O@5;Eqt%]OS!\H)n"4V)4Sl/PSaUc;oG9F$pj@@/>h$q*gA!3-DQul4nu*MBjlCoV%:MIgB0>h_a8G%Z_`IRIXg9(dh2Yd+mDC"1[j0k<OqmZTJ]"Dueo==b?iU68DpQpf56_468#4%=o9m`iTjRN%AS+,CnlK!OmGkl/^%%@]PfdJ7ctaOpEG9?=i>XIuH\2WmdR0=QOhh1i%B#E,'71^RZs^N\J*K;<>[=+=[Cl44Tbh5QJ;atHf.eZV4)/+!kn#P5[sMrjc"%*92]7HFd?%PEAB$\E^].IT7-Rd$'rkI!E*7O-B>(^3b9lqVUG1r1*SqLEf%;UMfI^r,BAPhE61m^W]th?^`&Ca7G"Uk*m5ed1P8q%CjF,pYVtRR9grdVCa3XSM0%hpbZ@b[2\u=;Du"fGes)sh:L0of\iF\]g!Gn9q1;%[IketT<1Cr%j.lUj3'-uIG\D!KX1_o=,uX%5%Vs8Q6>b3n)#0pT01Z4FdBpq]7S,4Rs>V;W>#+8]n;&4g;I=T\<"d'I6Zu+fJF'2I`mM1)ljJ&ZWr$I^d+pH!p=&S1lH0i';_:YTm%C]-7F\@#Am>g(`bEd;!A`Ha=*4PcM"EmFSn.MM..N"2mAcK94ab]]:JQi#s<J4GL.E5Jbs-^Q?2g<5\AZu-Qf1F(Rklq]E`-2%k?%?:t)#%RUpO,L=C$*fBO9%^i$\P"87U8[m`@L,Je[mCW+b\LRF?ijpfO48f>9GL@i\9SW-;r9<dYrcPX#?YLnm4jF5KVA7n-qO\`,%3-qgJ2qEA+Im2rU2ABNkb@,P!,eeS??(J](`ufkVs5J@34J.*Vi:!/*ZDl(r:\KejoN1XJZ&W>B\c+0f<-lq/'Tt[FIE73.%n@-o%3IH'.UX?d)5]>r@K>#`d3=-('D1o!UZM<sbK-sn%gM+3Fo^Lh*B_6EDD_->k?TgCe(LPeQ+nN%(AM9)!U)tPePb)@I9J"H<Op>Hh%MO;n;Ek9#n.i`i)0=bua1G,4V:m_"?Gk[m2p&<pH)g/f?C$&lk[4g**p$qQEMk)X-I2T.M.r<d2CgX>!MO8j)>,kP8qad;p)[c!R%oNPd?^V<^SE7h2Fo*_03l(^@`buT%;fi;oZdkk9G4MQ-O<\G;=qC'\Sg24/5NS!;ZO,%2t-<<Wj&:4nn;6e5bF"(-KSU^A#/l20^%*Ni7@XZ`j/W$;1&Na2);iSOP;Vlh"i-ZVU\qH+h5a0aIqX"E%^kEkDii"VtQlBu_i67)#Eomm!!2j[h;DY:kjIn.h_9&FX)L]%Sm%OX=5S1bNpPRa:S+!n[9^leJ>7A^nbr#[A763h\J:G[4G>l1o`i=WHl`Ib9#d8X[QV=;<PCF1ShfWq&(?YFhZiq=2GaT]OI54'tt1%6h6!ln%>Jp-h*22p_]^aE^&Z'ELCbA"b0,f:>1l5.W)hUqkK]Mgu1hHc987gphK-of'JI@#IEfm?38iOrUoIS5MisJf5%^jCXiB:%nN?"onBn)Ee&u/I>P#a"-q#^3;qMhhG&:(KU'"O<r:&dq9_0QP#pH6`_*qpn9?=:gIBl<1&O_jjWj/Vh4+>'a*1]9"Y0NI/'0>_[%fcB[S15F%Co5&'naQS.h4ZW8(lc\t1e$-_urK0E8+4#;UIX04Ag_\]=<:_)5Rgk&U&'%7uIiWIT99^NmG-%c,T)+&7a&A[@h%AJ0%(hi3c?(681PI"a?Xm[\U!6](TNI!0*No7HpGZ@-Q>YoOI3c?89oc>-GN3.DiXc'[\aZ5R'"YY(CdMlo(J)OXYHO]]9L45<Ql+qai%r\Af(7rP>Ia$]#5.gpaY;"E$/A]8G4?-1X,jLR5<nF1O8GQ3'd7:tTHE,i^Ym[e8J5kUY;4ZGIXgm%eSamE41f&`3^YDs'Hq/^G-%^84u(>IT7]B$b=0@_\@lg@=IedG]B1*088%B\db,-;#!`mS]=7ZH<+6hS5BRGF,@cbJe/e9^d"7UloZE\:iN.DL=#Cs'(s,rlRuY%='s[%/Bb7uBj/Gn.WW:'Q^'/_;Wfm\:E$Z9L5p+.FPJAU*Rh<0Wuif!WRspC'Aa_!cGMtZ*M&LaoQG<)0&o&\/NM-eA2Iu[q7a?G%rp6-n##5>W8(ks>gH/rp&j6]Do.n^&+3op;lm>.B++=1ZhX71Hh:P0XG^bHao`@Q]^%O#74++>`EnYHn-e6eceaf>FjSuH0X-Ua%%475(T(9P4Ba/'/$iVC^8Lj?X$l%8a-;mC-J4YZJ)I8Teo.Y#iBL@J)HoRS*6E)DPkW($#Ikd'hoJ1bStHe.o#;1$T\?8n>0Fk>EY%oVL0"+#1O/.D1'^>\8n1QFr$I$7Y-D:ut<>n"26+=8m5EDXSi8WT)VJkC@\`S_`jP?SuEbh<!UPR@qi4;#PROjS2d%1`Sf:,O2km%C+^u#B_;+5:q1VB_kb]C(+rY7e[qlW75'PE^00mm+-fTtRtg)--0B<K`+LP?SuHfhl@m/E?[OtB\eF%jRMCS%\n(%umA9;GHRTBs%dR@gE1Gm!6;`">j9/dZ'Bg:AnQY^lYgpUOukWeCjNe[]Qk"Si]HGTAh=tkEC3o9jEIX#;%guVc%SnVWEBA0oa=k8YGoU4j6kob/E%@Ge*:.NlkE`bXts[Zm-H"cM5sp>3?T;=:=QV$^Rg*8[3X*'TcfUjhjdHuCK*BD@?m\3@0Z0Re?8iHJ@@&A=m$E.7EXp*ZK>l%::q%^PV:2^JB>thL>Lj#<1Ft[m.M(pA9nH"9#?Z^]!0J@))KRrl2]t0>.>Hl)bI;FrrmCps"0#Rt'qSIIhg_D>!Vkma[BU\/%:-h&Fsa%r;,98\))B,pJ688``l+9ko9(Rrl9H`n\_K5e+J4dh=4_>,lI3@XuX4GkO600+929Mmo-jP[sqcbk04F&X'95Ghu7HTNurcGaW(!E%gCKllh)ItJVu6k0s7sL'5>30n"7^AWpT4t_J,AbCDZ0P*l@/?hs1SG-s5W*b?i1E>rJ,=jk3ZAC-b%p0n':qdh#+gcWb_Xt4pa1B%^A-pZmH_NtQQ,Mmj(lCmk0LD+o6[tADcbd62W15+hsMSI$Fu54>Ag(?+!,l6?1#B%V;(s65>6!3?b;LlBD'l?7r:HnmFg7/s6,GL%`KTTJ1GEZ1](/nsj*P].lj4d$pKrFA!JZ*eA@6aPjNjlFhn+6Uh2(g/QG^_-IcUMIs7CR!S[F`3qrlVO\^E!HNN0+]J)#9Y;l("*%J%P7E+4jTjq5nFNIW`<<Z`__,Dk4Q:\,+[Q^4-"W0:Ke^f2ilorTW_D(3_rH=6]#:n*aT]c!.r2j6p7;Q+'65\e!Wo^YM_#rT5cf%pE"Js.fJM5m_^\rIBfs'^+[7rnG(hKmd,@FDd?`+7rKI9Com9\J(TUMD&V97<e"CSJ"TE;ot,6"X2"F>GUo?a])OH*9kO(S?iF@^%^&.,&O6/9JfmL0QQ29CnHuM/KHK?`Yp=n-,?U)'@eP7WCpUg(Jm\:_:/,e5q00e>rBli=nrEjWB=5Fiq]3>1,NGGSYGMbSe?g6D/%Dcjc<8l'p7qeuDD9!>lrHh$X6?f,%9['$U>PeMSC\*k?=n*)JhS>S=G=eC,NY#>#QVdIO1V:0J?fD<b$;OcP#;!Bpr\IXb8r,R4^%+8tbS^Y2gSrb>DH?]-J30A<Tg%IhEQ])K_#A#]+o?_;^*(uAV)48JRL]u.bbRn9FuIs7"Rq3tmGT4>LJC6$>_h>-.'Dme#3Y$W4B%Zq4J+IpQJrr:;MLF7;USWg$7OY4e&dS@(H9/D@LshUu7b]Wom\\,L[NcA"sko!Z0Fo?Vklf(\jdn@+r!5CEKj[?Z4:akeBa/%tsc%rT2p,Pu92;m0E&ppU>$gV*!;dr,VPDhn6G,d]`]E]9A5>IXQA7h(dg.C]!srqr@ADDf)HFp=k)p^NR#u[aICToB"k!Q#\H[m6?'i%jj't;Q2\17hp29$pA.BGs(_#E]5N,scItnjp:!87fC-jVI6CcJJ+_3d8j@BH^V06TqFX!Mb5^HsVdFh7/+%8[Hn)6^^](*2qB0#^%D47rGhqS]>l22?q*t?PlG?8EcgJOg99IdaI];o#iqWHaRs69R[C4E]2p%@]rO1om0.t,kEAlS#!&-)2.\]CgUhtU!%a2:&aqt%RM%7$WYjeb>oQ<Bn7tbJWi+h7h>)e+!Fq^AX*EWV$.i\)/'&RNDKTpME'W_Csg&rcEAr0'S%'5Q;*kHXhAef5LWIGMdfGEF7rPhAB8h%7Wn%BA$,CZ0=F>5rQ!=SDEj7Uhu@G(LMjA;JG\Zp+-2KX<p`>S]A)FcX4)\[WcnsqD#!DNYMKPs#KQ.Z9=J$9er+:X:WrE<a(q`)%0mpF=iO@_Bs7Y;lc)P6r(4Cd^LBKoR-?6dK+HV,PW?R3$$4$s4!aZG=G5^+?IX5cm`ggP!LbuGQ/aJoKVnW,3/K&EFLeEdMr>rGm%NJh0!d+1r-G]:dk?1CZMbc.2M5PWUlh>&`Ee9][34o7&Ve@KEZ48*Mo[r/?NG]:QJZ2a?bK7<dOI'rkBm/a?HSMOW$o?OU<.p))L%*V8rhcV>MQlY,]-qdX9oHL[AJo@L8&>'iGUbC"C*fVN<$Q3T!hpPJ_.`VC#TC>C]'Su>^$CAlq8Rr7Sq>8Jg`h/2cASc%uM?iORV%hKs5(JCa1qH2,RDk=2RYZ1"`=FS>led''X?a6@S,T_7go]6!,`GX1SY;mu\`5!*`&T"\^<^&.$U6*4MI:VT$kaT8O@^Y-q?\t9L<%Z"L!%rEha:GPpe%kh!"&\G5d6\CLP'qq-7n5P^hOm_-fADJcPDqt'*XSQf/JC\s:h\[Sc&>n!A'12C01@&KTE%<_&ZjZfanL3%RS%PHN%%NaH_6f]@GF`%V%lR<J)^_u/Bgn,DIdNGl$!n]d=,DpMZQ>Jnntf5A*&=6+:lI<+Gi]3g&:oiCqJo<U;\qXA)[ETc$C_b]."%Fnq(3YP2QuB5]W[&t5RdZQFT'p@6G-Ze*Nor9NLE>9A?2D`i@GipP,g/m*2RMs%k3fRN^POMJPrkM>0&c\.OSr,M_Q:X?5:E"E!H%kraF,,LcGTV6J##47#rGk?[JHnsKC+>_q>qru`]TMK$c6r`T6L]m&_d+7d`.kOkGXs*T9Us5d$]]_KCha/?]LeGT+*b)7blll?ag%(I+H$o:5XL#<$P?5!:]?g-,7Rop^$oL:d04WaTPsnD_lWWs1@q3.KrJT@RBFr&!SO5MA3uA:f;[FpA!1dE_`kiV^@Ip\,-rG!VMl%%<a&t]`%86HRnJDr6qo`d4CkQ3k=PQbHhP%qR_Hqs5j'A`SuO`Vu1C%+o>sirHr>?lFd,9mbdkms3trRre'[@H%(*1%`SC9B=CWB%q!>&JO;bhsa*)Yf]t[a<YBTUhk4FL>goIVRhDeS45J$E:q<#Vc+FcBJ/*Qnkd*S]Z[TTa48,ahc[\eN<p;4SBgW`L<FS=Ci^$s=>%(XLt:i(^e12gg'35C@WH:Y+b8?QEpHI/c9Pp%<6MIpW*GgM_RD':M#]f<^gm&pubc)L)/2V&f"'[n>oQqLaj2*eEYS?c;YFYO9!q%?[mLu#\2Y42blS_h#>L1M!,sr#EKs3Ofm[Gq4FSQ2u!*tT&FUs::eJqh._<;E;JEeds)qDfm%u@i7TcaL2ck+2tq2u/l-,$q;L(<%].9)rSSPEP?C\QPHiM,L)Oom?*]]kU:4XSUihPtFroYR+k72bQ(XSfPlf70W7iu'a'E>5I)`UmumK_Xgp0ZFDr4G3H%t-fooD7`m%4C@H(rUAtB=3('=hYI$FpMN)VJ)sms^%O(1Y?WcR`054a]_t"L]\u%)X+>XiDQ*cEdU,1bGJh)dbo`M<C;[W+3M"t(lhZ7'cgP.h%kLj3$Fru0TkMH(H^\I113U!m"YMS%Mes^J^]4#lsrntWLYG1Q8o]homh[<dSp2k0jqr-Td%-9WI?"AfohY5=[l%n6rX\Ij4bHndX%fBtd7(&$bZSI7Y(^\t<";.%'qk1%\K,YcK/m^sp?qraqBPAa(&nar8g>.GD$9Ad5(XZ$0*q8G:#0"6#.P?4R75JW+O^C,2fh=fD'%1gK(\DOm<bY;DZ`mb^lJHhm'j5LsXOR4PnjK"pU.mTS!0Va;?uRp0)EGCOj_opNGci9lBf0"JW-9RQ[c2W@XskD\$l84"7K^&St6%&)@2Ef*E`&rRGMkrFkqqrp@hta2d;6+"Kb)M_*F4f3TKtoqoEFrh`+#o=f-kGR%LAb;7DuE27jU99<RegP.(]D#/e<JCYMnM<aH(%YAQHYcVFIcrQUg)qsQ0)H>bEbqCR1dYhT-QC"UpQAAt"B7_AG(BeFc(f@/K(W1$&TjkU10PGKUIm*bja6BHEJ6;Y3Ci#aU)e:L8=%eLoj"2j[hFO2"nCnWe9k$l<]rSN_*P$]DappcWitosG2OiKOo-$NiFSc+egmTDW]+rUo:BZZ;q8`YH<RgK=:/?L"'\qVciqj#!%7%1KV:Ro0g\!lqM3H3R?0Mk-.c+IeRT[mjed@c?f$WT3muoQgXeU"UX=BH<_CQG]ib%%.lLtmVaZ#B;_VT8ai1jG><W?o/hCgFRg5[%;g\IOkI7lRiViqeo/B=r`S7_!"@o(2FN)QQFRnFrhq!-,U<i4JlVV02g:4oT*8\4@g&,sS]/T^<LSp%fG:pQ.k;5/Acj&+'K/Xko%UYV?M?f,"ia_]`Sg/%\fNgh,-)o3cUD$23hc>K(fr-u-emuc/.EP!#oXu^eemsp^Fks0CPY)=7V?U"'7&Ark3@6Q`a*lDf$L8,T.%1#L\PVnikQ0,n3T%es,&+a:`F$]>L:`?$Y1J%k.<:OU!r*O)imre)Z&k&5-D94(B6qqiueUG6rXFMK0phESCp3cjW`=&2niqK;C.%WdM/sd0nBA%p'0Wf0')pq$"H6(E21,a3K04*um@Lc9F:3G(8]+Z#a9B5.;:n(@-D8e9>QBZ#btuh)ffJO5K\lSbqd1([D/`C@-1o%4feU3B*[kmf#`ETZP<cdfN#9L+/-"uQ2KquG%uG3roH_SGOf*JZ-u2cMaLQ^Fo0I<WOTR8<kk%][n3?mm+Ia$4X'@mO!Yb3ZX:1:%Y&p8UX*aUHOc!IBOuh4%Xa'k?dh:Q0!iphK[Rm\IQVRQl:[uGA@R/.M<3q'pr8ZZ`_-U"S?FJq,2`f=Z_j_HAQD`(i;n_)cl1%B5%4?[V]Dc_hcV_]W'FQ@LiB3/jAVfO`mgnVM[;a_=j2>k2#2BsckcSI%rcMi"]eC1O`.m8?!629Y4==MCbb7`Y/l]m:e=&a[%%-ggs%V51I65M$o<I;p#QqrP@[hqpY\hf#7,\^0Ip]4Uf`?\0j$jb9SdJ+taamE=)Jrg.i^Xo-L,(Z3&DT+qt.bt6G?:7i%.QbGXJ?SQd$%_^cfKW"H0I,ioi+7W<D>J)4HZL$nT8Rhs\IDOp]LFo1:WV0,$mI!bb/o8aqV-nh`Pp",%m[nbe)nE`'_SZhFLP24$j*aNJmj8L8f%&_biFY/c$Z=%)ZIq52;a\I5;7m=jd)Hn.?EI<\rgI62.`h`;2F2uK"LrE%>uDLCq75ne0"52IXn4BNJI*gkK-fsqme*rWaKYm5a7%FT(<XAup7Q9:Y/8+<A^UEpE>QI\M"Q[4Ps-4F&omJGFCbIt:%:.0"Ag>KF_nmHVIA*;A-EJA6fWBXTml05pjZc2HJaB?TP/2fF*;%9kjIYgXjh8J,4Vg\Su,XGQ>1\Nmi9?P&B:qQgUKo,B`&DX/@es"lnd[I._gg4o+.9`3[=[2:#I2RJ3YsiatE5J"Ge:1-`MI#QK'm%V/(t0G3.AoAoHJ\3S.dY+f^GB?hjHRgDqThT?k3#QC=R5n\L2\F:>5Md=r1Hq>=1QTWA)Y_d3(1(2e@WT3h'HLQ!DW&&!ATm/!nr%V"2!#g-e_&F*aemmKRSc<3rQ7b=@&senG)YpJ6DO53'cmT.X1;r=e+'AYiutSR%UcCj_3.lGSqqf0?h@S*4Z1I:9'_b=l8JSbg(d%\.Q*qWM9=Fs1Q(a@[n_[6l3%BY\iFj,XuS*rUni^2r?`Irr5K*rG,87>sQsrC27M88tYQ94+?;.gP_\/\a\dg%rTsB?J`Edm1oYW%L91okf#hm=+\5E3RYqgYL`f"*@4k1M,D(Sp$Kh'YImT6YYAB(/s+hcu:Vhc6nW*qg>d:gfEE#55e$-KpnWu"a>1igk4WY_0aJjgm%nILNg=>:C1raG=_DC>c%s02:&OrXHunNkJ"1nO`Mpi&X9.bpWqD80fo(FQrmqhK8&>lX-3m4X3C<B+mBDYR4SbCnCrc][h`_1$G&%'3ZX+:69Dn!+G>(NNlUCs,#;7CZBl-*/%Or-fE5!9><-ij]C`$0gEC%lArCDn]LY85@8__gAJGs*XG"*k0505jC[iTna?;3/_t3r%nEA$hrU-Ee*;77"\Xjg\eapp[eMZjUdNhn!^:CQcFeBbiK%9qdB'!\h9/eB"6Wr&3HcL?cp%.(3'a`sDfsPqNHm0Zg4:`=O1gffD%HP\"^"$EYqSn[YkR5WYZU/)l%4Fa#.C$ASp1(7Oc9i""f0u1EGZhM2gSOY`SH#r5e05HcdH%%k^=IB"^L<m&Q3>qbPSF(_/++?*5%i8a:Pm4@8Pi_Pp05!F&JDbU/ucZfBFB/%:2Ba7ut/8Q6'[*cjpGAj15opWP&&o!$`Sbq3Y8gG@*mabP=f?WZ"(KQ$LI6%&P*tSnB%7TP*uVfj+4'S2P"r.iDTIE>=d@Df(B-gl@8Zl_J0Zh.L548!o2$\("BYr"7HZ\I@%fG74>!W2HNnXIiW9XaH_cA=Wdh4sWiY3fXS%FKTK"92k#AUY5.S+,b-BNQ<'$ZrCe#i*qdXZ1HkY6SIi-3sU_6+)Mqt2o*<52WDkdisAH7YdWL4Zk4C.o@jlT)LpATI<*NG)o\L\%q#6>(dC4/lUW7<P`G%G7s,O87s(iT<*O$J<L(2l:rkK9'+@JLZ5(I%-4[/mej>iF-/:D0?Ilhg]O%2:ADiV"bom2)\c)o=[n'@-j%^L+VEAm8_^5.l#.)4[WAl3#)G>%cRMR<g$o<*Q"]mN"B=m=*DUNGGa>XJG\s4&$3)HYI3TGlID/iPAgUL6#s@kE?R_^Xk`2pFb9_%;s;$WF"1IcT7kH\<bRZ7Xd.OiET9f?roZqYSm1Kg2a?$Vn0[!QfD`=mZdXZ^I\pS0aN4uUk%9=jiRI_X2U>-hH@K[Ss3/]/0oI$`%I-'.p_7fU%hW:`18HAUPLNCT7nt)6U#Fea'hCnIRM_))=]D7d^+BUSLP&pAWaos8PIIr5E,^!._04n7E-Z<ediqDeC5gD7abjCJ;%:Y5/EBA1%CHZ+ZNl2KP33%qc0(bf2Fs78q*rUrDA<cjF1GFC^<@d!@tKCpsA>PZFErF"&8^=_CGr3bP-#L=K_rc.\1FRtE+YKAq<%,7\-.DJ3ZU1XoT7\UWeZhtK+qDsQKAom#)iHVAW:]t\pem^jS=YkqAuo_5Cn?i?6%4Oma7m`_FA<4.3oV5/M+f*^-\anbp"h-1Q9%'+p"Dj8sgW7h#fGa^.36s7PIJ2`-D#dD%`;s)m^[^BNm%5)j^_YI:]3?c7+oRRQ8uh&U`am4(rqr5uNo?B3h/V)Fd/:Y#PU:ZkK>%QS63JRp&<<4N1RnhRk_6M&r2%Ic8DfGMdo?l[*ho?G$l!klO@=]([MgF/Jt'[,dEtf2o4)([&1#p:C]3HY>"Db$"2S\3E!Ss"tbi%gD?H2S"`%.UIbu&hg0GDa-2"%IHBIDpVPHVn!SBmL.1&I?_2#+><ea-\&i,0H/JDrq))0cs33S6pSH>RrnTW[ekiFCGO%(Fqn6&%%n()46.g)p9DfhGKs7c*8#;(r/`im]HP%[X_`)GBgGVa](Hgf(+4b'ea$!n]oa0S4hes1(gU\l@rYBs'S:(b*T:N,_#\n/=RhUph'%9lC84-f4gsqY'g@qLciZ"&07`Ns0rU.`!^SI#Mt4b5HhL5Fufl[8i1``uFj+(]S9s_OEH%)9.0J5<b50pdP2STA/qCcaLT8BXXOA%Lj-:t.6H4K>XN\f]Bpa@G-tih-q4lZ?P?>#GC]IQC6.%HN3DRp\E&M:`[,)G8_ZX8R/mlL\;!P:#]C%^\_=c+?UpN3_N0m4nUM\d%@u8:;NX,'_1Ypm`OWTG]A&pa[NVkgVC[8>9X/8i(Rs]A5g>H1fZ"urp[t[`?Mr&(#&4-@b^t#[$28GFsRo3J>s(PF/9.Uk-X!UT:%Z)n%ZO9QN=AqO?BCl"df7Q4G0^"$<bh=P"q!V<M>oC%%G(^'='>q!g'DFWd)Th/2V64YA%lN\7qj@"Y@>=DN/2)Qg55c>%j>=-rU%WuhXg1=1^pkROnr&37FW,Zi#n8K_jNKQ=jf8!Da.B6WS^_u.#eGDj-"fiHfjFaErA[hC:jhrLKV81umA$D)s&=t:T:aO&>>*;nEA%=CFFEaQ=4HE(#5UGbt]OLGL.\iHn<32J"(KXP<K[,`*4s*P)lBgQCq9@r`>#A%dtWDLM&+s/r4iY;-gT!Z*TF(pSnEn`\]>j%;32%Z)3UD"HjGOPF#E\0<FY60;"C*#i=O1=(1b;'SQ/P%24\A^c4=]1,phf!T0,]#%=Us,uk&#O5:Q/]ockt51lk8K-,j]nJ,aK-K$E2%@CPq8UQoDR^2O?gZrPeGn9$?]j>DKG&7PmJEcV)dD&(4!\0PgGf!uj,^Erf--RL"&LjR)95q`C!:#r_r-7[V8ctt^rRt6jZ[^hQP%$6nO'4\S@i1c_62.uS=%XtmP'@_`@[NYo<:$8=?\()%jMR0_Ia,/?jU-s:_'q`hG(q)pGe-=(qi%@96c0`b-C(KG/'$S>e+?mQY[%C%j;&cB=fqie;LJ#k=`:JL&oH6Em-XHN_%*hkMpKcAGr%Eb4B("><oJ/RS.mW3V'>]gc3dodYHS4V1<V6+a<X@*iq/!^"5S!:W0$%d9/Ja1?$YVS2<6/I5ZqpL1S8o,lSYA$3XC`#U)msB!OaDMsD"O*3o:\$5F1P*H!Mjp9Kc@KG61sOKnRG.-Hg8D)8<B/J/I3#_^Ji%%_=@b?&gh2l:EG@.G['/;/DpW5>D_C4K(6rG`[_o,=TteQS[VmD`)e3,!U`oK3i(^[THr>3^Y&QNa@IW23oTEmJ)[bVs=6dLOC9]%i/aGsPS5+;1Q9k98>DC'MQ:T<]Q>V?=`^d["J)<l/lUFr;1opW[ZXd+(r-I^i>X@oTb4>YDKR51-aI5!Xlk*:9LqG[N#W2q#GH8,%Km/+kA;X"CE]FgXCe7##l^$SjUMPjkUPk.&g@#^rJo"Ibp>X2lL&HgDVa$Kb$\Y#t4_r3^KmCg0!MTULa&#f"Z,t#PMiLLI%V(\G%>9[8F_QFl%:p+.9C@X]R8NB6oPd!ii1.\K4P\ro"&8DOd:Vkoq.GG+A9r+%&4Mpc8#TJA%5f.QG[_h*HeqP(tF_g+-7*'KNKG=^M%gQth`c4V>BaB=uVJ"3(GO6+YD\o,s?<Jf9VM+%0%a4*ei[BXV7:#mZ&]qdP@-\JgDD,i?8%[35bgo4=7](??`&N(\#NihlHO<;Y`%>?que,o'%ZNXaBh2R*rV0b[!Er=AmpG9U),-N/poEr8BDQu59W!Sl;qOH-/!@F9D;<\-_Ys3(<p(_%%Qns4>YZDU*8R0XBc%7c:G%K<pg$ARS-UR(k2KhVZsWg!crCOs\sgg2GtJO'-^\$sS0cKms@p0!/gAQZ5pbbIDEiaOhjkKiRsLe)/^4)o[VHZd!u4\Z>8.'&"q;%e80eM\SQl6!<jf-JettN(Tie&B.#tM,g(XQJ:_@66*;<'K4oos7bt5C#?diR@4FNAmXYrSgr?AC'a0Rr9oU-(Eu`7HMVr)lBhD<\%i2;YOm"?f%\7EQAIuO7HLlc?ba`*G2,a0<jITZl392gM0fY1=UkPacu3Y?lC2_Y`^7Z"s4WQ@/EM;2Kl&QZ_R(IhVO.&db$GHl%r%M]Vb!TO+o3ndXW4>I_-5:rm21]q!r-I`?Zg132]7WdA)H^h4ce,k`E+&S<9fKDSmbZAt_&0+<nt">rZOm,UME^qs+i8qeB<!fYUS%i#YsY+nH;)86`U6EA<1h"%5luLP=+Z4UJu"+Zb2@1D.9i"'7p(>Tb'*/G,;h@pEW&13K;9JorT*'k>NQZB#o(?7s4\nZHDK,4N\P%Z2J$66VPUIqbW.J5=DoPQmc<pR-:4JaC4#o,M*\0"M*Ai>TjY7j>?@&/hu:C\oh?#!nsE5eYp"Q7,TT.e>uDF/l.T_YoIdU=,?Xc%k,:?DN!tLYX=*b4/oiUpor265L:p!RnNc<#QH^#Er=(h;jIu[&2\H18#Db&CYFTVnJuH>1+MpJ%OX3onk*esoh[NQj9D&Y_JCjB!%*pF$B-r_cnf`eSi&S2rb'HRUCSnu0s#D/%[PT:Bi#a.WcQV:T(bSf[Q\a;U,IpX/*2E>*hI3Jf,!"eBp.8f.cd$Yl%h[n9;E1aZ6%Dl#DO.7$b'OB5kSQh<aZ_S@s1<[Qug:_iZDO[?J^Tb]D]&-EYh+U4(cd77qU/LM:=]BU,fjIBm;!I4gh:i\?^"!L_aA/MsdP?q<7%=-+omI[1.ji[5(pD1X'u"kbMa&_Q^%4p]!P>KZmg83ji*[@jNp6Nm3@V!P`=2l/>==/rosr/N3O\t$it+BrC.Y,e9UNefqAb/qSt%>r-U0b;.&A6$>Ti]22CB57OVV(":5l0\CGS7&=Yr<E(2XZ[kGjC=f^]2'k.G:k5J9SL@qJ+Q?63M<`U&MS9\gV1Lu;h\EtX.jOTj%:3VZ&<^GggaO^EJOI-b+pCe+D@#E#NFdY$V:pr/MeZ0h\6sU?7o4EYf;OTcs`uMiC2ReBkjrt2N""&Fcp6;"f.[1Jk0h?0bMF!Ku%AZ)ab'h67aS+\L`nNMi1o/&HJ#,-2F=>%2O<omte7Bguu[4QSRMT2HtYAfd5nJ-pEBh:`]Lsk5IAQhsY9PIiH7([VR4nPJ3US"Mc%MR`"]`Y,:O&Jrq+25[*PLRZ'Ta=S(Qd1tA)+<+3A#=jo+b;B[&+qVCOE*im7Kq6i_W1$gV3,i"T!E'h<HA!"l2lg4ZU1Fo:V#^\?%#*ok=j!7,NkKqM7RP(?C51),06Nq\M'<uT"WssS?ZCGsGn@)hccjNb^QUjktGQ]LPKT2WrK7]+gKJg+e<Gj(D]hGBiG@]*7dg./g%><=MK$%$d,;PBCgf5qC`Q'$tp&JW#h=>3c5,@+=^irt,)3(lV^V1.K1dkSO7*E*^h#[u'qLb_i?>[!qJ-]::kDh%#g\0f1]5b!MT%@\,c9)_^-p:si/m)C@_e`)'l`^gtY7A66\7+B>ET=>ahc[/X"Sc*WL^P6r>P89&,I+-V2t%?BK'?+br!htpV:fB,Eqs3CP=&s0%c%5(L>&N[>,\b:,@mbb)ECKR$Wi_-OAQAiham02.UIKsllX?aJ/'P21a^TloX<UN''K@F&NZ_LZp.DPf>I_e.GT,GP4fDKub=gR;PN%elf7X5Ji0>qto_[\<[CMl^nKYf71&&KJP.NZ>,Zj_6'2jSLmU6G+^r&Q;#[<Ea,uRG!Z*9]+f7WkU0<':'6>U%ZcJ)-EH5\4)G=4%!5b8^WZ/=%Ql%f2ZrnV/G$>r#'3`pnC7@0J/XFCIRfiN7N\-K^\GC(>5!QU7XX',4.:^mRH6#bUT,LdA"RA5ud_KN18m[Q:dL+Oe%+`6P+TFFB5ol-^6\Ke3TFIsQ].gcq%&tiO(8PXE\(mE`C8j[36:h8Uf0f43-BSC(]j]n_7D;L\0M;=D#^u1Ai<%F-jRS%7#(9+BP%Fr#hBg'Wq/86g1jXA=M)"hQ0WYuN'"Bt)_uen!%V1=<b$&$K#V=1_d9T.F`-m=07dfXP7$!(8gVMW_3tA[trbQ6R)E+,9&ibcE\4%Zm$CgP0FrZkLGM(gnCcIK:fRoU2b=ifHM88bB.PgG$>AHUrBe/\Aql4CBbo_BKb2bKM,7SZYcO$U^$3WKi#6B=)q2[>5'R_^"aIl%#bo_VM(.Djju(P&[&NXsLjju+XP9RI)V5lradBA)&T*/F9s2!+'ZGI=BD-U8#,ij6p3)gCEQ0m3THuqBBdWo*H-IS<jY<k#V)>Fe%/N."M;eRd6.[?mDrb._)$uK3I38-f3S'L501[[F/j%l3_E88inU+N]8e+sX7:6ekBB"XO,*DD<lGu'm&*9XUSL@qoA3Y3>S<htb@%(Em2O$-b0-YK,sA[gp,'mHYc/9$43paYj`P_X+`QpU9KERj!9a&$-GDYI1gAo5%MQm"t5;)RTj]WQb-jgDG!,G0OLI$qS!9hb/9r%:@#[(C_cq5/I]S2Rf/]#2QukiOUMd4E9?T0(\ti1KIj.Y,A\P^'7<W3:;lhZ4PAR<3134+JdlDX'N$M>%?VL.Cdu=hjWTKmj!4KE%QNZ3(r`f@J^IYRtd8-OG4P9?j0>J&Bo*Z7?76[UW6ns_iCLNXU95`:p%7B%H?u0d!#*%I.PknsG54h,]m1-!q>3,BQY/fl@"1P-Y%@YM[n(q&<=;/%NK9f65<.f6-HIeX`+5^nXrd3uE=F)?gHWb]($pb4BG&F#783a8U(n"@OJBNH%Hcrd,#<ioQ"XJFRg"`&r+13SPZ%WPoFq5`74:llHri*0)4\_o/P/>:AGH(M,rK@g]o_6@GFuR"Y`qaOR7S(bAMqf'4.V=q6B;=V245JB5Q$@hIQi?3FJ%'tOl09Q:L%%M"DAXU<F$,$md'O;2@Ub-\[Kf4p)I,?d4hA?q7A=NQ<Fr!etM6/6-^=IXu$oE>M:cR5-Hc_cTn<JDF-<')fPkPCZfC70!X(65Nu'%Q.K/(RD^XepK%q[8])2SaXPX@TKc3=a%kmCJlcBE%?6:a:cAsp]uqOaTVS1;gnUpB)A%]JZm_`7)9=(mj1"nn!$KeS-LA>+FsABS%SI!4^gW)(3D3,f`)%S,:@0]daje?Hh(o.na_cp[)[fN/&5QE7dl/]^m+=@sP?q'S;=CM6sr%#DIS)b):-40PTQ15+SPHKX7`MtF*%T`eaqi"l6@TsZL7@o@42O/ErKfCn2$&R;tI#GG2FX4ON11m;TZdk2_In<5E<fe0bEgpD2MKsGiLDkVG'@`)M0?'VWab#p-smS(Jj%P3nkJBol>J$a8WB,eS3#X.a;b]-1TE?"jAoHWa_*BSXEEP/=7\o30$W$L2l">K\/;=@-7u]We*4jB&^kQ,UF*,@%K(X_-,IVs.pm%8e#79K5kQ&o*VCW?Hb)Jf!V4\0C)k$QhCE7n*7r6Fi,0Fe/A+N&;\\NIE9]Vg;!j+`3d)'!iNe=Y9L&4di&uU]TiVT[ON7Y:7;UH%!:0<Ng,mbMiHl$7l0k\A@GQ'r.q<6cI\fH*26YO5[L+*[8[W5<.gk!QRVV_<h>3D`XM%E`)qn>6@+1Q<fXM\$gRqum>lV=F0Tdbe%K1HPf[@Co:/LR"MT<5.]V&d1:bG5=5QZ^iZD"^I7f:SMr,Ad'bA$Mo'C;6LDQ8R?<,G*X,ct_m*-Au"G/f#IcY#EokS8M:tY)'Jb%Wm.jZ#0!`F'fJjgY+>Ht8H=3^5A_b$k5>W_!Fq_0(-EkE%gk;AFIKVpQ*Q7T's6KaqPQ31nulK!Nmg$OZ[!r0&f/0TZTPQYm'1uP%n:NX.?G1V7g-SrC`FrKoU!P]]mYgp"<YL_Ki)XSI>,U>cc)nIAN?W$22+q1mLG[PH9i#C_])rB[7s!,]S)%6Y.XApN`qdiu'K7Y+%q14sCiSoMd406K7DVW^\NC@$[U()kK'dMTUO>bG9@5])'.X\8L%b>*-C7Z$j`]CDN:$EU$^p]Y*F*$qp6?_4hR?)U@:cE&VQRL)_%]5H)s^iASiCHj151s`7Z3/!J*\_4ihDISd_$N6[Bm`Clb5lkuck@qV_ClB<7pR2c"0l>e%CU9Qa;OUf+dY:0mXWack-"IA7Y#14j%pbhf#4C[K>7_@^4('[;bIcB1BDRF3,h3V$dhoS^pT2;*C>1V>.NR*iI*$.&dR,QAB"qkH6Jld@O1VNsX^!Yb?8(Wr46kN#$@00qT%%E)aG8/)M@AmeOqEq-]k!3K?=20ma6eEJNR(dap]Wl)VLQnSSSiGmNi@i.N[(lW!0`sBp-nlpu>W&$i[8>-M_$B%R\#E&lFE-<,l%:obZH('+-G(o,egp=R5!=HNXm6]Te%rBe(aA-EPG2PMT\+!WXA$Od]^#nCVmU15:>4R.\(iu"Im0cC03%DPRg?oWKnE.pNBNCJ;:%JMio&8!g,eW5?f9n5SX`M`%_&2=#od9d8>4JmQth30>d[;+5/]MdJ0c_TfJYN2h"lc8AU`33BG*An74CV93A41KfTMK]K_#i^bN,%k\S.#KZjK0)E`SBMeusdAidN!j3S:19E:<<Yl?TsQh_rO8e%Dus3q#4]$Tgm3\[9mJDd>"PY3"N*Aqerd1+qk!5*UZ5bnWcSQ@p-%?>(oK9N$g'./H.?m0"N%Mq$CkJ`Prj6nDFmHMf9mBi47cFe9l)l'IXRNYtLU>6#'gTMW!3.W;O5l5i8)_&gb`cZC&u&681,dOT/[%"Zg0^m%#?M0e#%),KCB*!q$o`of)9"d(q=?`9D"6\V?=S`nGT0(^2*#A+ViT-kZBtpLiJLHXX^5J1$NRWe?j*&gQ!UHVlj<,;\&9%AlMlUZi^o%'G.cfM:ktk$TUqTr<pidfX%Im@40!(WuN`8":nb;[S:@5/-[UK7H9SdM+r_*[t>O]0#OWX>jDfE']IN%m#m2&7$%C2%mm`9JSQujF>Tpm.>AT?$66eNZKMOHa"/Tj(!f#,;[0-LRI5OYD")sG?d>p">*N$2bSh`X!gK6LqY%nZLT4'lO1P.;akGMRmRB_lq%DJ$b>V%Q'."_QKP&8=//B'p8+dGT%"-TA9a&AbS+#MlOc.RVSfL9/9jddjpaQ:cfc+b9We9U-3[91pQU4lC`UU^'dne5FCS,"u!H%EuAC0#U,eMV%QM0ed,hCJ:(b(A2l7fign7QkFQpL.$c$qEqD])<71gP9;SeraG:\.X(nrkQqoS=10O\q6k$&g19.#\_<3k2K#ei-%*3iY;Tob2JJ8o"LL^7"=ASN"(;A^(En`W<G6=M0t,m&;41$%73T1b6])%nQPcs@4eaam"73fp9@]o_7SOS*E*b>]&ckTcfo2$c/b%#76da6aKn[/I/[XHU.^9`1:4%1L3I-?!>K1+bn#TpO6l,;eU?uVSr^k$NM?eHK\(i7!K`S2;*s_Qc($-752$1"4JP6$OK5p3k'LH%L$95!CeOgGgTj+^:kUNWD6tP/#o\dO7&dY#.O$<n_2Pa+qW9&11r43(dQs)"!M^^*_3.:G#Wi7fV/%"f8Fkrh@!O0X,]dNh!VY$\%CSGH8/cd"=3R\_u'ko:*",M`Hae?r9'T=VBVU%`mfE0K6$fr/C$o&'a6\+#IRW"[8Qa](!D+Q<N-t?YmI<K@_N9c[EoJX0L2TH6$%Q,orpFd:G9>YGU-"q?^FG])Tu[%"Ug[qA%IT'!p9e+-p@P7j,KaENP32qY-52D2C4N(T!L3?&=(lpAV0+cA#U8e<;G(@\%AhP-Rq%TG)F3lJTQSR`be!.RH[a3Xpuidk2*NB\EU5aKjL,7=A(t&qLE^e1-;1;D9>=YdSWtbJD/3AOT<[@QQ?CFHqM'R/S'Sd#\PJ?Q'!I%?P'%F5bF3E-Gd&7'nMarZm[;/DE8dpg*hHSdg.eL!!6;?&nnADrL_WNC>?.cmj?"?h1U$@TPQ@J3S)bX.(fn*[9R1mfQO'O:n)_$%qSkII;l28FXPYK!kp-_o2[l)b/HL]3;FD9@GMb?=Xb_)YVB7<k1r131\h_N@h;fG^/+eogZ`mJGA0nlYNM`5Bi!GU2+rIsG#j,h$%!Tt..8X'5"?IE$s;3Np1j@rt-#]bQpmupIZrf")Wi-Q1HJ.O8XQT!TOA(a$e8a@;1.j-/BBSKTCjIkJQ*<sAF4-;+0H#A0h,Gs,G%3!iZL>(m0aaDK5`!Rh/Z-ES91lZPc)_1!l6E9D_mTQ!]@;mu^I99,m<Gs(X[OG)U6Ku*ndW6=hS0/9af,-p.l7s'=Kr2Zs'`g%mJ%$5.E0ec-!\,V3Prh%"@.gu^M1FLu?jA.Ui"opQ_k?4dJ)^.TXDQp"p>dQg%fT.O:idJ23VrO0q'Bc>DP8e^X:VOBbKJps8MSg0XC%\D+;pe@,RW@JTZ2p"u;oRYnmb,b="A$c9rJL6"FDFn#.d'>@HX'<_^nQ*CTcU^T:&MkGBYJnthKh*B&+HAmCmc80AK=!:&[JeCJ\%o=;i!+-'KO$^cm?+kZmOgs6!*#hQAY(6b:-(@/<A[;P8q1ofUe6V?$US#$B&,3@E#iLsAlE][225uMSP%skHP&'-5.`^PX6<tIq%%"p3tc-RoPOCK(FW:T13##VVl*!j]P%ScT01WYq!Qg5VRE#^5B=4ES:>0Eo)HXYm*N@l_cM*#?'@+9]OhiVE5*0Fq<:9K<+R>6kL'%'Ad;_A.Q1@JajcsY!I$?i8jNfp5NY-(5!E`_+_NtV96:Rbm=ZJ0g3(-CRa2c!gJM>D'9p^+EEHo?M92;'u9VJ%>DWbZINo<6*S'g%5MGOa0:$UMC]MkI!g-fV?-t=uTe,Al>*^Pe.-G%E_'sD7Kr"MZZETJ5//B[WY=F\]P;F(Gj>O,4d:6S?0AEd$4!L*Q7Z>FS@KZ?B%EUX-Omt-WOcbScoJqYN_Onf%Z/$2LYa7Qu?P$7,^`InMgUHfT%!ee,$!IL$/V=ik;`e6XN9sqFRB"IneRSkf#/AW@n+B*YKN/_R0%mi]&q,RL&r`6TR9*s4&bJm^p(@FU-&Em8blbFZIlOIgUg97@RKcX&m;/s--%@FH)s<m=1dl[j;e@p9/@>fa/(%hQ$c&Ta7lX.&n5%@i5)9_$KTr:Ig+?r9p+[MrBfdAV;!sn5#2F)r0*#B^ke8;#tYioXRPr(bP_1_ICr`Nko%DR!t`k:Xp*H%rCNt*k>35%TY^09.7h"%VHNBBc%\d+^7eot*g<%<1GJ3Q?g]TUM*ufE>Y2k8`7,mIorNIGY\G)HmqsS8K'A['.X;$Qi0:?\Hn[dg80P<'$%<Or[TGK0`&tA!%ZYQH.<RW:)*AYl6aK*Dj=I3$8)Y6Fg'mrKXm'b)]A%o.'M0cd$:W:+9f"b0oS'!=6]H8o-"#0@=?nrm=`Xrj"-u4X5]a[B2_#faa%>p=fi)f8%'EesFH\SmRpWEp<Dd0arcW+:qA)dsj/0`TG8Hj`JuMf.1qFBJk)ON`(ciY]Q6jqLZ'7^G[gA,[S2PlhTgs'tB2dccEQ%bY'Ej!Y]VA0mb.(LZ/=UP\_laB(<!u@C1]H>[%^4&13BT4/Cc>/d2qsk*c)jHd+,Sq8&_M=]>ECJJdh"!]/UN\IZ>iPlR&Pp6[.I%#GM@T#%C;B?;scA/:mFkENP=aUQkop8BaV[>p.m%;d3n5oWlbC$$PTo0bkbZmch\W2Bh@GTe6pGYR7dC/o(^lDbJGIp_hP)7;(\J%1IT^+BobtK+n&7Q%_WsZ$PR9VkSbk#j3n$qC5;%6H^-fu'O=7(kO3L.5p0,1#WU=Uh%P2k,$f^(pBXVb.p5p1PZiqtZ3n!g>`Zug%LjBgW>uSb:1?9c)D)-;e"i@ns7":.A^(/VunjD*f6J1rhW@=cYPO#+62XoYI]FBh$6a](s,JP3*\0/)HAAU>O)^)_M@XpbS-X@Sj%/ch!/_n`-ajTBOi^aLK[!)`CC>"jd0h3o;KOiWOWDE4*#g"IZ]#RJ48ii^1(D&MtT1eU[W_JV]8/'!`]b#9O<DagU61;Z?PSIUie%A3jV'$)ZEdjQ`]m,R,X&go0('4;GLe%\s9Sb^qChjYF?jLscKpNmb.T^4LW\%HjGS0u3FW"D>^/l8fc%KtcfER_ri4"B)$uABr1K%6HCo9N_U8lB68P`N8HoH(%U(@pt`rq^prP"Q+[faP$]]?)^9TMdkhVq9GW6.DSFZ8OoGXk;sY*hC9NK]+AB13FM2o'HrhRDBt!e'%"s4s!l"lQp&t$L"^iX&M!/$@Y>#(.ol1cPaG^r=r+<5^Y>7#ecK,@49),SKWXQV@+:R4g?1!ld03&Y5X4f0SqLBJX.W,*4]gl=qQ%+jLn;AEuT]bb=82)CWlI;IJGroFRN&<k@l4oj0>(Uu!/^@H\/1N+FPc'cPWF:a2W;Sq`3`(IL`k_=\A5gPC\gXiQ+*RAQeZ)YFU)%jVqFW.<#A_GH#p7Elt@J8/>n0Lm[VipW0(^p0qUWYm`<1")<Al6,9r`aZoa](UaQBA-luG%g[0s79?cp#dPk\d3pL]#%f$U$4!Ai%P7,8'+]#O;efL9*ekQ*gEF;P/GY*jB)IdaAjpXgO$WF"!-*$T"5f!9>pc^;-3Q*'2a0Xh.8i:FKE/.A5Z0b:]g"=-O_]j;l_*ebp%j%I5.Ms(@2_'YA?*uK*+O"`_BH"a"pUdof;*Kc\$WiI0aY?X0rf:4]X7+8IpSB-2InZ&EuaK)0AV/[VE5Ssb87t\5;VphhlO6P9M%bG\tC/$0P+I/Wf,StC>I7`#NU.TI<lm2f#8./"RH1R`HA==i/)ec:>KGG/$jX1=4$JO).q<]r/YBr+';OpVKGr>BEn2s6e(opD>O%*D2cUhKT'HFob9.oV*3!Pni9g#]^==!6]iaK;^0F:b`]!FMt^VVL(fE+pk\]</a6Xkn5k"AATM2`Sk@EZ>IDdjC=Tsn2o#+"E618%Q5$8u4q_%!.oh=lRlXu:>Z1n_Vg_=Q.cOJ;YX!h5Wn-=:a:%_ElPU8De-4f`)_;i7D@,R,5/=Q9/gS<)4+QGdR/UV!e@H3^"l@@g%#H(']5R1,n9GXk-]bqqLbpKZ((H5uW&Uf;!Oq@6sSCWi7KItH4MQ/%#pI11G6r[CoYa:*=-W%mM!f)`R2'PR4f-JRmc&@^`L91E/%pg;5_M*_uF(b7U+!jE7V)@?hl2%1rnTpep&[>[R"'SpEI6&:&k#gp-Gq5jp0*W]+7M6::.<;Tle9Q@.dK>L!I]suG7%-uLL=96f4%14p!17.ruP.D"t%""NP1n51ltD_:FjL]BLs8Oh:XO1]A6M36Jr\9:oMgmL,j8.hR]O:H#f2-k<SJHHN%q*`\#k@RO5![J5-FAkCZ%!Q7BQP9=Bpo"`s.M]%/k#m>"9n@KaJ2o7-5T#,Dh.XZmthct1B6=;0.bXI5BU$i-u6=&?6<4aiD%M9)t-l3@nrsU@hqZ1;IK^$^P%K5Vb>ZXFd6UpHM@2f+me0K?&9?u]`E*:?O6&KP7?Ms(/IY_W@3dYF)B*E/(aaRCrY@hTbk>&J1-h<06=+Cu-r(]CqEXY9ID@FaU'%lV:2W7,EMLY#Y/n\OdLu#??\4O>1OM_1bGp(fpSi(%gR5bT8LDl8c5K$lt?l)KOPhd(k$Z0[XBV))e4Z-SA6k^L@DU;'2?4a:XCC%>C"-rgZSVlfgZ3@SS`J!;;3M=QBI8&epVX_7g)<A;NOlhIXHA6R%BiiarSN3(DnY0+2Nej,b!q$61C,GjuNoq_H8UacBYqdTpF,:%A-f/7ZBmES0t88,KEtMGRPX@]Pg.AWk!^G^Uq)OWM/M0[iQLk),25_U"')iB)/#$OQDXf1Nb%LH:]O.hU%#A0FK;HOQlV*$b,sc-%@#]Fr-3p/H6-uWc+9Nh,q41RU)`\D:fk35tHQrrNgEP27N-Kpt#,ZKCCM.B*8&P1[OO.GRfd.3:A9CAH$t>NE=Z.H%ECquG,U"'s%`bp1bH;&hLP&KU8"]sXGa<d'L_I/JAiQ@SooaN=,b9DuYP]_U?9OaS)O'E@.HH_,a)=?o.EJSM*/Ippr+1rZD+$@AiGue0=5pLf@%VhbjLU!8r*[PH:2VW>[!rP<b_V%C>Z<%Ico.CX7Fa*9g#$*U_W2a^7p7LLZ]MWmq@*ot3i)hTX$=bjO"-j2qIU4e=P_$ptN6t*Jt%*'I09_k<?4BG_>78,O\GEdYY0*GQs_&;fLJ+U01"'&Vq.O[6IT-5P_'A.u&E%0a$U]q&"\OVLoZNPMg9&hJ"k>p=6AibiA8nNPV<%X4JI+-*)"k="/BE@7_N[I3s?\WoE,D]E_&lRnNs#dE5!SD"/QMHPkERU_)LC$tqT*+"Mdt%gc\;2f:i0o/<bMg^8cfL1UtkDgR,T%AnFCOcD&/2mIp2bZN53R3j&bT21V*mX:K:f(i,--K;2$jXr'QqUE3ORkt8%6Wkom:pE8@I7,&jtD6-?#Ml)2k_>uJC[*6K$.Y;?P%\sJO(@nL-i(p`6,B#o!/X"[U-etr\)'h$k@U^@CPa4N_3Zm'ODIF.LF>_Lib.7<FNA/&te>ASYT4F)CLHB>I(JLp>]j@[QX!n:5W%-BLNN6[S!+d>K[lQkrGHZE44+4ZUVR$>U\**%P$(j^$J%Z[a/!J5>q_[,*Ns8m)k08l9(,>(L&Fche:U$)(>_Z^a?Fq&K\(DQT^E%7a;l$V<8HRa]cI6:iid,re3Cq-m(!uj\m)gYL<2<JB$8Q,Y,^n))$5Z7!QP7D<-2*lN-cSeaN`nps@*clQeejJkM@DGC`:U-'dpC%O:qo%em,-[OjOPD7eat?_+eT>d,)>TZUYEjG_,Cb0-g\/db#[?&iC>M6J1,<5W6QbC-Q=">HA?:M<VbZGm?gb+LFV.Y:T6,G6=6J%fSuQ]?QcRH$m_9k^Zu'RN!pB2^$h\e8'N!m*W<u)A>*dJTeuXBoZYZkZ;:Y&<ST5PKGH#`SQI^#_SJeNaCml-[N(R?DgK`4;(D8K%3d?t#6Z/sYVRdkiSZKS[E>LAc.QD3a3T:^F:O;JU`',%Q$WIM21rdpc6<BQ%k[>20K0D&FTOgP/Dg3aA*f0E6U,,rc-u%6C[=[0h%?1?d/Be&ZX45Dt"b?`hROCX#89Ua;u^]jIYK]rYC<3)aQ`pl'`JKS/n%22?nb=s\JFFu.!4)`1QcoX[^Lo$F<K>b=9+Di"lU&(b^%Z>>TdA_BuBqK5u._UkPlH4)F,jhRNt5WPUD:9B;82XU6s=a,\Y2pu2^haif2qF49c)!\Mf2Z#>Z^A9kal;s&2FfRmOG!Y9l&%'^M%8D-ROQ&CSFO4QO^&-d;>8cdQh#1`gkfFX6aa?6:i/t8D8#S>+NH#)Tu(a[%fB43$KaOeO??<NP$M:`aj]'Q-lB$"gmSM;6r*id:0%;assmCa>e2+,mYGoUCMmA.L2YLrUj'Q/j"8o9P7`ZSnK?>Ua[2>6GP".q,(\`AF$+LZgLS#+095O@$W?C`NR,:?BA[rB:TPCLiO3%#k/n2+9@$1)^%HcV&*R9\c<K@3S"[]hgk5@8.!9[(;#pm'N7j?^jtAA0JS;!g,_[dn?F:l#[?7$@$"Z-\6%X*Sr<dPdOT(5Ts?gP%7KURI>-\]F2b6EtJoVcMRUR-;OEoD4YXBW&WCJAI$;KGl$YsHcmuecf+>[.g73_=G-kZg/1(u'@0ld3;d<=lM(U*A!e]N!cJt*U7%IQ4r#cj7akVu5Gk=hW\?VeIV<k;#ZmiB&'-M'\jMp;#k7(I=IQSi"'W$Uie-dV9;?Gcr$6Gf@/T5Oa8=j?u(cCDE8u1PnT[!G2oL%f2]HM3!>-[(rrB"3OqG'#):l@3drCGr9@.s".M=]`puo^.IWr?p_VZWV7<UAU-@Y:G'1IU1I<WFkl%Ua`j;<fQ5`,O*/SSp<l&:0%C2I?]5J126P@>Nh"VQchfqe59!Km/7(LDb$")E;2g3\;_<e0^`R-meV8s-B[@oWBQPMSYf0o@KF=AhF1o/%#R\3jG6.%37%%hp@a%"[9g`7-KPCW2c(ugOTj@nY?s4qFDp&j=RN84Xe0#n>Q4l(Ib?ubmr:B.R,0T6"?<f767!TP-(g8;iHlESXpKhae]d'3=@]D#\n;Y%@XLgG5oCVh$3%K_WBi\XaG;J"$lL8a1'EJQ;7.9.2W?Jok(IH2.<u^7/1[qa[Q0#23_W="4``^mk&:1^Z^`4Al_"R9p2!9Rl=0Nl%G@FYmEadpsn3$u3_Ji6Q@/<JM9uZmb#OKkE+e#B]A^')W\sA;hJ@)mI.+j1mGpHI$s/LjEmMr&4`1K:eJ<>b8h^G\h_>R(=fOn*&%U!ln-A[q^95([&)#'"ktcS5u]lBN%uQknNZ&F'\9Pn@KuV0up+M-<eHrWlGooTD&Z:%VrCLr3n'&(m$CB&c;r3?Z)o-"QeOnATr\%=J_D'M^=!DL\Gj%>-`f@^<GZCVPpP*3?(07#P#mF1dXH%k:F62<m4GIR-!u1H'AH2GV6$gn#2CFH*+Lqh&+uMYg6H-km+%L+AiV0%TtQ67r^]c2`@dCSpp/6PiAX-327%[]EVc9$S1bRc`'EgX/p9o6aZ*JI__u%T;m1hEg#7XIJ4^BM10=RlabIS#L'!Fr;^#6E"0Dh6%&H;1_+T5KSjd8N_Wn-%dbtFG:n<c.NS>^:$=t2S)&!nA;<P@pINSk4cG%/X?LKb$En%qj5+Xg@5)NCoME8Ys13'6l/A6(Dtai;-n%`\J)ZjY$P8ZiVR-CEnunQ0IC+$cGsX8<DN_E3j3t8g@Nag_qC-glL5]EYDCEOUSlYPH9p'Eq(gp-uDBAbt2CW;Ncmp6Nc3(9o0q<%GSSBQ#d9EQ*-QpU0$f+d*cLJp0YijVW4/)&Q?(lVMhM"q%\OchM??8B1(O/2.#CP#('[mK:d?MMCct[kJ:PfMj25)bo;+cZJZNtt%/E[>:S^95e\7lFpqt[`NZ$qGH@t\Ak+>uJYUk+skLNbf;;^t?%=CNrgd:dL,=;9d=_D5'BmGMOXr#9'mGT2_tb3njX+GGCO&'B>0%cb`ohXS*.#`USs5`Ah!Z\V5o)SUgWJO/pXN<%KPu/eFK7b\%FU0K7n"m!F:KM9JBoO:V^,'G=s''GR,E@mo7EIWFTc/`O@[GeW^k%b5<!.'A*[T$YW@<12QK*>QrFmA5qbHGb-thLj^V$UO\J7TEF:Q0Da+-KaPUP3b'MI(hm!9#b7ZILC#cob?,nVSUdUc*<UjKMaV^$%aGnBP15+'<XP_FJ"\@T>Z!C>l6hZLUS23IU:nhFJ%#(4Tp721T7kb*Ykp9bO8pnus#m8=I^rCbVA0'00V_q#f(iou+5!4Cc;%!uH%YOJ3(F7e_=C2p"(J\/gM@5Ir2+^7aVNP\+::+c7QFFjop)j#A@])_s`.kA0+&H^KcTtCbkoNm_H4,g"@%06dbdZQjY@OFUi0asis%?r4'/@6h?%/Nf+pCStZ0THK:M^.#i1MJfG(N(/[i*j`qHA*jc=.4tlWQ^XmMI\e=(,q'37-B[Q]=pSWkK%)$(5IO`"`Uf?(AEh8O%h2sFgeJgcU$)CiB]G-QAK*if'"T/Hi_CB23GtSpgZQk,.;dAVmqca.r@3h&jLf.nR5S46/&55NO3Zu8GK78[G70s'ZUZ,==K\(-2%CW!eeWN?&(bAAe6(6mR?>8]^Vr$OK(Ge*uS(s)Qn990;F`o>%+.1m704Z`?C(qCem%_U6AV!60LjBgDj+($$(K;["VDClcFS56D.%)3"U""2+8*$.$KkDA>!Z?q_J)7>ca1eDf`Qf34OB&)*d4".e[L$khL_B6/H&:aq%cgrjst'K^V/'WSR&@RVo1/W5&YafHD@FbRq&%1ZAKe7$POqXE[ng<SAt?=-t1h6=&5Q=giLaC]KQTg58b$_R_4#>ph&MR.S\%i[u#R3:+3WKao9g)EbLs>1Ti7q'P"YZ#74CeUMJA%G_^4RUf\4C%?Vt+T&=sS(qL!4<S91b9]t`PSi&hrN.\=0SN=L[:m'%]lYb5akluaJ<3qJ?X!Y"rTFK$S@U#l;2'CCM&$!TQ4LE$s%#1R'O.d)j8aoMR%kP0.%`?PXBn-jV/\/_XeY<c<!:4*1rKe,Ls4X+S$@j=;kHij(<LWM-X&#%(Si+40Y+Ts#]P`D*2GPE6G+*,IY%Lke86aG>FP=5=Mq,NV'7`8<$E:qIJ\a<PB4_e:J!6j%O*=sLg<0-<c_6th+BCq2-$,Cmcdd3Xt']1JA;h`c\=^SNWj,-<X,OU5dt%?sKQ+!E![)mhKB/-eG/;NPMRm@$eaB2*[L/:`W.k#=\+_-A0)>Y:8/5*>,?[ffRF7#ih<E3,F1k+6ib94j>`8*-E/M$BTqH^@O$>%Qt\;S:mr7gDrP3SigN;-!'Z,#n;^fF8&jamN-oe)=8#_565<tB6n[4IjIc:LG^r%W'<FV:%s(CT?XVrd8sEZPcG>`e^VIY?kP,)*%LJ^4-Z6jY)L'H+@f@-Ch]:MjF6!:jSLNC*!%<FXt7134FKn-*%fJ-MdK'u+KQsf)YmZ"\enOu6+\^;(+d)3S%)^HgW_-TWX5\;gH%S>5b0.fb#la"@coID^sG0mg.Ba9dHC5O&DLgu'Nd=m:?g&2H;P$M4-V`+50'rFf!Q<f]iK.!2S=Sq3e&B,96P((p1jWbR,NJ.PL<%/!E'Dr99>dic0TNX-$[GlGF!i[7GQK=_ee6#ACp`>RS&i9oE)R^4fFW5!@,'FB0Ps>XfJW@Gtqk#_\;+f?YR7$L&o,.&j8sPH[p$%bVL'Z+J1d>hLqcCcjFMil[6W21Yb";E?*j?30^tVJl-m?J]G8NQc54jLrH^K3#!j?]g]Z,9*6mmrirn*cur*cLd]UjNah_8`Xu["%mjL%F0RPVbC'gL/8ZW*380s3_fu<N"6Kf[]_Ak<c=s&[7Be\]RB#mgclgh'b(S\hL%80N>*G)DW%@m,gS,!U?M`bD$G[!0;+FC4g%"0)iAeAs;S%P640=kahin@='$ANW!bf.7;Dn8O2>bbd+eX[/0+"&i0?0$$MNReB3FYVVL2'/jb7EV'<p*M]\m&.#cI!YXgfP<7EM%Oa!4Gdo3Zc?q*l6bJRJ2oP]1G*!OeD)!<bW5WC5cD9msuG@7gJK1F;g?q)/GF'84G#*AMP=pDni*6]/\(JT!e5V/=^!P3\K,e?Bh%^Z=0.SrPWf!'Ck=OO_8<M^\FnI'dEOJVo/5'W!P-Nl6mFTWH`:m2<BBj<Rlg-Bu=MTU8DgHCZ$!GbCpQTQh<``PJJkU+$5PNp("V%lOLa59F1beGm5*kDWNOE<:_0MeVf\#Qs,VP*SdgupeV4rL[GcOX<un"R8Zb.9+(r(N,ZX9e77to]N?Bueab"h2]H7NHM`'<Q'ME?%(_\Z2g;B<"Tiq6+n7=a.PS_l9nUMtX$i21Q$mXj;-Bk6j+?I``Ad&;p&@fu$@lKhl;\?p.[!/XpLtqh@b"@CT[X6WSmm:u_a_42^%1g?I\0FeK2[X8S<%7V]NPD_s4^3GpeQS[t?;\13p<4&/nO'1+gp-oms%keb^4GfmB9k"ch23UmP*mcd3l&(U`R[-XQ?gsh!)C*4-%,LHP^o!Z)8k:m_SEcDLY*&MnO5/o:4K[_[u<J-(EpcOc&PPMG8k5sbGEmBP(,,V\M%PWnrJS8^;30B9uC6HOL##/OZOO8I(=)BM*%P&-_.`Mfb?Aue]Ri[)IsXOKbV9O$I48H[.SdV(.9gIB,CeMpBsHGj2e3_X-'NP/1f]>60XMirJ)`Cq[1SZ/7+M@Xe\r>G(UoI-)`%&'/YJ8JCHfWED4apb)>,1%8`H'JTc0^h`7*J5!oeC`leRAfHkFBk'5T&U3m]:uo(S8VO6@C9MUnL5?%iob6Uie\K#6TbPct3Wm@=%nmMaTjFAXJ75]LZcQM9s1525U2t4CaC:5HQ%j\oF?+$Mj[gE+[.]/V?]Xe]:"[AiFB;eoi=;If:\f-)aNBA>8g,#i8?QcimSh?=]%i!bb?&fTrm9<1Tqo<sWI@lZ'2h,B<S_)mGB1-\PG-6coQci+=b\HSdd377j22?6nt+U1L42<?eLbH_eN[A$&q%:jN@8^#66#sjm^%MO2ltTViJ"^28e&RG5$S#b5Mo"1X5Bo4Rpd4+jLTU1&0Ier/c)pl8F`cl*$O%5:>1a!7]$?Op.,K#fb'3Q\\qGSNPuJ5CZOl7CFW%_\-8O*SbLs\aNpeUe'(A1Is<Wg5PBC(*#Z+*?(OO+/NCN7,c:3#Wrh%boPnM<'BS&M,$K-1;VJ[d;$37lfa&\0o_46<5`j[1Va@+%0^KXS]YK:nVaP9F;:0:t/n/oTX%H2.Zs!n_O3H_u&'oS<XcO!n6eO+Zqe'%;-q^70KU<@FCFW[%j6*aP9HoD4i63H0<Cd8\&UJ&N%cj:,5["l>.F>M@r<.<YZ0I@1#hZj<u7PaHs\IkS/a_S1"aP2'[[,Xeh,54g4\Q%OmG$U)Z<&D.;L6r-#d0M%c&3O)=C1B57'F8(k%63@:)5k$a/E13\n:r@<g@]8Yu`s+g6KIqetcF>NdqW@9`*"FZp[>1/0[_.>(T/[?8<Z_S!QiWor08Vg.ns;h'MdF3P/UA!mhH[o:%DV>*mmq7lZiDjGu!t.eH4G1ZNTt![-%&kp667tJ@5@S)q)9g-V(;.,-ct/E45VC``kf083BX;lrp^>gn&0#<ph$(<8KM1l4]a1l)%GW-$a+Vl#CnI#ZU_PAcBDAgb/O%$DfVMSuboYAsB]K'P9k4YTR):3c+AsdCh0Fe)cV,0L]d1SVf$soB84<.g4JC"Q.-YbWdPmGIN%lM'iJ2[8EoV'=E>b(?j*(;4Wt?55-6)O*V_jOT&%UC"2:USQ7iNZo+GF^pBs$R;AQ=G4iV1gCuQgVhMoHk"L<ldZ[n"*QNU$7!Tf%L"ZqhgYrYp:(;85$k%k<*ea$F"Ao^`37Y'3@Q'BCJDdJ>10ToTRI+*i=eM_1\7r\r20D;rGPIVq.<:K'Z%HS?R0X+q;t3O/icK")%%El/Tbp'an'WV6".E">2XMhC\-u4Z1'Q43tBq7P$0;tf#ppX`RO/c1_FKbM]X'gT4O)7=YpK1PN,SW&E)R]>Khh$RfU.3Zni;0)o%2/9NGe<St(bpdsSS"@h<=6/o0+D'$c'h-_Db0T9n(VZPgpq`TSBOG?YCCWFk,W+<l"\t$-BF%N_"C0HEB:qZT,rlZVDCgCu;[1X4%mJtI>h\qoOq,AH!K:1.Cn:)Xq()\d8S@pIp*+4lsLj(3+VWD47O,DOLnFRAFF2%2;9g<Bq=CCr"O=t1Y5F.>Z>ZjT.ko[-BDYK/j%'F.1-dXiHO5B<PD<L``cBQGL0S>;U[bt<p!2%=s$0mb.hb)tC:/KLglEtDQHK<usYN*l!BUtj/_B*u9%4m8?#490qJ0SbNN6UC@C%R)UKbK3.AT1nj_u7$CLJpsK;l,C9B(O6QV@4f6m6:eS[qKjfZ5X>KLa/1+RdhpP/]#QgeYM&06_HZ[/TMXdoq@.]6Vg$TlZaP+t%%+QV%@cj\Y:#AV6t.T#1m8Uci`2a"#E!G)Cm>^(=d$j`L/G(HHrYlckY+;YeH5a`_)@1+nGS2PWGg4VC*W'-l!T_=bL"-p(/1@[@D%mkg;;dt*C]VTQ/q,e$8beC)S?_CY2_mG<PS(MD^=&l___ZZMlVfIKc+#rNa9n&<4nZF3`RrfE^*n=g8>A1;r;b"HLCb"XPSLk@>9%W/#EHeV2C,No#gHCnUP4`H(3579pO!*b^\^Yhf1RHUR<mm4h6u.Ro$4]-nj9gqX"!ih_DsW8%/.L]SLcg>7m:kdh`\Xn0!=,O^Jh%KSY(O$<i,HH%\*H4Gq'?=edn"*@6U*%8e&N&u#"#d/^E[d2P=d+aP!H@[i]s\f/g&ODW<XjB9s%EJ"N.]GL%rLblh769CgtnFUT?%XOe]nW4a7Y%,^A@Z<Z$L[q?GiLKk'jV\\;4\E@5*9LIbJX01LaEL)G@q1==W+<,<J"%3sP2o'6!p+_=k=[k$S;:K2OSkL,GNK$=]%8<;,^H8Q#GjAc)V(WQYNMF)%[>t4P\Ld&,Ja"/J4B\aodaTS)5@^3.mD9j=t$9>^QTI>$SEd\F65d*\FAt;F!8)P3EcmE+t(8c77%VHfpiG&A$F"q@+TIXlE4Y:un0l.^tTb_E+u"S/[FYSsRMOJ+?[3>k),hC2+554bMVg*@`sF+[4EG?QV@AEJJ8O1mE`NgPrj'74:$%ah9*KKA7^,nTp.&FtoqRkGBeJ1+G:aRe!ckd7j-Ma$-ObQ((#ri\6>%+(C[d>1EcX6Lo;c#f,F*5#U@@Z)s(nj?GD#B1Id7=4Ldr%7'S\f'F(rZf&pnQj2E-@@dW>98Z[>5-a=_A4q>1+Oamj;%oim/*Z:_ZO"mKmYud7.A"GMMC:,BFaMip6DNr+srRqbnU*Rfjk\\Ji%[5@4RB(?TFRMMk6*#k*iASbs!+>B0X>Ok'Q^Z:2Uc)gH"ZM3=6R#*+42U_2Z02ZuG/ZcoR0::>:VFTiJlu*?%O=N9OKeJl1-9l+&%ZaqD'78@X;D_R#>ko;T5%d`/-[B+Q4Zp;?q&f7Ii\0\?I1"4"NfLe8X)!jld_r%.dj6WIYpN@@.0gKj6;$0LYq%T>Q;QZsT;G(AR%6-3*D\60Y"L=oE+9G_=q^auddZn>e7\qFZ2PT;:f!o_i%=BE,>Xb3M4[c1kN9geg*0TBE^4r$Brl9`EEitj7<'t#;eb+jlp7s+Q(%"&,%'`GuNuZBQJ)4*:9qI$qgTeeli,h>33[-CAQ\76@h.$sEj/U%1('Jt16Dgh'3<$Z05kC@quKU^!2=6#(pQ,Y4&$,AmuZ&A$P?%nSNn8X*HVD^1B"t_p7bf-%LC"Hn92X&Ks'NdsmeXqX/'9!,87l4f]\mmu6i?iB?SX0LR&KA:*Q!)#u_,aUkf;2??,i3AkBZU509Y%#mV;E<<^naF/q""ks#2<?hP0/Su/sQ3?g"?2?E0__L<(,_Dhl=esecjRr:>aJ2-,;d*f%R:E'cX;=@`W1?.4sF5bFc-ptqiJMP/[%<p@J[=PQDa23[uTmjo])i&tm5\RK0GVBrJifU:8$XGCS%I#j7@NM7DE?,0qfQ*_SI_CMCqJg;%3#9pQL=e@/W?6,!E2(\YQR"3dp%OC##?`km3,N:U.jMr1L$J)M=Ia_8I%E^%AAQmTR8+/ph5H/Uso*f1ML;j>p6C@FKQBnl#7)G-^1XaZJOO8WSn_d!RP$#;Du/@b2=%J5AY'`d3GM'U4)"Hm2Z'(_@$e5BNA7ri(MX8>D,36)4hrc@qQlPXsD`3j:dj&KP+5WOWqTX5W@<-qqEs)(aOtd\ET=&^+@J!X7sf%S0HP>,IBK8_peg!@4^k/5uh=DN@7UBFc:F>`$G2a(@nE.7S#m4Kb/lgXEj)ZC;TS7Q1\>gdphjO"!7EZ,BA$-'jnsb=t!KZn['Nq%*ukWQ+LAl4OiCcE:ot")X9_a$9?Q;"'Fnu2fOn'N!$eamZ9^=2%sjp@9b<#`"I[*,CJ#Qje5q;NmoqN/%c^dC9LM2:1?o%3GiDU_%PSde^)]X=V/>?T#Ls3pNU^tq?8dqj24@>*KYoRG;AT5$+LG1o7LcLdK_KZscMZPeY5NA<!80:C3.WG]5>,Zl1(p>`!>Bj?4+F4a(%A9Hq8(V)p@U:K>iA0$InE<Hrk3RRocRl?7:=JdQARujj'-j%0i6k:3El;,gj'1Ck5D)+e:64_:g5cO!G;"ttA0!<_763:+T'deYo%B-bg^Ck0QP-%i5+C5nPe810I%^83jF2B$`L51cu=FdZ(c3`nl$YM=EEkV@OLb"m/J2Re'b_:T.PBa9EsXn[1B!hULiX<^BA?B:0N%K;h[?]$Md2:l;ha21d[jX5k_cTe8m5K*D9b\W-]u7X]X7N+LXI(c;GUHo"X#nn[t-N8KSB)Jg'2K,dD-G?I`bRb9m,6+8Gu\,i-+%C#`<W&Ki&o<mg$kQW)in#.^M`DZ0NG$ln.Qn:;Ku,2a4TG,CC8/LEVlX;0EU.q:W7N$+ma$0i;gStVfCkgSRiQI<R!jl@3K!\99i%Iah"%+Wo7e:jG+b_;0Ytg8K5Z%1;AL,4RZ@\N$lMEE)UcL5^F)'?e5@35FTAP6&F/FdORUKEH*WR90MA%)5q7lkb:,W5Ag\6678V%r/_k'!;HXoANbWfSFRJ7\H8uJCXF8\at,']i'j_4@$U?-Ek^7Sd99SV9M&"j*96[e@MX=/fZ4Ch+s)LA1!V+pbI\N3TU'c>0.&8l%e1.?;HAJ)#aY^BeP_ed30du6anfA\*E-K)V<ZI_S-mD_)_<Y7t9[7fl7"gl&K;u^g./Q/3@^O&_T,GK%Vke5>0SgNo\e;F'%O5gQ%Jsi;Hi&LqsrM]8:l6mr@=bq)\\T(-(J(,Y&6L+<:Y2n00?VZ0e_FmK+XJTrZ4H^pP,7eIH3T06E?;q/4RE4.DD6)V%l<]N8_)LnQ%(^PIZ%^Z$.J6-_XQ5ugX=>(r;g$XrQ""P3:8Tj-RYZ;qbRY%aG?`0f-8pf9G`L)Kj@@2^,'(mm6#WgJh--gg;-4s+q.Yb?g@9j,k%^r(jRjoci:RE@k=CJ[[Q#?EQF(b-)cVNIcQ&j[d,[fK/':D?jrQjnrC,&^O:80MV!$&'T,O[>6m3s8m[5YVq9C>1!*4"0Y-9_G/U%MVP0:!L5OjdYlq':dp@mn\dA('S61$,Yc-FLC,k\#A*?,UG$,=K9/#<]Ghtt=PBfscqs7-)A*6T0R/LV8.#VA/1T/Bm(`Up-%^5_%]-#5p#jhmh.BWtB_$(02U21O0eHo)uW]nE<Oeq;GrL@]oCdUK29-o_;)[HM`6Ro1N_tRY;@7PU@*9d`d_sC2(F+gJ?*bqE89R?T]%!g?h@R'>/3[)S.BCHsI?V[n5m]P!7=TS>'S4G*,)`2I/p6o9O^Yg;T.EgL5i$F6?_J:gYWLcCnI!#O;7=="JhaXt&h"sSAhJ2uF=%4>)Y<;t+IJLX9<s4?[?_AW$@[5f5-BORQ;h'M1V1$65siDN+rbDfW(!O3hs+1(:t&`8dd0`qBc?%u^"L()DbF_I7M_Hk'-786I#V%@61BH2!$QB-0**"LBjZ7mkMs*=9_e#:tA189IC$IA]Rf(,j0D%e[75g/6GGW_=TQ9l,&8eL]PQ3]HKB>jOjoJk99tQ$oln]l_91P%cO1tD7`=h1LBL.;Qmshd5JsQCc_Kl8>"*E6jj(9I%4MMoTbJUO<,0=U/\1KR4d.__aHALe+7u*hge=dbV@U&nK$(a^!dO5@+VJdH%D(')i?)-[Z9Qs)Bm/Ru[<F-JEdN5+1W3cc<I_sZlBPq>H&WNXq8N,Uk\3VcUms(I(p'*XTh1a@V1P-:F^!+n<8d`NGm_%@#gl#I?%.M90=9]NN?9$/GH?$neN6HO6N=Q+,UWWcM%VV9I9Jh?%%XS"A@,*:%mM6P!V<NE"Go$E9`m+".p'oSB>rhQbD<!>o0'd/`g1sFrX%H`U;F(Vb>S6pDTnXBQ%,),:X;fuet,KOUi/=D[P3;cF$9HBDahKLe!>'jT2UUkCd:,"aTKMj6=DYJeMf#Q8`a+13<pBe0(U.6B-T%LATV=Zuj%b8&K.j9D>"oK+lLeBo0VZBH<C#,S-uTUHPsnBaWFQe_aqd*+-.4W0?#:<G>CmP97<j;Cgf6B23&Y-l<b]MXaEiLe'Te%&AqT%O`D\@$#=\&e0[T63hicPA48+7?O.=0cZQSu6d0"b;2l$aB%=j9@Xgei@LH!pNa_,/M]mk)$\4<h>p_'1aYgc70UX8>qYUWH%mE,E]pX]*d>OZnqQ3F-\n$_2W_oOTUGejQYF\E<LSB&I1Qb9#IN,I&)%NGZ$nHMfUL*5[KS:t92JPS-Hjuk,\/-ni'>sKZgWt,b4%<76]WCF&NPZf&WG#;bO1'9_Pk/V26#'K[GWf.=p1%gPe)2S1+s(h&a.!#<b?Ol21Q*\JT9^c@H*4:hhKbe_o,nK7rsXZZ_S<\3pJ%OSE5"&>O6/0__hM&(EZTZpAk=:fG2"iGT2`ZQ;s*dic<gq;>pSMN2W4@DWtX](e5nFQe!%(eiVi.TLNDB<q1R`Z_##=ep);\]QZB%<^\TC.28QMM/3gH:[M^"'uGn8cb/73D$@_:Q0Qo^k0t$6Xg)Ad%D$XfT53^8Yh2df&R>D-$D%NS/1L0>`lHIJ,$DO^r)\73ZG2&^%R-oPl4U;U`K<-pW\e1gOK]&JWY_6iW0]8*ZPf=ULhN%g"A#'LUZXIW#Wd=!nBa.cM:jC_o=F(,`^HP1mgC$f%XpLd+1<F?Km$/5I%&WpX#9[9`+1VuOLkQs_CY,HpjU<#"q`6/gHLNF[Y^`R4DKj&j[5I0KV''1<FhXJ>i/qP5ofN>*.,B/QdEA'NUj$[m-:)R8ZLnkP8%?#+F5UE4<c%D\>N(lK5:a(5(s<X8kM.T:-]!LUd=2(Y,K>,@7_AI0BVd7O>R3a#`eD3&hu.867.PSf"=g@G%VjnpRVSEBJYe=@TV%$VX2=Z"5&<9!87WD/"*-=''C[cl_GP4t-d=PA+iXlP&C^f2D9p:_AA[%0_M/hRkZ[N8cq![Wlp,K%:p**@`.o#%BB\D+T_->;Oo7%qI$W#81-o=/Z,D&m`mqc5qe%!bc&2Y:S\p\?]RH`\jR&<nuGtHV$/3Fd/e/tJdNJk%/Nk6F&3u4eoDP5/-t:CPFT.65jq#-(!JL0%%pj/Iimhcm41';j;cBeBijf+&AD/F3<a,2-$A.hW@,&EE@=1^$_$^^S,#j>;P5kg$QM;cp7lMopRTP1NWE"DgNCTB(HCsEsDk!'*%(M167#@7Z5A8oi*H$+pskdc'06!ggjIecl7&O>o\[64$$":E'i\j/!)5$aR)9\P(p.Srp7r&H)%o>Y8R*C:Qe1WZlj73=O&NB>BU%CnVJi6e6Q9"qb[#Wiif;W@cX7k!uI?^ln[&UUQ45klW13^,E)aa5^`.Q95Tf8uW4$&:.-l`GmPh7BGn(GT;WL7jgVj$A#-(3P'Qj%m5e/!NlO2Sg'6n*G$lN@8n><W#tF?G-@D:R9cZ":[[*c,6Vi;r*uTD:L:T(UQ_WgHE,]4fj;WrPaLM(cSbo'QVs1Ge,t7s:3q8mT%)msk:&qD/j?6=6nYf=/[gVE080PP/L6kic,%+Qro^RlF-RPX#J_`G./r4+si:29m&+bkG#rB3(e2r)'7q;nr_2ATFE-2!Y=&LK?D%R9Yn,%=@rg_(AT+?khi_kZB(#:9cr]*`53aZ^)ATU6r=aPno27W\-!C<V=VN(m@<Dm1?TXB`LEG#rMsfn+CKrEFNsKoVa&bQAAT$%$_t&L+0DulZrQ6sL8a6h?cmcHO5=0V1/InQKN_1PfYZ]Le.8f]h+d43YrJqg4XAAqUK+3/!+V.@g4m/N2n[Nd8J+a-0Omc*#d_0S%]\PkY(92Un/pqlhGgsWA(`l?BlJCa*e'N!l#dJ=KC:18LB&OW\)e&$mag<aYnk0B[&4Fd&=j/0[9KDT'91U$T,8%56$tRIIq;9W5%)j4rZ,.a%A#<%^r"&*Vd%C&L!%dD32T3mE>"h.%A%0J--!7BIf"rNER!a8K5=^rDn!jbj`"CZ"+'d^&J_.gcF=ddh2-+u,tP9F^J%$=X$*Sa6qd!\OIM;#'<jrun0M7ashC_%TIQ1t4sb76Z.[W<V)M,&F3[I^>SMoEu(^JkTRL!GGs$i7%qCiIl8&G@MU3.#42OaUGE1%aRMRG]GV$J5\M/mTi^-=AlY<hV@;>_H@p/A=]!;u!.oMqSu34``pLT5QW2^6[l]iqA8j"/4_0?%lO\l-PXU^Vj!qWUiK!.W]jIYW%/DV+oLl?)mX8oT_HTkOt#MY*2L-"tVFHF>5+;P>bU/45hVW&h/HHq.(0MEo0eNZ"gBJJAn;X1U?7)aW#*MW;aoU+Kl1W!sSF&Hm1%UBh-B2rphpVk8"5\rADePM5KRd4ibm%!k2;B2nm^IcSc<Bkednomm$$pR'6_j-+3=/IG_kjbT;Ld5/^W3-p+RX?\#^6Z%d/_rH@N%8sMkq%+bqO5"!P7$W$nfPnSgp"ZKJi8!rBrTi@SR=4QQD$,uT$fri&D3:Q\O&H+fcR*O_J^b"r#e.Wfn$2mOZf$ZiRCh($F8&5U9%Mf#Z3Q^jsULCI&*J<C\>ScPRPC3iSBkrJA;=:04rX:aS"POL-eJ?W@@0h]Amd(V96R`ieE:J*-<.BT"k2Qu]nJZL6B#`@-sX7VdN%Y^-^",K>]QkE=88Znr[D$*rI=_3@"glQ?;pJT68]3)l2S3Wc+T08AUEB&&6se][m_)PIp!Qt`XF1uAeJ=>_\0[(nq@jUNKUQK0p?%CcL'0T6=c!Ls$Hu?dQW0_ECC/5aKX^:qAeh<^J>Vb01\U[pp?Chs1<?hjr1F:.(+<AO&ihTQ.qq9d8uX>`\(ZIuihoRNAe7Bi(?K%PlXZ6Gaj_)Qn0]i%lG4e+,H86OapQi^]Ld]+uD>>LE*8o#)L?:2P_`85L=!2c6@*VLkCXpW65lS=QMoc0Sp51SNYQ[d41Ln&+khZ%Lc?iL7FU`EpX(]gp.&1W),NEM)qC%K9Pf@6jE`t`^J9,LYK$4%V&lr]jH>"7'C;.C&i/BULE<DUh1II)YUQp&7iGJZ?4Sag$*7(>%QpFor5[6RS+d7;8adknQ7ZZb/@#sPJ@#nH^5\.+a1ZKc/1HHY[K$,]IkaZ.X!m4JX_L=1Q@)L`/q'>!'=9`\ONT<&5]L$;>Tp^7H%&5gI$0`ASY")J<lS2mssR8Xup6U("2=Q(Yt5F,SX=p\eFPZBPL_nuc/S\rF1ebt%e`4<]=You$skN7'V!<$p(+T6$@+PgJm7_65k%]'4C9Z@`Q\je7I2].!IjX(<Pl6H\&+;3-,!p[]8;n_VirS#<aACk_9&[a&Lt&%5tW6<Bhl=aqrrBBfFK5Q)QdD*JC4n)(4nm@P'5%Ck&^D7ts,])"A#<5X#0%!>2R_iFQLZL1Wqh:C[kD-4m<E[`rt^QnW8uM8#O4n?;H7CnDLjH0Y+RcbKJ=o,HGGds"Rqe8=+?5?lPs%9nq3.AD6GN<l=8&5-;`Z[B5Wo5E:eCr;(6uaaZI'F8l*gacj3+]QjGKRjUG8HN%OB`Lfs*j8&D4?[r%Am?>$*J!ZJg(N5oFq=_9V%caWrPl*p]2?fWRJr8bs=?ejH5IfTJ%bXV~>%AI9_PrivateDataEnd